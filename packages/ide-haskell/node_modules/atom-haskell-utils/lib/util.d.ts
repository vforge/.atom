import { Directory, File, TextBuffer } from 'atom';
export declare function isDirectory(dir: File | Directory | string | null | any): boolean;
export declare function getRootDirFallback(file: File | Directory | null): Directory;
export declare function getDirEntries(dir: Directory): Promise<Array<Directory | File>>;
export declare function getRootDir(input: TextBuffer | File | string | null): Promise<Directory>;
import HS = require('../hs/hs.min.js');
export { ITarget, IDotCabal, IImport, IModuleImports } from '../hs/hs.min.js';
export declare function parseDotCabal(cabalSource: string): Promise<HS.IDotCabal | null>;
export declare function getComponentFromFile(cabalSource: string, filePath: string): Promise<string[]>;
export declare function unlit(filename: string, source: string): Promise<string>;
export declare function parseHsModuleImports(source: string): Promise<HS.IModuleImports>;
export declare let hsEscapeString: typeof HS.hsEscapeString;
