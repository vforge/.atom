{"mapping":{"DeepCopy\\DeepCopy":{"class":{"descriptions":{"short":"DeepCopy","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$useCloneMethod"],"docParameters":{"$useCloneMethod":{"type":"bool","description":"If set to true, when an object implements the __clone() function, it will be used instead of the regular deep cloning."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Exception\\CloneException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Filter\\Doctrine\\DoctrineCollectionFilter":{"class":{"descriptions":{"short":"Set a null value for a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Doctrine\\DoctrineEmptyCollectionFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Doctrine\\DoctrineProxyFilter":{"class":{"descriptions":{"short":"Trigger the magic method __load() on a Doctrine Proxy class to load the\nactual entity from the database.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Filter":{"class":{"descriptions":{"short":"Filter to apply to a property while copying an object","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\KeepFilter":{"class":{"descriptions":{"short":"Keep the value of a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\ReplaceFilter":{"class":{"descriptions":{"short":"Replace the value of a property","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":[],"docParameters":{"$callable":{"type":"callable","description":"Will be called to get the new value for each property to replace"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Filter\\SetNullFilter":{"class":{"descriptions":{"short":"Set a null value for a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\Doctrine\\DoctrineProxyMatcher":{"class":{"descriptions":{"short":"Match a Doctrine Proxy class.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\Matcher":{"class":{"descriptions":{"short":"Matcher interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\PropertyMatcher":{"class":{"descriptions":{"short":"Match a specific property of a specific class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$property"],"optionals":[],"docParameters":{"$class":{"type":"string","description":"Class name"},"$property":{"type":"string","description":"Property name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Matcher\\PropertyNameMatcher":{"class":{"descriptions":{"short":"Match a property by its name","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$property"],"optionals":[],"docParameters":{"$property":{"type":"string","description":"Property name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Matcher\\PropertyTypeMatcher":{"class":{"descriptions":{"short":"Match a property by its type","long":"It is recommended to use {@see DeepCopy\\TypeFilter\\TypeFilter} instead, as it applies on all occurrences\nof given type in copied context (eg. array elements), not just on object properties."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$propertyType"],"optionals":[],"docParameters":{"$propertyType":{"type":"string","description":"Property type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Reflection\\ReflectionHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeFilter\\ReplaceFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":[],"docParameters":{"$callable":{"type":"callable","description":"Will be called to get the new value for each element to replace"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\TypeFilter\\ShallowCopyFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeFilter\\Spl\\SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$deepCopy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\TypeFilter\\TypeFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeMatcher\\TypeMatcher":{"class":{"descriptions":{"short":"TypeMatcher class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation":{"class":{"descriptions":{"short":"Annotations class.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":[],"docParameters":{"$data":{"type":"array","description":"Key-value for properties to be defined in this class."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationException":{"class":{"descriptions":{"short":"Description of AnnotationException","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationReader":{"class":{"descriptions":{"short":"A reader for docblock annotations.","long":"@author  Benjamin Eberlei <kontakt@beberlei.de>\n@author  Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author  Jonathan Wage <jonwage@gmail.com>\n@author  Roman Borschel <roman@code-factory.org>\n@author  Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$parser"],"docParameters":{"$parser":{"type":"DocParser","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":"Initializes a new AnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationRegistry":{"class":{"descriptions":{"short":"AnnotationRegistry.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attribute":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the attribute type during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attributes":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the types of all declared attributes during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Enum":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the available values during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser to ignore specific\nannotations during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\Required":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check if that attribute is required during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Target":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the annotation target during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\CachedReader":{"class":{"descriptions":{"short":"A cache aware annotation reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cache"],"optionals":["$debug"],"docParameters":{"$reader":{"type":"Reader","description":""},"$cache":{"type":"Cache","description":""},"$debug":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\DocLexer":{"class":{"descriptions":{"short":"Simple lexer for docblock annotations.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\DocParser":{"class":{"descriptions":{"short":"A parser for docblock annotations.","long":"It is strongly discouraged to change the default annotation parsing process.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new DocParser.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\FileCacheReader":{"class":{"descriptions":{"short":"File cache reader for annotations.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cacheDir"],"optionals":["$debug","$umask"],"docParameters":{"$reader":{"type":"Reader","description":""},"$cacheDir":{"type":"string","description":""},"$debug":{"type":"boolean","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\IndexedReader":{"class":{"descriptions":{"short":"Allows the reader to be used in-place of Doctrine's reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader"],"optionals":[],"docParameters":{"$reader":{"type":"Reader","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\PhpParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Reader":{"class":{"descriptions":{"short":"Interface for annotation readers.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\SimpleAnnotationReader":{"class":{"descriptions":{"short":"Simple Annotation Reader.","long":"This annotation reader is intended to be used in projects where you have\nfull-control over all annotations that are available."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":"Initializes a new SimpleAnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\TokenParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contents"],"optionals":[],"docParameters":{"$contents":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Lexer\\AbstractLexer":{"class":{"descriptions":{"short":"Base class for writing simple lexers, i.e. for creating small DSLs.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Instantiator\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"Base exception marker interface for the instantiator component","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Instantiator\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"Exception for invalid arguments provided to the instantiator","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Instantiator\\Exception\\UnexpectedValueException":{"class":{"descriptions":{"short":"Exception for given parameters causing invalid\/unexpected state on instantiation","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Instantiator\\Instantiator":{"class":{"descriptions":{"short":"{@inheritDoc}","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Instantiator\\InstantiatorInterface":{"class":{"descriptions":{"short":"Instantiator provides utility methods to build objects without invoking their constructors","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\AbstractUpdateAction":{"class":{"descriptions":{"short":"Base class for things that can be sent to the update api (Document and\nScript).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Aggregation\\AbstractAggregation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\AbstractSimpleAggregation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Avg":{"class":{"descriptions":{"short":"Class Avg","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Cardinality":{"class":{"descriptions":{"short":"Class Cardinality","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\DateHistogram":{"class":{"descriptions":{"short":"Class DateHistogram","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$interval"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the name of the field on which to perform the aggregation"},"$interval":{"type":"int","description":"the interval by which documents will be bucketed"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\DateRange":{"class":{"descriptions":{"short":"Class DateRange","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ExtendedStats":{"class":{"descriptions":{"short":"Class ExtendedStats","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Filter":{"class":{"descriptions":{"short":"Class Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Filters":{"class":{"descriptions":{"short":"Class Filters","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GeoDistance":{"class":{"descriptions":{"short":"Class GeoDistance","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$origin"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name if this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"},"$origin":{"type":"string|array","description":"the point from which distances will be calculated"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GeohashGrid":{"class":{"descriptions":{"short":"Class GeohashGrid","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GlobalAggregation":{"class":{"descriptions":{"short":"Class GlobalAggregation","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Histogram":{"class":{"descriptions":{"short":"Class Histogram","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$interval"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the name of the field on which to perform the aggregation"},"$interval":{"type":"int","description":"the interval by which documents will be bucketed"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\IpRange":{"class":{"descriptions":{"short":"Class IpRange","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Max":{"class":{"descriptions":{"short":"Class Max","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Min":{"class":{"descriptions":{"short":"Class Min","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Missing":{"class":{"descriptions":{"short":"Class Missing","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Nested":{"class":{"descriptions":{"short":"Class Nested","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$path"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$path":{"type":"string","description":"the nested path for this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Range":{"class":{"descriptions":{"short":"Class Range","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ReverseNested":{"class":{"descriptions":{"short":"Reversed Nested Aggregation","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$path"],"docParameters":{"$name":{"type":"string","description":"The name of this aggregation"},"$path":{"type":"string","description":"Optional path to the nested object for this aggregation. Defaults to the root of the main document."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ScriptedMetric":{"class":{"descriptions":{"short":"Class ScriptedMetric","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$initScript","$mapScript","$combineScript","$reduceScript"],"docParameters":{"$name":{"type":"string","description":"the name if this aggregation"},"$initScript":{"type":"string|null","description":"Executed prior to any collection of documents"},"$mapScript":{"type":"string|null","description":"Executed once per document collected"},"$combineScript":{"type":"string|null","description":"Executed once on each shard after document collection is complete"},"$reduceScript":{"type":"string|null","description":"Executed once on the coordinating node after all shards have returned their results"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Stats":{"class":{"descriptions":{"short":"Class Stats","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Sum":{"class":{"descriptions":{"short":"Class Sum","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Terms":{"class":{"descriptions":{"short":"Class Terms","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\TopHits":{"class":{"descriptions":{"short":"Class TopHits","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ValueCount":{"class":{"descriptions":{"short":"Class ValueCount","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$opType","$metadata","$source"],"docParameters":{"$opType":{"type":"string","description":""},"$metadata":{"type":"array","description":""},"$source":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\AbstractDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\CreateDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\DeleteDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\IndexDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\UpdateDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Response":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseData","$action","$opType"],"optionals":[],"docParameters":{"$responseData":{"type":"array|string","description":""},"$action":{"type":"\\Elastica\\Bulk\\Action","description":""},"$opType":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\ResponseSet":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$bulkResponses"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":""},"$bulkResponses":{"type":"\\Elastica\\Bulk\\Response[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Client":{"class":{"descriptions":{"short":"Client to connect the the elasticsearch server","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config","$callback"],"docParameters":{"$config":{"type":"array","description":"OPTIONAL Additional config options"},"$callback":{"type":"callback","description":"OPTIONAL Callback function which can be used to be notified about errors (for example connection down)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new Elastica client","long":""},"deprecated":false}}}},"Elastica\\Cluster":{"class":{"descriptions":{"short":"Cluster informations for elasticsearch","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Connection client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a cluster object","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health":{"class":{"descriptions":{"short":"Elastic cluster health.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"The Elastica client."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health\\Index":{"class":{"descriptions":{"short":"Wraps status information for an index.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$data"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the index."},"$data":{"type":"array","description":"The index health data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health\\Shard":{"class":{"descriptions":{"short":"Wraps status information for a shard.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$shardNumber","$data"],"optionals":[],"docParameters":{"$shardNumber":{"type":"int","description":"The shard index\/number."},"$data":{"type":"array","description":"The shard health data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Settings":{"class":{"descriptions":{"short":"Cluster settings","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Connection client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a cluster object","long":""},"deprecated":false}}}},"Elastica\\Connection":{"class":{"descriptions":{"short":"Elastica connection instance to an elasticasearch node","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$params"],"docParameters":{"$params":{"type":"array","description":"OPTIONAL Connection params: host, port, transport, timeout. All are optional"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new connection object. A connection is enabled by default","long":""},"deprecated":false}}}},"Elastica\\Connection\\ConnectionPool":{"class":{"descriptions":{"short":"Description of ConnectionPool","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connections","$strategy"],"optionals":["$callback"],"docParameters":{"$connections":{"type":"array","description":""},"$strategy":{"type":"\\Elastica\\Connection\\Strategy\\StrategyInterface","description":""},"$callback":{"type":"callback","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Connection\\Strategy\\CallbackStrategy":{"class":{"descriptions":{"short":"Description of CallbackStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"Closure","description":""}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Connection\\Strategy\\RoundRobin":{"class":{"descriptions":{"short":"Description of RoundRobin","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\Simple":{"class":{"descriptions":{"short":"Description of SimpleStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\StrategyFactory":{"class":{"descriptions":{"short":"Description of StrategyFactory","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\StrategyInterface":{"class":{"descriptions":{"short":"Description of AbstractStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Document":{"class":{"descriptions":{"short":"Single document stored in elastic search","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$id","$data","$type","$index"],"docParameters":{"$id":{"type":"int|string","description":"OPTIONAL $id Id is create if empty"},"$data":{"type":"array|string","description":"OPTIONAL Data array"},"$type":{"type":"string","description":"OPTIONAL Type name"},"$index":{"type":"string","description":"OPTIONAL Index name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new document","long":""},"deprecated":false}}}},"Elastica\\Exception\\BulkException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\ResponseException":{"class":{"descriptions":{"short":"Bulk Response exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseSet"],"optionals":[],"docParameters":{"$responseSet":{"type":"\\Elastica\\Bulk\\ResponseSet","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\Response\\ActionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Bulk\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\UdpException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ClientException":{"class":{"descriptions":{"short":"Client exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ConnectionException":{"class":{"descriptions":{"short":"Connection exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$request","$response"],"docParameters":{"$message":{"type":"string","description":"Message"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\GuzzleException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$guzzleException"],"optionals":["$request","$response"],"docParameters":{"$guzzleException":{"type":"\\GuzzleHttp\\Exception\\TransferException","description":""},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\HttpException":{"class":{"descriptions":{"short":"Connection exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$error"],"optionals":["$request","$response"],"docParameters":{"$error":{"type":"string","description":"Error"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\MemcacheException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$request","$response"],"docParameters":{"$message":{"type":"string","description":"Message"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\ThriftException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$thriftException"],"optionals":["$request","$response"],"docParameters":{"$thriftException":{"type":"\\Thrift\\Exception\\TException","description":""},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ElasticsearchException":{"class":{"descriptions":{"short":"Elasticsearch exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$code","$error"],"optionals":[],"docParameters":{"$code":{"type":"int","description":"Error code"},"$error":{"type":"string","description":"Error message from elasticsearch"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs elasticsearch exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"General Elastica exception interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Exception\\InvalidException":{"class":{"descriptions":{"short":"Invalid exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\JSONParseException":{"class":{"descriptions":{"short":"JSON Parse exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\NotFoundException":{"class":{"descriptions":{"short":"Not found exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\NotImplementedException":{"class":{"descriptions":{"short":"Not implemented exception","long":"Is thrown if a function or feature is not implemented yet"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\PartialShardFailureException":{"class":{"descriptions":{"short":"Partial shard failure exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$response"],"optionals":[],"docParameters":{"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\QueryBuilderException":{"class":{"descriptions":{"short":"QueryBuilder exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ResponseException":{"class":{"descriptions":{"short":"Response exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$response"],"optionals":[],"docParameters":{"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"Client exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Facet\\AbstractFacet":{"class":{"descriptions":{"short":"Abstract facet object. Should be extended by all facet types","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\DateHistogram":{"class":{"descriptions":{"short":"Implements the Date Histogram facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Filter":{"class":{"descriptions":{"short":"Filter facet","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\GeoCluster":{"class":{"descriptions":{"short":"Implements the Geo Cluster facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\GeoDistance":{"class":{"descriptions":{"short":"Implements the Geo Distance facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Histogram":{"class":{"descriptions":{"short":"Implements the Histogram facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Query":{"class":{"descriptions":{"short":"Query facet","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Range":{"class":{"descriptions":{"short":"Implements the range facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Statistical":{"class":{"descriptions":{"short":"Implements the statistical facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Terms":{"class":{"descriptions":{"short":"Implements the terms facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\TermsStats":{"class":{"descriptions":{"short":"Implements the statistical facet on a per term basis.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Filter\\AbstractFilter":{"class":{"descriptions":{"short":"Abstract filter object. Should be extended by all filter types","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\AbstractGeoDistance":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$location":{"type":"array|string","description":"Location as array or geohash: array('lat' => 48.86, 'lon' => 2.35) OR 'drm3btev3e86'"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create GeoDistance object","long":""},"deprecated":false}}}},"Elastica\\Filter\\AbstractGeoShape":{"class":{"descriptions":{"short":"geo_shape filter","long":"Filter pre-indexed shape definitions"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\AbstractMulti":{"class":{"descriptions":{"short":"Multi Abstract filter object. Should be extended by filter types composed of an array of sub filters","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\Bool":{"class":{"descriptions":{"short":"Bool Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\BoolAnd":{"class":{"descriptions":{"short":"And Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\BoolNot":{"class":{"descriptions":{"short":"Not Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filter"],"optionals":[],"docParameters":{"$filter":{"type":"\\Elastica\\Filter\\AbstractFilter","description":"Filter object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates Not filter query","long":""},"deprecated":false}}}},"Elastica\\Filter\\BoolOr":{"class":{"descriptions":{"short":"Or Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\Exists":{"class":{"descriptions":{"short":"Exists query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field"],"optionals":[],"docParameters":{"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct exists filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoBoundingBox":{"class":{"descriptions":{"short":"Geo bounding box filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$coordinates"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$coordinates":{"type":"array","description":"Array with top left coordinate as first and bottom right coordinate as second element"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct BoundingBoxFilter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoDistance":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location","$distance"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$location":{"type":"array|string","description":"Location as array or geohash: array('lat' => 48.86, 'lon' => 2.35) OR 'drm3btev3e86'"},"$distance":{"type":"string","description":"Distance"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Create GeoDistance object","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoDistanceRange":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":["$ranges"],"docParameters":{"$key":{"type":"string","description":""},"$location":{"type":"array|string","description":""},"$ranges":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoPolygon":{"class":{"descriptions":{"short":"Geo polygon filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$points"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$points":{"type":"array","description":"Points making up polygon"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct polygon filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoShapePreIndexed":{"class":{"descriptions":{"short":"geo_shape filter for pre-indexed shapes","long":"Filter pre-indexed shape definitions"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$indexedId","$indexedType","$indexedIndex","$indexedPath"],"optionals":[],"docParameters":{"$path":{"type":"string","description":"The path\/field of the shape searched"},"$indexedId":{"type":"string","description":"Id of the pre-indexed shape"},"$indexedType":{"type":"string","description":"Type of the pre-indexed shape"},"$indexedIndex":{"type":"string","description":"Index of the pre-indexed shape"},"$indexedPath":{"type":"string","description":"Path of the pre-indexed shape"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct geo_shape filter with a pre-indexed shape","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoShapeProvided":{"class":{"descriptions":{"short":"geo_shape filter or provided shapes","long":"Filter provided shape definitions"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$coordinates"],"optionals":["$shapeType"],"docParameters":{"$path":{"type":"string","description":"The path\/field of the shape searched"},"$coordinates":{"type":"array","description":"Points making up the shape"},"$shapeType":{"type":"string","description":"Type of the geo_shape: point, envelope, linestring, polygon, multipoint or multipolygon"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct geo_shape filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeohashCell":{"class":{"descriptions":{"short":"Class GeohashCell","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":["$precision","$neighbors"],"docParameters":{"$key":{"type":"string","description":"The field on which to filter"},"$location":{"type":"array|string","description":"Location as coordinates array or geohash string ['lat' => 40.3, 'lon' => 45.2]"},"Integer":{"type":"$precision","description":"length of geohash prefix or distance (3, or \"50m\")"},"$neighbors":{"type":"bool","description":"If true, filters cells next to the given cell."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\HasChild":{"class":{"descriptions":{"short":"Returns parent documents having child docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Filter\\AbstractFilter","description":"Query string or a Elastica\\Query object or a filter"},"$type":{"type":"string|\\Elastica\\Type","description":"Child document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\HasParent":{"class":{"descriptions":{"short":"Returns child documents having parent docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$type"],"optionals":[],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Filter\\AbstractFilter","description":"Query string or a Query object or a filter"},"$type":{"type":"string|\\Elastica\\Type","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasParent filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Ids":{"class":{"descriptions":{"short":"Ids Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$ids"],"docParameters":{"$type":{"type":"string|\\Elastica\\Type","description":"Type to filter on"},"$ids":{"type":"array","description":"List of ids"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates filter object","long":""},"deprecated":false}}}},"Elastica\\Filter\\Indices":{"class":{"descriptions":{"short":"Class Indices","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filter","$indices"],"optionals":[],"docParameters":{"$filter":{"type":"AbstractFilter","description":"filter which will be applied to docs in the specified indices"},"$indices":{"type":"mixed[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\Limit":{"class":{"descriptions":{"short":"Limit Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$limit"],"optionals":[],"docParameters":{"$limit":{"type":"int","description":"Limit"}},"throws":[],"return":{"type":"\\Elastica\\Filter\\Limit","description":""},"descriptions":{"short":"Construct limit filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\MatchAll":{"class":{"descriptions":{"short":"Match all filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates match all filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Missing":{"class":{"descriptions":{"short":"Missing Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field"],"docParameters":{"$field":{"type":"string","description":"OPTIONAL"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct missing filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Nested":{"class":{"descriptions":{"short":"Nested filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\NumericRange":{"class":{"descriptions":{"short":"Numeric Range Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct range filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Prefix":{"class":{"descriptions":{"short":"Prefix filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field","$prefix"],"docParameters":{"$field":{"type":"string","description":"Field name"},"$prefix":{"type":"string","description":"Prefix string"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates prefix filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Query":{"class":{"descriptions":{"short":"Query filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$query":{"type":"array|\\Elastica\\Query\\AbstractQuery","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct query filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Range":{"class":{"descriptions":{"short":"Range Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct range filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Regexp":{"class":{"descriptions":{"short":"Regexp filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field","$regexp","$options"],"docParameters":{"$field":{"type":"string","description":"Field name"},"$regexp":{"type":"string","description":"Regular expression"},"$options":{"type":"array","description":"Regular expression options"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Create Regexp object","long":""},"deprecated":false}}}},"Elastica\\Filter\\Script":{"class":{"descriptions":{"short":"Script filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$script"],"docParameters":{"$script":{"type":"array|string|\\Elastica\\Script","description":"OPTIONAL Script"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct script filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Term":{"class":{"descriptions":{"short":"Term query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$term"],"docParameters":{"$term":{"type":"array","description":"Term array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct term filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Terms":{"class":{"descriptions":{"short":"Terms filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$terms"],"docParameters":{"$key":{"type":"string","description":"Terms key"},"$terms":{"type":"array","description":"Terms values"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates terms filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Type":{"class":{"descriptions":{"short":"Type Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$typeName"],"docParameters":{"$typeName":{"type":"string","description":"Type name"}},"throws":[],"return":{"type":"\\Elastica\\Filter\\Type","description":""},"descriptions":{"short":"Construct Type Filter","long":""},"deprecated":false}}}},"Elastica\\Index":{"class":{"descriptions":{"short":"Elastica index object","long":"Handles reads, deletes and configurations of an index"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$name"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"},"$name":{"type":"string","description":"Index name"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new index object","long":"All the communication to and from an index goes of this object"},"deprecated":false}}}},"Elastica\\Index\\Settings":{"class":{"descriptions":{"short":"Elastica index settings object","long":"All settings listed in the update settings API (http:\/\/www.elasticsearch.org\/guide\/reference\/api\/admin-indices-update-settings.html)\ncan be changed on a running indices. To make changes like the merge policy (http:\/\/www.elasticsearch.org\/guide\/reference\/index-modules\/merge.html)\nthe index has to be closed first and reopened after the call"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Index\\Stats":{"class":{"descriptions":{"short":"Elastica index stats object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Index\\Status":{"class":{"descriptions":{"short":"Elastica index status object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\JSON":{"class":{"descriptions":{"short":"Elastica JSON tools","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Log":{"class":{"descriptions":{"short":"Elastica log object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$log"],"docParameters":{"String":{"type":"string|bool","description":"to set a specific file for logging"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Inits log object","long":""},"deprecated":false}}}},"Elastica\\Multi\\ResultSet":{"class":{"descriptions":{"short":"Elastica multi search result set\nList of result sets for each search request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$searches"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":""},"$searches":{"type":"array|\\Elastica\\Search[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs ResultSet object","long":""},"deprecated":false}}}},"Elastica\\Multi\\Search":{"class":{"descriptions":{"short":"Elastica multi search","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs search object","long":""},"deprecated":false}}}},"Elastica\\Node":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$client"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"Node name"},"$client":{"type":"\\Elastica\\Client","description":"Node object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a new node object","long":""},"deprecated":false}}}},"Elastica\\Node\\Info":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$params"],"docParameters":{"$node":{"type":"\\Elastica\\Node","description":"Node object"},"$params":{"type":"array","description":"List of params to return. Can be: settings, os, process, jvm, thread_pool, network, transport, http"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create new info object for node","long":""},"deprecated":false}}}},"Elastica\\Node\\Stats":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\Elastica\\Node","description":"Elastica node object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create new stats for node","long":""},"deprecated":false}}}},"Elastica\\Param":{"class":{"descriptions":{"short":"Class to handle params","long":"This function can be used to handle params for queries, filter, facets"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Percolator":{"class":{"descriptions":{"short":"Percolator class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct new percolator","long":""},"deprecated":false}}}},"Elastica\\Query":{"class":{"descriptions":{"short":"Elastica query object","long":"Creates different types of queries"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$query":{"type":"array|\\Elastica\\Query\\AbstractQuery","description":"OPTIONAL Query object (default = null)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a query object","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder":{"class":{"descriptions":{"short":"Query Builder","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version"],"docParameters":{"$version":{"type":"Version","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder\\DSL":{"class":{"descriptions":{"short":"DSL Interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Aggregation":{"class":{"descriptions":{"short":"elasticsearch aggregation DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Filter":{"class":{"descriptions":{"short":"elasticsearch filter DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Query":{"class":{"descriptions":{"short":"elasticsearch query DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Suggest":{"class":{"descriptions":{"short":"elasticsearch suggesters DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Facade":{"class":{"descriptions":{"short":"Facade for a specific DSL object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsl","$version"],"optionals":[],"docParameters":{"$dsl":{"type":"DSL","description":""},"$version":{"type":"Version","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder\\Version":{"class":{"descriptions":{"short":"Abstract Version class","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version090":{"class":{"descriptions":{"short":"elasticsearch 0.9 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version100":{"class":{"descriptions":{"short":"elasticsearch 1.0 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version110":{"class":{"descriptions":{"short":"elasticsearch 1.1 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version120":{"class":{"descriptions":{"short":"elasticsearch 1.2 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version130":{"class":{"descriptions":{"short":"elasticsearch 1.3 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version140":{"class":{"descriptions":{"short":"elasticsearch 1.4 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\AbstractQuery":{"class":{"descriptions":{"short":"Abstract query object. Should be extended by all query types.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Bool":{"class":{"descriptions":{"short":"Bool query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Boosting":{"class":{"descriptions":{"short":"Class Boosting","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Builder":{"class":{"descriptions":{"short":"Query Builder.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$string"],"docParameters":{"$string":{"type":"string","description":"JSON encoded string to use as query."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Query\\Common":{"class":{"descriptions":{"short":"Class Common","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$query","$cutoffFrequency"],"optionals":[],"docParameters":{"$field":{"type":"string","description":"the field on which to query"},"$query":{"type":"string","description":"the query string"},"$cutoffFrequency":{"type":"float","description":"percentage in decimal form (.001 == 0.1%)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Query\\ConstantScore":{"class":{"descriptions":{"short":"Constant score query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$filter"],"docParameters":{"$filter":{"type":"null|\\Elastica\\Filter\\AbstractFilter|array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct constant score query","long":""},"deprecated":false}}}},"Elastica\\Query\\DisMax":{"class":{"descriptions":{"short":"DisMax query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Filtered":{"class":{"descriptions":{"short":"Filtered query. Needs a query and a filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query","$filter"],"docParameters":{"$query":{"type":"\\Elastica\\Query\\AbstractQuery","description":"OPTIONAL Query object"},"$filter":{"type":"\\Elastica\\Filter\\AbstractFilter","description":"OPTIONAL Filter object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a filtered query","long":""},"deprecated":false}}}},"Elastica\\Query\\FunctionScore":{"class":{"descriptions":{"short":"Class FunctionScore","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Fuzzy":{"class":{"descriptions":{"short":"Fuzzy query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$value"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$value":{"type":"string","description":"String to search for"}},"throws":[],"return":{"type":"\\Elastica\\Query\\Fuzzy","description":"Current object"},"descriptions":{"short":"Construct a fuzzy query","long":""},"deprecated":false}}}},"Elastica\\Query\\FuzzyLikeThis":{"class":{"descriptions":{"short":"Fuzzy Like This query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\HasChild":{"class":{"descriptions":{"short":"Returns parent documents having child docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild Query","long":""},"deprecated":false}}}},"Elastica\\Query\\HasParent":{"class":{"descriptions":{"short":"Returns child documents having parent docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$type"],"optionals":[],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild Query","long":""},"deprecated":false}}}},"Elastica\\Query\\Ids":{"class":{"descriptions":{"short":"Ids Query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$ids"],"docParameters":{"$type":{"type":"string|\\Elastica\\Type","description":"Type to filter on"},"$ids":{"type":"array","description":"List of ids"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates filter object","long":""},"deprecated":false}}}},"Elastica\\Query\\Match":{"class":{"descriptions":{"short":"Match query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MatchAll":{"class":{"descriptions":{"short":"Match all query. Returns all results","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates match all query","long":""},"deprecated":false}}}},"Elastica\\Query\\MatchPhrase":{"class":{"descriptions":{"short":"Match Phrase query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MatchPhrasePrefix":{"class":{"descriptions":{"short":"Match Phrase Prefix query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MoreLikeThis":{"class":{"descriptions":{"short":"More Like This query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MultiMatch":{"class":{"descriptions":{"short":"Multi Match","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Nested":{"class":{"descriptions":{"short":"Nested query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Prefix":{"class":{"descriptions":{"short":"Prefix query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$prefix"],"docParameters":{"$prefix":{"type":"array","description":"OPTIONAL Calls setRawPrefix with the given $prefix array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs the Prefix query object","long":""},"deprecated":false}}}},"Elastica\\Query\\QueryString":{"class":{"descriptions":{"short":"QueryString query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$queryString"],"docParameters":{"$queryString":{"type":"string","description":"OPTIONAL Query string for object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates query string object. Calls setQuery with argument","long":""},"deprecated":false}}}},"Elastica\\Query\\Range":{"class":{"descriptions":{"short":"Range query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Query\\Regexp":{"class":{"descriptions":{"short":"Regexp query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$value","$boost"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Regexp key"},"$value":{"type":"string","description":"OPTIONAL Regexp value"},"$boost":{"type":"float","description":"OPTIONAL Boost value (default = 1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct regexp query","long":""},"deprecated":false}}}},"Elastica\\Query\\Simple":{"class":{"descriptions":{"short":"Simple query\nPure php array query. Can be used to create any not existing type of query.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":[],"docParameters":{"$query":{"type":"array","description":"Query array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a query based on an array","long":""},"deprecated":false}}}},"Elastica\\Query\\SimpleQueryString":{"class":{"descriptions":{"short":"Class SimpleQueryString","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$fields"],"docParameters":{"$query":{"type":"string","description":""},"$fields":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Query\\Term":{"class":{"descriptions":{"short":"Term query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$term"],"docParameters":{"$term":{"type":"array","description":"OPTIONAL Calls setTerm with the given $term array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs the Term query object","long":""},"deprecated":false}}}},"Elastica\\Query\\Terms":{"class":{"descriptions":{"short":"Terms query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$terms"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Terms key"},"$terms":{"type":"array","description":"OPTIONAL Terms list"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct terms query","long":""},"deprecated":false}}}},"Elastica\\Query\\TopChildren":{"class":{"descriptions":{"short":"Runs the child query with an estimated hits size, and out of the hit docs, aggregates it into parent docs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct topChildren query","long":""},"deprecated":false}}}},"Elastica\\Query\\Wildcard":{"class":{"descriptions":{"short":"Wildcard query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$value","$boost"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Wildcard key"},"$value":{"type":"string","description":"OPTIONAL Wildcard value"},"$boost":{"type":"float","description":"OPTIONAL Boost value (default = 1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct wildcard query","long":""},"deprecated":false}}}},"Elastica\\Request":{"class":{"descriptions":{"short":"Elastica Request object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$method","$data","$query","$connection"],"docParameters":{"$path":{"type":"string","description":"Request path"},"$method":{"type":"string","description":"OPTIONAL Request method (use const's) (default = self::GET)"},"$data":{"type":"array","description":"OPTIONAL Data array"},"$query":{"type":"array","description":"OPTIONAL Query params"},"$connection":{"type":"Connection","description":""}},"throws":[],"return":{"type":"\\Elastica\\Request","description":"OPTIONAL Connection object"},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Rescore\\AbstractRescore":{"class":{"descriptions":{"short":"Abstract rescore object. Should be extended by all rescorers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Rescore\\Query":{"class":{"descriptions":{"short":"Query Rescore","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$rescoreQuery":{"type":"string|\\Elastica\\Query\\AbstractQuery","description":""},"$query":{"type":"string|\\Elastica\\Query\\AbstractQuery","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Response":{"class":{"descriptions":{"short":"Elastica Response object","long":"Stores query time, and result array -> is given to result set, returned by ..."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseString"],"optionals":["$responseStatus"],"docParameters":{"$responseString":{"type":"string|array","description":"Response string (json)"},"$responseStatus":{"type":"int","description":"http status code"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Result":{"class":{"descriptions":{"short":"Elastica result item","long":"Stores all information from a result"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$hit"],"optionals":[],"docParameters":{"$hit":{"type":"array","description":"Hit data"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a single results object","long":""},"deprecated":false}}}},"Elastica\\ResultSet":{"class":{"descriptions":{"short":"Elastica result set","long":"List of all hits that are returned for a search on elasticsearch\nResult set implements iterator"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$query"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":"Response object"},"$query":{"type":"\\Elastica\\Query","description":"Query object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs ResultSet object","long":""},"deprecated":false}}}},"Elastica\\ScanAndScroll":{"class":{"descriptions":{"short":"scan and scroll object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$search"],"optionals":["$expiryTime","$sizePerShard"],"docParameters":{"$search":{"type":"Search","description":""},"$expiryTime":{"type":"string","description":""},"$sizePerShard":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs scroll iterator object","long":""},"deprecated":false}}}},"Elastica\\Script":{"class":{"descriptions":{"short":"Script objects, containing script internals","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$script"],"optionals":["$params","$lang","$id"],"docParameters":{"$script":{"type":"string","description":""},"$params":{"type":"array|null","description":""},"$lang":{"type":"string|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\ScriptFields":{"class":{"descriptions":{"short":"Container for scripts as fields","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$scripts"],"docParameters":{"$scripts":{"type":"\\Elastica\\Script[]|array","description":"OPTIONAL"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Search":{"class":{"descriptions":{"short":"Elastica search object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs search object","long":""},"deprecated":false}}}},"Elastica\\SearchableInterface":{"class":{"descriptions":{"short":"Elastica searchable interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Snapshot":{"class":{"descriptions":{"short":"Class Snapshot","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"Client","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Status":{"class":{"descriptions":{"short":"Elastica general status","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs Status object","long":""},"deprecated":false}}}},"Elastica\\Suggest":{"class":{"descriptions":{"short":"Class Suggest","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$suggestion"],"docParameters":{"$suggestion":{"type":"AbstractSuggest","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\AbstractSuggest":{"class":{"descriptions":{"short":"Class AbstractSuggestion","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\CandidateGenerator\\AbstractCandidateGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Suggest\\CandidateGenerator\\DirectGenerator":{"class":{"descriptions":{"short":"Class DirectGenerator","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field"],"optionals":[],"docParameters":{"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\Phrase":{"class":{"descriptions":{"short":"Class Phrase","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\Term":{"class":{"descriptions":{"short":"Class Term","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Transport\\AbstractTransport":{"class":{"descriptions":{"short":"Elastica Abstract Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Guzzle":{"class":{"descriptions":{"short":"Elastica Guzzle Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Http":{"class":{"descriptions":{"short":"Elastica Http Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\HttpAdapter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection","$httpAdapter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Https":{"class":{"descriptions":{"short":"Elastica Http Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Memcache":{"class":{"descriptions":{"short":"Elastica Memcache Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Null":{"class":{"descriptions":{"short":"Elastica Null Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Thrift":{"class":{"descriptions":{"short":"Elastica Thrift Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":{"\\Elastica\\Exception\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Type":{"class":{"descriptions":{"short":"Elastica type object","long":"elasticsearch has for every types as a substructure. This object\nrepresents a type inside a context\nThe hierarchy is as following: client -> index -> type -> document"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index","$name"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index Object"},"$name":{"type":"string","description":"Type name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new type object inside the given index","long":""},"deprecated":false}}}},"Elastica\\Type\\AbstractType":{"class":{"descriptions":{"short":"Abstract helper class to implement search indices based on models.","long":"This abstract model should help creating search index and a subtype\nwith some easy config entries that are overloaded.\n\nThe following variables have to be set:\n- $_indexName\n- $_typeName\n\nThe following variables can be set for additional configuration\n- $_mapping: Value type mapping for the given type\n- $_indexParams: Parameters for the index"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$client"],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"OPTIONAL Client object"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Creates index object with client connection","long":"Reads index and type name from protected vars _indexName and _typeName.\nHas to be set in child class"},"deprecated":false}}}},"Elastica\\Type\\Mapping":{"class":{"descriptions":{"short":"Elastica Mapping object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$properties"],"docParameters":{"$type":{"type":"\\Elastica\\Type","description":"OPTIONAL Type object"},"$properties":{"type":"array","description":"OPTIONAL Properties"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Mapping","long":""},"deprecated":false}}}},"Elastica\\Util":{"class":{"descriptions":{"short":"Elastica tools","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"File_Iterator":{"class":{"descriptions":{"short":"FilterIterator implementation that filters files based on prefix(es) and\/or\nsuffix(es). Hidden files and files from hidden directories are also filtered.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$suffixes","$prefixes","$exclude","$basepath"],"docParameters":{"$iterator":{"type":"Iterator","description":""},"$suffixes":{"type":"array","description":""},"$prefixes":{"type":"array","description":""},"$exclude":{"type":"array","description":""},"$basepath":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"File_Iterator_Facade":{"class":{"descriptions":{"short":"Fa\u00c3\u00a7ade implementation that uses File_Iterator_Factory to create a\nFile_Iterator that operates on an AppendIterator that contains an\nRecursiveDirectoryIterator for each given path. The list of unique\nfiles is returned as an array.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"File_Iterator_Factory":{"class":{"descriptions":{"short":"Factory Method implementation that creates a File_Iterator that operates on\nan AppendIterator that contains an RecursiveDirectoryIterator for each given\npath.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Appendable":{"class":{"descriptions":{"short":"Allow an object to be appendable to a FluentDOM\\Element","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Attribute":{"class":{"descriptions":{"short":"FluentDOM\\Attribute extends PHPs DOMAttr class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\CdataSection":{"class":{"descriptions":{"short":"FluentDOM\\CdataSection extends PHPs DOMCdataSection class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Comment":{"class":{"descriptions":{"short":"FluentDOM\\Comment extends PHPs DOMComment class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Constraints":{"class":{"descriptions":{"short":"Abstract utility class that provides several constraints\/validations","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Document":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":{"$version":{"type":"string","description":""},"$encoding":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\DocumentFragment":{"class":{"descriptions":{"short":"FluentDOM\\DocumentFrag,ent extends PHPs DOMDocumentFragment class. It adds some namespace handling and\nsome standard interfaces for convenience.","long":"Be aware that a fragment is empty after it was appended."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Element":{"class":{"descriptions":{"short":"FluentDOM\\Element extends PHPs DOMDocument class. It adds some generic namespace handling on\nthe document level and registers extended Node classes for convenience.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exception":{"class":{"descriptions":{"short":"FluentDOM\\Exception is an interface implemented by FluentDOM specific exceptions.","long":"This allow to catch them without handling each specifically."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\InvalidArgument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argumentName"],"optionals":["$expectedTypes"],"docParameters":{"$argumentName":{"type":"string","description":""},"$expectedTypes":{"type":"string|string[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidFragmentLoader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSerializer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contentType","$class"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\InvalidSource\\TypeFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource\\TypeString":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource\\Variable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source","$contentType"],"optionals":[],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\LoadingError\\EmptyResult":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\EmptySource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\Json":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$code"],"optionals":[],"docParameters":{"$code":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\Libxml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$error"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\NoSerializer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contentType"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\HHVM\\Properties":{"class":{"descriptions":{"short":"This trait is a workaround for the current implementation of DOMNode properties in\nHHVM","long":"https:\/\/github.com\/facebook\/hhvm\/issues\/4100"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Iterators\\ElementIterator":{"class":{"descriptions":{"short":"Iterator class for FluentDOM\\Element objects","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\IndexIterator":{"class":{"descriptions":{"short":"A abstract superclass for index based iterators. The object\nusing this iterator needs to implement \\Countable and\nallow to get the current item by an zero based index position.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\MapIterator":{"class":{"descriptions":{"short":"An iterator that calls a map function for the current value before returning it.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$traversable","$callback"],"optionals":[],"docParameters":{"$traversable":{"type":"\\Traversable","description":""},"$callback":{"type":"callable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\NodesIterator":{"class":{"descriptions":{"short":"FluentDOM\\Query\\Iterator is the Iterator class for FluentDOM\\Query objects","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loadable":{"class":{"descriptions":{"short":"FluentDOM\\Loadable describes an interface for loader objects that can be used to load\na data source into a DOM document.","long":"The class can be attached to a FluentDOM\\Query objects using the FluentDOM\\Loaders class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Html":{"class":{"descriptions":{"short":"Load a DOM document from a xml string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\JSONx":{"class":{"descriptions":{"short":"A lazy load group for php class loaders","long":"This defines loaders for PHP classes like SimpleXML"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json":{"class":{"descriptions":{"short":"Index for json format loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Json\\BadgerFish":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\JsonDOM":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$depth"],"docParameters":{"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the loader for a json string.","long":"The string will be decoded into a php variable structure and convert into a DOM document\nIf options contains is self::OPTION_VERBOSE, the DOMNodes will all have\njson:type and json:name attributes. Even if the information could be read from the structure."},"deprecated":false}}}},"FluentDOM\\Loader\\Json\\JsonML":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\Rayfish":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\SimpleXML":{"class":{"descriptions":{"short":"Load a DOM document from a string or file that was the result of a\nSimpleXMLElement encoded as JSON.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Lazy":{"class":{"descriptions":{"short":"A list of lazy initialized loaders.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$loaders"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Libxml\\Errors":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Options":{"class":{"descriptions":{"short":"Generalized option handling for loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$callbacks"],"docParameters":{"$options":{"type":"array|\\Traversable|Options","description":""},"$callbacks":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\PHP":{"class":{"descriptions":{"short":"A lazy load group for php class loaders","long":"This defines loaders for PHP classes like SimpleXML"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\PHP\\PDO":{"class":{"descriptions":{"short":"Load a PDO result","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$depth"],"docParameters":{"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the loader for a json string.","long":"The string will be decoded into a php variable structure and convert into a DOM document\nIf options contains is self::OPTION_VERBOSE, the DOMNodes will all have\njson:type and json:name attributes. Even if the information could be read from the structure."},"deprecated":false}}}},"FluentDOM\\Loader\\PHP\\SimpleXml":{"class":{"descriptions":{"short":"Load a DOM document from a SimpleXML element","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$contentType"],"optionals":["$selection"],"docParameters":{"$document":{"type":"\\DOMDocument","description":""},"$contentType":{"type":"string","description":""},"$selection":{"type":"\\DOMNode|\\Traversable|array|NULL","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Standard":{"class":{"descriptions":{"short":"Encapsulates the standard loaders (html, xml, json)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$list"],"docParameters":{"$list":{"type":"array|\\Traversable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the a list of loaders if provided.","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Supports":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Supports\\Json":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Supports\\Libxml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Text":{"class":{"descriptions":{"short":"Index for text format loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Text\\CSV":{"class":{"descriptions":{"short":"Load a CSV file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Xml":{"class":{"descriptions":{"short":"Load a DOM document from a xml file or string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loaders":{"class":{"descriptions":{"short":"FluentDOM\\Loaders is a list of loaders that allow to import data sources into\na DOM document.","long":"The list is iterated until a valid document is returned by the loader"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$list"],"docParameters":{"$list":{"type":"array|\\Traversable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the a list of loaders if provided.","long":""},"deprecated":false}}}},"FluentDOM\\Node\\ChildNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ChildNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\MutationMacro":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode":{"class":{"descriptions":{"short":"Interface NonDocumentTypeChildNode","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode\\Properties":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode":{"class":{"descriptions":{"short":"Interface ParentNode","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode\\Properties":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\QuerySelector":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\QuerySelector\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\StringCast":{"class":{"descriptions":{"short":"Cast a DOMNode into a string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\WholeText":{"class":{"descriptions":{"short":"Add the `replaceWholeText()` method. To the text node classes.","long":"https:\/\/www.w3.org\/TR\/DOM-Level-3-Core\/core.html#Text3-replaceWholeText"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\Xpath":{"class":{"descriptions":{"short":"Add a `evaluate()` method to execute an Xpath expression in the context of the node and\nmake the node a functor.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Nodes":{"class":{"descriptions":{"short":"Implements an extended replacement for DOMNodeList.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$source","$contentType"],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"null|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Builder":{"class":{"descriptions":{"short":"Create list of nodes for a FluentDOM\\Nodes object from different values","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nodes"],"optionals":[],"docParameters":{"$nodes":{"type":"Nodes","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Compare":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$xpath"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":{"$version":{"type":"string","description":""},"$encoding":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator\\Node":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$node"],"optionals":[],"docParameters":{"$document":{"type":"Document","description":""},"$node":{"type":"\\DOMElement","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator\\Nodes":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$traversable"],"optionals":["$map"],"docParameters":{"$traversable":{"type":"array|\\Traversable","description":""},"$map":{"type":"callable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Fetcher":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nodes"],"optionals":[],"docParameters":{"$nodes":{"type":"Nodes","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Modifier":{"class":{"descriptions":{"short":"Provides several extended manipulation functions for a DOMNode\/DOMElement.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\ProcessingInstruction":{"class":{"descriptions":{"short":"FluentDOM\\ProcessingInstruction extends PHPs DOMProcessingInstruction class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\QualifiedName":{"class":{"descriptions":{"short":"Create an object from a string that contains a valid Qualified XML name.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query":{"class":{"descriptions":{"short":"FluentDOM\\Query implements a jQuery like replacement for DOMNodeList","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$source","$contentType"],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"null|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Attributes":{"class":{"descriptions":{"short":"FluentDOM\\Query\\Attributes is used for the FluentDOM\\Query:attr property, providing an array like interface\nto the attributes of the selected nodes(s)","long":"It acts like the FluentDOM\\Query::attr() method. If you read attributes it uses the first\nselected node. Write actions are applied to all matches element nodes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fd"],"optionals":[],"docParameters":{"$fd":{"type":"Query","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the FluentDOM instance for later use","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css":{"class":{"descriptions":{"short":"FluentDOMCss is used for the FluentDOM:css property, providing an array like interface\nto the css properties in the style attribute of the selected nodes(s)","long":"It acts like the FluentDOMStyle::css() method. If you read css properties it uses the first\nselected node. Write actions are applied to all matches element nodes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fd"],"optionals":[],"docParameters":{"$fd":{"type":"Query","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the FluentDOM instance for later use and decode the style string into an array","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css\\Properties":{"class":{"descriptions":{"short":"Provides an array access to a css style string. It is used to\nmodify the attribute values of style attributes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$styleString"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css\\PropertyCompare":{"class":{"descriptions":{"short":"A functor that allows to compare two css property names.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Query\\Data":{"class":{"descriptions":{"short":"FluentDOM\\Data is used for the FluentDOM::data property and FluentDOM::data() method, providing an\ninterface html5 data properties of a node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMElement","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create object with attached element node.","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Factory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Serializer\\Factory\\Group":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$factories"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Html":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json":{"class":{"descriptions":{"short":"Serialize a DOM into a Json structure. This loader allows to save an imported Json back as JSON.","long":"Using this on a standard XML document will ignore a lot of data. Namespaces and Attributes\nare ignored, if here are two elements with the same name only the last will be in the output.\nIf an element has child elements, all text child nodes will be ignored.\n\nSee the other serializers, to keep this data.\n\nThis serializer recognizes attributes from the JsonDOM namespaces. If you import an JSON to a DOM\nin FluentDOM, the additional information is stored in these attributes (types, names, ...)\n\nHere is a example of an XML:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<json:json xmlns:json=\"urn:carica-json-dom.2013\">\n<boolean json:type=\"boolean\">true<\/boolean>\n<int json:type=\"number\">42<\/int>\n<null json:type=\"null\"\/>\n<string>Foo<\/string>\n<array json:type=\"array\">\n<_ json:type=\"number\">21<\/_>\n<\/array>\n<acomplexname json:type=\"object\" json:name=\"a complex name\"\/>\n<\/json:json>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\BadgerFish":{"class":{"descriptions":{"short":"Serialize a DOM to BadgerFish Json: http:\/\/badgerfish.ning.com\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\JsonML":{"class":{"descriptions":{"short":"Serialize a DOM to JsonML: http:\/\/www.jsonml.org\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\RabbitFish":{"class":{"descriptions":{"short":"Serialize a DOM to RabbitFish Json: http:\/\/www.bramstein.com\/projects\/xsltjson\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\Rayfish":{"class":{"descriptions":{"short":"Serialize a DOM to Rayfish Json: http:\/\/www.bramstein.com\/projects\/xsltjson\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Xml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Text":{"class":{"descriptions":{"short":"FluentDOM\\Text extends PHPs DOMText class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Transformer\\JSONx":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\DOMDocument","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Import a DOM document and use the JsonDOM rules to convert it into JSONx.","long":""},"deprecated":false}}}},"FluentDOM\\Transformer\\Namespaces\\Optimize":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":["$namespaces"],"docParameters":{"$document":{"type":"\\DOMDocument","description":""},"$namespaces":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a namespace optimizer for the provided document. The provided\ndocument will be copied.","long":"The second argument allows to provide namespaces and prefixes. The\nkeys of the array are the namespace uri, the values are the prefixes.\n\nIf a namespace is not provided it is read from the source node.\n\nYou can use the same prefix for multiple namespace uris. Empty prefixes\nare possible (default namespace for an element).\n\nIt is highly recommend that you always use a non-empty prefix if the\nhere are attributes in that namespace. Attributes always need a prefix\nto make use of the namespace."},"deprecated":false}}}},"FluentDOM\\Transformer\\Namespaces\\Replace":{"class":{"descriptions":{"short":"Replace namespaces in a document, prefixes are copied, but might be optimized by\nlibxml.","long":"Attributes and Elements without a namespace get their prefix removed.\nA change from no namespace to a namespace will not affect attributes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$namespaces"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\XmlSerializable":{"class":{"descriptions":{"short":"FluentDOM\\XmlSerializable describes an interface for objects that can be serialized to\nand XML fragment (without document element and declaration).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\XmlSerialize":{"class":{"descriptions":{"short":"Standard implementation for FluentDOM\\XmlSerializable","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Xpath":{"class":{"descriptions":{"short":"FluentDOM\\Xpath extends PHPs DOMXpath class. It disables the\nautomatic namespace registration by default and, throws notices for the query method.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dom"],"optionals":[],"docParameters":{"$dom":{"type":"\\DOMDocument","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"HHVM and some old PHP versions do not have a $document property by default\nAdd it is added if it was not found after executing parent constructor.","long":""},"deprecated":false}}}},"FluentDOM\\Xpath\\Transformer":{"class":{"descriptions":{"short":"Interface for objects that convert a (css) selector string into an XPath expression for objects that provide an xpath expression when cast to string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Client":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Client configuration settings."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Clients accept an array of constructor parameters.","long":"Here's an example of creating a client using a base_uri and an array of\ndefault request options to apply to each request:\n\n$client = new Client([\n'base_uri'        => 'http:\/\/www.foo.com\/1.0\/',\n'timeout'         => 0,\n'allow_redirects' => false,\n'proxy'           => '192.168.16.1:10'\n]);\n\nClient configuration settings include the following options:\n\n- handler: (callable) Function that transfers HTTP requests over the\nwire. The function is called with a Psr7\\Http\\Message\\RequestInterface\nand array of transfer options, and must return a\nGuzzleHttp\\Promise\\PromiseInterface that is fulfilled with a\nPsr7\\Http\\Message\\ResponseInterface on success. \"handler\" is a\nconstructor only option that cannot be overridden in per\/request\noptions. If no handler is provided, a default handler will be created\nthat enables all of the request options below by attaching all of the\ndefault middleware to the handler.\n- base_uri: (string|UriInterface) Base URI of the client that is merged\ninto relative URIs. Can be a string or instance of UriInterface.\n- **: any request option"},"deprecated":false}}}},"GuzzleHttp\\ClientInterface":{"class":{"descriptions":{"short":"Client interface for sending HTTP requests.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Cookie\\CookieJar":{"class":{"descriptions":{"short":"Cookie jar that stores cookies as an array","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$strictMode","$cookieArray"],"docParameters":{"$strictMode":{"type":"bool","description":"Set to true to throw exceptions when invalid cookies are added to the cookie jar."},"$cookieArray":{"type":"array","description":"Array of SetCookie objects or a hash of arrays that can be used with the SetCookie constructor"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\CookieJarInterface":{"class":{"descriptions":{"short":"Stores HTTP cookies.","long":"It extracts cookies from HTTP requests, and returns them in HTTP responses.\nCookieJarInterface instances automatically expire contained cookies when\nnecessary. Subclasses are also responsible for storing and retrieving\ncookies from a file, database, etc."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Cookie\\FileCookieJar":{"class":{"descriptions":{"short":"Persists non-session cookies using a JSON formatted file","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$cookieFile"],"optionals":["$storeSessionCookies"],"docParameters":{"$cookieFile":{"type":"string","description":"File to store the cookie data"},"$storeSessionCookies":{"type":"bool","description":"Set to true to store session cookies in the cookie jar."}},"throws":{"\\RuntimeException":"if the file cannot be found or created"},"return":{"type":"self","description":""},"descriptions":{"short":"Create a new FileCookieJar object","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\SessionCookieJar":{"class":{"descriptions":{"short":"Persists cookies in the client session","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sessionKey"],"optionals":["$storeSessionCookies"],"docParameters":{"$sessionKey":{"type":"string","description":"Session key name to store the cookie data in session"},"$storeSessionCookies":{"type":"bool","description":"Set to true to store session cookies in the cookie jar."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a new SessionCookieJar object","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\SetCookie":{"class":{"descriptions":{"short":"Set-Cookie object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":{"$data":{"type":"array","description":"Array of cookie data provided by a Cookie parser"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\BadResponseException":{"class":{"descriptions":{"short":"Exception when an HTTP error occurs (4xx or 5xx error)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ClientException":{"class":{"descriptions":{"short":"Exception when a client error is encountered (4xx codes)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ConnectException":{"class":{"descriptions":{"short":"Exception thrown when a connection cannot be established.","long":"Note that no response is present for a ConnectException"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\GuzzleException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Exception\\RequestException":{"class":{"descriptions":{"short":"HTTP Request exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\SeekException":{"class":{"descriptions":{"short":"Exception thrown when a seek fails on a stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$pos","$msg"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ServerException":{"class":{"descriptions":{"short":"Exception when a server error is encountered (5xx codes)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\TooManyRedirectsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\TransferException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\HandlerStack":{"class":{"descriptions":{"short":"Creates a composed Guzzle handler function by stacking middlewares on top of\nan HTTP handler function.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$handler"],"docParameters":{"$handler":{"type":"callable","description":"Underlying HTTP handler."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlFactory":{"class":{"descriptions":{"short":"Creates curl resources from a request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$maxHandles"],"optionals":[],"docParameters":{"$maxHandles":{"type":"int","description":"Maximum number of idle handles."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlFactoryInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\CurlHandler":{"class":{"descriptions":{"short":"HTTP handler that uses cURL easy handles as a transport layer.","long":"When using the CurlHandler, custom curl options can be specified as an\nassociative array of curl option constants mapping to values in the\n**curl** key of the \"client\" key of the request."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"Array of options to use with the handler"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Accepts an associative array of options:","long":"- factory: Optional curl factory used to create cURL handles."},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlMultiHandler":{"class":{"descriptions":{"short":"Returns an asynchronous response using curl_multi_* functions.","long":"When using the CurlMultiHandler, custom curl options can be specified as an\nassociative array of curl option constants mapping to values in the\n**curl** key of the provided request options."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"This handler accepts the following options:","long":"- handle_factory: An optional factory  used to create curl handles\n- select_timeout: Optional timeout (in seconds) to block before timing\nout while selecting curl handles. Defaults to 1 second."},"deprecated":false}}}},"GuzzleHttp\\Handler\\EasyHandle":{"class":{"descriptions":{"short":"Represents a cURL easy handle and the data it populates.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\MockHandler":{"class":{"descriptions":{"short":"Handler that returns responses or throw exceptions from a queue.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$queue","$onFulfilled","$onRejected"],"docParameters":{"$queue":{"type":"array","description":""},"$onFulfilled":{"type":"callable","description":"Callback to invoke when the return value is fulfilled."},"$onRejected":{"type":"callable","description":"Callback to invoke when the return value is rejected."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"The passed in value must be an array of\n{@see Psr7\\Http\\Message\\ResponseInterface} objects, Exceptions,\ncallables, or Promises.","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\Proxy":{"class":{"descriptions":{"short":"Provides basic proxies for handlers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\StreamHandler":{"class":{"descriptions":{"short":"HTTP handler that uses PHP's HTTP stream wrapper.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\MessageFormatter":{"class":{"descriptions":{"short":"Formats log messages using variable substitutions for requests, responses,\nand other transactional data.","long":"The following variable substitutions are supported:\n\n- {request}:        Full HTTP request message\n- {response}:       Full HTTP response message\n- {ts}:             ISO 8601 date in GMT\n- {date_iso_8601}   ISO 8601 date in GMT\n- {date_common_log} Apache common log date using the configured timezone.\n- {host}:           Host of the request\n- {method}:         Method of the request\n- {uri}:            URI of the request\n- {host}:           Host of the request\n- {version}:        Protocol version\n- {target}:         Request target of the request (path + query + fragment)\n- {hostname}:       Hostname of the machine that sent the request\n- {code}:           Status code of the response (if available)\n- {phrase}:         Reason phrase of the response  (if available)\n- {error}:          Any error messages (if available)\n- {req_header_*}:   Replace `*` with the lowercased name of a request header to add to the message\n- {res_header_*}:   Replace `*` with the lowercased name of a response header to add to the message\n- {req_headers}:    Request headers\n- {res_headers}:    Response headers\n- {req_body}:       Request body\n- {res_body}:       Response body"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$template"],"docParameters":{"$template":{"type":"string","description":"Log message template"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Middleware":{"class":{"descriptions":{"short":"Functions used to create and wrap handlers with handler middleware.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Pool":{"class":{"descriptions":{"short":"Sends and iterator of requests concurrently using a capped pool size.","long":"The pool will read from an iterator until it is cancelled or until the\niterator is consumed. When a request is yielded, the request is sent after\napplying the \"request_options\" request options (if provided in the ctor).\n\nWhen a function is yielded by the iterator, the function is provided the\n\"request_options\" array that should be merged on top of any existing\noptions, and the function MUST then return a wait-able promise."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$requests"],"optionals":["$config"],"docParameters":{"$client":{"type":"ClientInterface","description":"Client used to send the requests."},"$requests":{"type":"array|\\Iterator","description":"Requests or functions that return requests to send concurrently."},"$config":{"type":"array","description":"Associative array of options - concurrency: (int) Maximum number of requests to send concurrently - options: Array of request options to apply to each request. - fulfilled: (callable) Function to invoke when a request completes. - rejected: (callable) Function to invoke when a request is rejected."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\PrepareBodyMiddleware":{"class":{"descriptions":{"short":"Prepares requests that contain a body, adding the Content-Length,\nContent-Type, and Expect headers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nextHandler"],"optionals":[],"docParameters":{"$nextHandler":{"type":"callable","description":"Next handler to invoke."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\AggregateException":{"class":{"descriptions":{"short":"Exception thrown when too many errors occur in the some() or any() methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\CancellationException":{"class":{"descriptions":{"short":"Exception that is set as the reason for a promise that has been cancelled.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\Coroutine":{"class":{"descriptions":{"short":"Creates a promise that is resolved using a generator that yields values or\npromises (somewhat similar to C#'s async keyword).","long":"When called, the coroutine function will start an instance of the generator\nand returns a promise that is fulfilled with its final yielded value.\n\nControl is returned back to the generator when the yielded promise settles.\nThis can lead to less verbose code when doing lots of sequential async calls\nwith minimal processing in between.\n\nuse GuzzleHttp\\Promise;\n\nfunction createPromise($value) {\nreturn new Promise\\FulfilledPromise($value);\n}\n\n$promise = Promise\\coroutine(function () {\n$value = (yield createPromise('a'));\ntry {\n$value = (yield createPromise($value . 'b'));\n} catch (\\Exception $e) {\n\/\/ The promise was rejected.\n}\nyield $value . 'c';\n});\n\n\/\/ Outputs \"abc\"\n$promise->then(function ($v) { echo $v; });"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$generatorFn"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\EachPromise":{"class":{"descriptions":{"short":"Represents a promise that iterates over many promises and invokes\nside-effect functions in the process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterable"],"optionals":["$config"],"docParameters":{"$iterable":{"type":"mixed","description":"Promises or values to iterate."},"$config":{"type":"array","description":"Configuration options"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Configuration hash can include the following key value pairs:","long":"- fulfilled: (callable) Invoked when a promise fulfills. The function\nis invoked with three arguments: the fulfillment value, the index\nposition from the iterable list of the promise, and the aggregate\npromise that manages all of the promises. The aggregate promise may\nbe resolved from within the callback to short-circuit the promise.\n- rejected: (callable) Invoked when a promise is rejected. The\nfunction is invoked with three arguments: the rejection reason, the\nindex position from the iterable list of the promise, and the\naggregate promise that manages all of the promises. The aggregate\npromise may be resolved from within the callback to short-circuit\nthe promise.\n- concurrency: (integer) Pass this configuration option to limit the\nallowed number of outstanding concurrently executing promises,\ncreating a capped pool of promises. There is no limit by default."},"deprecated":false}}}},"GuzzleHttp\\Promise\\FulfilledPromise":{"class":{"descriptions":{"short":"A promise that has been fulfilled.","long":"Thenning off of this promise will invoke the onFulfilled callback\nimmediately and ignore other callbacks."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\Promise":{"class":{"descriptions":{"short":"Promises\/A+ implementation that avoids recursion when possible.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$waitFn","$cancelFn"],"docParameters":{"$waitFn":{"type":"callable","description":"Fn that when invoked resolves the promise."},"$cancelFn":{"type":"callable","description":"Fn that when invoked cancels the promise."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\PromiseInterface":{"class":{"descriptions":{"short":"A promise represents the eventual result of an asynchronous operation.","long":"The primary way of interacting with a promise is through its then method,\nwhich registers callbacks to receive either a promise\u00e2\u0080\u0099s eventual value or\nthe reason why the promise cannot be fulfilled."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Promise\\PromisorInterface":{"class":{"descriptions":{"short":"Interface used with classes that return a promise.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Promise\\RejectedPromise":{"class":{"descriptions":{"short":"A promise that has been rejected.","long":"Thenning off of this promise will invoke the onRejected callback\nimmediately and ignore other callbacks."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\RejectionException":{"class":{"descriptions":{"short":"A special exception that is thrown when waiting on a rejected promise.","long":"The reason value is available via the getReason() method."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\TaskQueue":{"class":{"descriptions":{"short":"A task queue that executes tasks in a FIFO order.","long":"This task queue class is used to settle promises asynchronously and\nmaintains a constant stack size. You can use the task queue asynchronously\nby calling the `run()` function of the global task queue in an event loop.\n\nGuzzleHttp\\Promise\\queue()->run();"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$withShutdown"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\TaskQueueInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\AppendStream":{"class":{"descriptions":{"short":"Reads from multiple streams, one after the other.","long":"This is a read-only stream decorator."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$streams"],"docParameters":{"$streams":{"type":"StreamInterface[]","description":"Streams to decorate. Each stream must be readable."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\BufferStream":{"class":{"descriptions":{"short":"Provides a buffer stream that can be written to to fill a buffer, and read\nfrom to remove bytes from the buffer.","long":"This stream returns a \"hwm\" metadata value that tells upstream consumers\nwhat the configured high water mark of the stream is, or the maximum\npreferred size of the buffer."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$hwm"],"docParameters":{"$hwm":{"type":"int","description":"High water mark, representing the preferred maximum buffer size. If the size of the buffer exceeds the high water mark, then calls to write will continue to succeed but will return false to inform writers to slow down until the buffer has been drained by reading from it."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\CachingStream":{"class":{"descriptions":{"short":"Stream decorator that can cache previously read bytes from a sequentially\nread stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$target"],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to cache"},"$target":{"type":"StreamInterface","description":"Optionally specify where data is cached"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"We will treat the buffer object as the body of the stream","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\DroppingStream":{"class":{"descriptions":{"short":"Stream decorator that begins dropping data once the size of the underlying\nstream becomes too full.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream","$maxLength"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Underlying stream to decorate."},"$maxLength":{"type":"int","description":"Maximum size before dropping data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\FnStream":{"class":{"descriptions":{"short":"Compose stream implementations based on a hash of functions.","long":"Allows for easy testing and extension of a provided stream without needing\nto create a concrete class for a simple extension point."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methods"],"optionals":[],"docParameters":{"$methods":{"type":"array","description":"Hash of method name to a callable."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\InflateStream":{"class":{"descriptions":{"short":"Uses PHP's zlib.inflate filter to inflate deflate or gzipped content.","long":"This stream decorator skips the first 10 bytes of the given stream to remove\nthe gzip header, converts the provided stream to a PHP stream resource,\nthen appends the zlib.inflate filter. The stream is then converted back\nto a Guzzle stream resource to be used as a Guzzle stream."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\LazyOpenStream":{"class":{"descriptions":{"short":"Lazily reads or writes to a file that is opened only after an IO operation\ntake place on the stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename","$mode"],"optionals":[],"docParameters":{"$filename":{"type":"string","description":"File to lazily open"},"$mode":{"type":"string","description":"fopen mode to use when opening the stream"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\LimitStream":{"class":{"descriptions":{"short":"Decorator used to return only a subset of a stream","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$limit","$offset"],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to wrap"},"$limit":{"type":"int","description":"Total number of bytes to allow to be read from the stream. Pass -1 for no limit."},"$offset":{"type":"int","description":"Position to seek to before reading (only works on seekable streams)."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\MessageTrait":{"class":{"descriptions":{"short":"Trait implementing functionality common to requests and responses.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\MultipartStream":{"class":{"descriptions":{"short":"Stream that when read returns bytes for a streaming multipart or\nmultipart\/form-data stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$elements","$boundary"],"docParameters":{"$elements":{"type":"array","description":"Array of associative arrays, each containing a required \"name\" key mapping to the form field, name, a required \"contents\" key mapping to a StreamInterface\/resource\/string, an optional \"headers\" associative array of custom headers, and an optional \"filename\" key mapping to a string to send as the filename in the part."},"$boundary":{"type":"string","description":"You can optionally provide a specific boundary"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\NoSeekStream":{"class":{"descriptions":{"short":"Stream decorator that prevents a stream from being seeked","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to decorate"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\PumpStream":{"class":{"descriptions":{"short":"Provides a read only stream that pumps data from a PHP callable.","long":"When invoking the provided callable, the PumpStream will pass the amount of\ndata requested to read to the callable. The callable can choose to ignore\nthis value and return fewer or more bytes than requested. Any extra data\nreturned by the provided callable is buffered internally until drained using\nthe read() function of the PumpStream. The provided callable MUST return\nfalse when there is no more data to read."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source"],"optionals":["$options"],"docParameters":{"$source":{"type":"callable","description":"Source of the stream data. The callable MAY accept an integer argument used to control the amount of data to return. The callable MUST return a string when called, or false on error or EOF."},"$options":{"type":"array","description":"Stream options: - metadata: Hash of metadata to use with stream. - size: Size of the stream, if known."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Request":{"class":{"descriptions":{"short":"PSR-7 request implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method","$uri"],"optionals":["$headers","$body","$version"],"docParameters":{"$method":{"type":"string","description":"HTTP method"},"$uri":{"type":"string|UriInterface","description":"URI"},"$headers":{"type":"array","description":"Request headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Request body"},"$version":{"type":"string","description":"Protocol version"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Response":{"class":{"descriptions":{"short":"PSR-7 response implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$status","$headers","$body","$version","$reason"],"docParameters":{"$status":{"type":"int","description":"Status code"},"$headers":{"type":"array","description":"Response headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Response body"},"$version":{"type":"string","description":"Protocol version"},"$reason":{"type":"string|null","description":"Reason phrase (when empty a default will be used based on the status code)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\ServerRequest":{"class":{"descriptions":{"short":"Server-side HTTP request","long":"Extends the Request definition to add methods for accessing incoming data,\nspecifically server parameters, cookies, matched path parameters, query\nstring arguments, body parameters, and upload file information.\n\n\"Attributes\" are discovered via decomposing the request (and usually\nspecifically the URI path), and typically will be injected by the application.\n\nRequests are considered immutable; all methods that might change state are\nimplemented such that they retain the internal state of the current\nmessage and return a new instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method","$uri"],"optionals":["$headers","$body","$version","$serverParams"],"docParameters":{"$method":{"type":"string","description":"HTTP method"},"$uri":{"type":"string|UriInterface","description":"URI"},"$headers":{"type":"array","description":"Request headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Request body"},"$version":{"type":"string","description":"Protocol version"},"$serverParams":{"type":"array","description":"Typically the $_SERVER superglobal"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Stream":{"class":{"descriptions":{"short":"PHP stream implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$options"],"docParameters":{"$stream":{"type":"resource","description":"Stream resource to wrap."},"$options":{"type":"array","description":"Associative array of options."}},"throws":{"\\InvalidArgumentException":"if the stream is not a stream resource"},"return":{"type":"self","description":""},"descriptions":{"short":"This constructor accepts an associative array of options.","long":"- size: (int) If a read stream would otherwise have an indeterminate\nsize, but the size is known due to foreknowledge, then you can\nprovide that size, in bytes.\n- metadata: (array) Any additional metadata to return when the metadata\nof the stream is accessed."},"deprecated":false}}}},"GuzzleHttp\\Psr7\\StreamDecoratorTrait":{"class":{"descriptions":{"short":"Stream decorator trait","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to decorate"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\StreamWrapper":{"class":{"descriptions":{"short":"Converts Guzzle streams into PHP stream resources.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\UploadedFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$streamOrFile","$size","$errorStatus"],"optionals":["$clientFilename","$clientMediaType"],"docParameters":{"$streamOrFile":{"type":"StreamInterface|string|resource","description":""},"$size":{"type":"int","description":""},"$errorStatus":{"type":"int","description":""},"$clientFilename":{"type":"string|null","description":""},"$clientMediaType":{"type":"string|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Uri":{"class":{"descriptions":{"short":"PSR-7 URI implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$uri"],"docParameters":{"$uri":{"type":"string","description":"URI to parse"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\UriNormalizer":{"class":{"descriptions":{"short":"Provides methods to normalize and compare URIs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\UriResolver":{"class":{"descriptions":{"short":"Resolves a URI reference in the context of a base URI and the opposite way.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\RedirectMiddleware":{"class":{"descriptions":{"short":"Request redirect middleware.","long":"Apply this middleware like other middleware using\n{@see GuzzleHttp\\Middleware::redirect()}."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nextHandler"],"optionals":[],"docParameters":{"$nextHandler":{"type":"callable","description":"Next handler to invoke."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\RequestOptions":{"class":{"descriptions":{"short":"This class contains a list of built-in Guzzle request options.","long":"More documentation for each option can be found at http:\/\/guzzlephp.org\/."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\RetryMiddleware":{"class":{"descriptions":{"short":"Middleware that retries requests based on the boolean result of\ninvoking the provided \"decider\" function.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$decider","$nextHandler"],"optionals":["$delay"],"docParameters":{"$decider":{"type":"callable","description":"Function that accepts the number of retries, a request, [response], and [exception] and returns true if the request is to be retried."},"$nextHandler":{"type":"callable","description":"Next handler to invoke."},"$delay":{"type":"callable","description":"Function that accepts the number of retries and [response] and returns the number of milliseconds to delay."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\TransferStats":{"class":{"descriptions":{"short":"Represents data at the point after it was transferred either successfully\nor after a network error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request"],"optionals":["$response","$transferTime","$handlerErrorData","$handlerStats"],"docParameters":{"$request":{"type":"RequestInterface","description":"Request that was sent."},"$response":{"type":"ResponseInterface","description":"Response received (if any)"},"$transferTime":{"type":"null","description":"Total handler transfer time."},"$handlerErrorData":{"type":"mixed","description":"Handler error data."},"$handlerStats":{"type":"array","description":"Handler specific stats."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\UriTemplate":{"class":{"descriptions":{"short":"Expands URI templates. Userland implementation of PECL uri_template.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Arrays\\IsArray":{"class":{"descriptions":{"short":"Matcher for array whose elements satisfy a sequence of matchers.\nThe array size must equal the number of element matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayContaining":{"class":{"descriptions":{"short":"Matches if an array contains an item satisfying a nested matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayContainingInAnyOrder":{"class":{"descriptions":{"short":"Matches if an array contains a set of items satisfying nested matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayContainingInOrder":{"class":{"descriptions":{"short":"Matches if an array contains a set of items satisfying nested matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayContainingKey":{"class":{"descriptions":{"short":"Matches if an array contains the specified key.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$keyMatcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayContainingKeyValuePair":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$keyMatcher","$valueMatcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\IsArrayWithSize":{"class":{"descriptions":{"short":"Matches if array size satisfies a nested matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$subtype","$subMatcher","$featureDescription","$featureName"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""},"$subtype":{"type":"string","description":""},"$subMatcher":{"type":"\\Hamcrest\\Matcher","description":"The matcher to apply to the feature"},"$featureDescription":{"type":"string","description":"Descriptive text to use in describeTo"},"$featureName":{"type":"string","description":"Identifying text for mismatch message"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\MatchingOnce":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatchers","$mismatchDescription"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Arrays\\SeriesMatchingOnce":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatchers","$mismatchDescription"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\AssertionError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\BaseDescription":{"class":{"descriptions":{"short":"A {@link Hamcrest\\Description} that is stored as a string.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\BaseMatcher":{"class":{"descriptions":{"short":"BaseClass for all Matcher implementations.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Collection\\IsEmptyTraversable":{"class":{"descriptions":{"short":"Matches if traversable is empty or non-empty.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$empty"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Collection\\IsTraversableWithSize":{"class":{"descriptions":{"short":"Matches if traversable size satisfies a nested matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$subtype","$subMatcher","$featureDescription","$featureName"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""},"$subtype":{"type":"string","description":""},"$subMatcher":{"type":"\\Hamcrest\\Matcher","description":"The matcher to apply to the feature"},"$featureDescription":{"type":"string","description":"Descriptive text to use in describeTo"},"$featureName":{"type":"string","description":"Identifying text for mismatch message"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Hamcrest\\Core\\AllOf":{"class":{"descriptions":{"short":"Calculates the logical conjunction of multiple matchers. Evaluation is\nshortcut, so subsequent matchers are not called if an earlier matcher\nreturns <code>false<\/code>.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\AnyOf":{"class":{"descriptions":{"short":"Calculates the logical disjunction of multiple matchers. Evaluation is\nshortcut, so subsequent matchers are not called if an earlier matcher\nreturns <code>true<\/code>.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\CombinableMatcher":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\DescribedAs":{"class":{"descriptions":{"short":"Provides a custom description to another matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$descriptionTemplate","$matcher","$values"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\Every":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\HasToString":{"class":{"descriptions":{"short":"Matches if array size satisfies a nested matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$subtype","$subMatcher","$featureDescription","$featureName"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""},"$subtype":{"type":"string","description":""},"$subMatcher":{"type":"\\Hamcrest\\Matcher","description":"The matcher to apply to the feature"},"$featureDescription":{"type":"string","description":"Descriptive text to use in describeTo"},"$featureName":{"type":"string","description":"Identifying text for mismatch message"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Hamcrest\\Core\\Is":{"class":{"descriptions":{"short":"Decorates another Matcher, retaining the behavior but allowing tests\nto be slightly more expressive.","long":"For example:  assertThat($cheese, equalTo($smelly))\nvs.  assertThat($cheese, is(equalTo($smelly)))"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsAnything":{"class":{"descriptions":{"short":"A matcher that always returns <code>true<\/code>.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsCollectionContaining":{"class":{"descriptions":{"short":"Tests if an array contains values that match one or more Matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$elementMatcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsEqual":{"class":{"descriptions":{"short":"Is the value equal to another value, as tested by the use of the \"==\"\ncomparison operator?","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$item"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsIdentical":{"class":{"descriptions":{"short":"The same as {@link Hamcrest\\Core\\IsSame} but with slightly different\nsemantics.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsInstanceOf":{"class":{"descriptions":{"short":"Tests whether the value is an instance of a class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$theClass"],"optionals":[],"docParameters":{"$theClass":{"type":"string","description":"The predicate evaluates to true for instances of this class or one of its subclasses."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsInstanceOf","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsNot":{"class":{"descriptions":{"short":"Calculates the logical negation of a matcher.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matcher"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsNull":{"class":{"descriptions":{"short":"Is the value null?","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Core\\IsSame":{"class":{"descriptions":{"short":"Is the value the same object as another value?\nIn PHP terms, does $a === $b?","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$object"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\IsTypeOf":{"class":{"descriptions":{"short":"Tests whether the value has a built-in type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$theType"],"optionals":[],"docParameters":{"$theType":{"type":"string","description":"The predicate evaluates to true for values with this built-in type."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsTypeOf","long":""},"deprecated":false}}}},"Hamcrest\\Core\\Set":{"class":{"descriptions":{"short":"Tests if a value (class, object, or array) has a named property.","long":"For example:\n<pre>\nassertThat(array('a', 'b'), set('b'));\nassertThat($foo, set('bar'));\nassertThat('Server', notSet('defaultPort'));\n<\/pre>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$property"],"optionals":["$not"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Core\\ShortcutCombination":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$matchers"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Description":{"class":{"descriptions":{"short":"A description of a Matcher. A Matcher will describe itself to a description\nwhich can later be used for reporting.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\DiagnosingMatcher":{"class":{"descriptions":{"short":"Official documentation for this class is missing.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\FeatureMatcher":{"class":{"descriptions":{"short":"Supporting class for matching a feature of an object. Implement\n<code>featureValueOf()<\/code> in a subclass to pull out the feature to be\nmatched against.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$subtype","$subMatcher","$featureDescription","$featureName"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""},"$subtype":{"type":"string","description":""},"$subMatcher":{"type":"\\Hamcrest\\Matcher","description":"The matcher to apply to the feature"},"$featureDescription":{"type":"string","description":"Descriptive text to use in describeTo"},"$featureName":{"type":"string","description":"Identifying text for mismatch message"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Hamcrest\\Internal\\SelfDescribingValue":{"class":{"descriptions":{"short":"A wrapper around any value so that it describes itself.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Matcher":{"class":{"descriptions":{"short":"A matcher over acceptable values.\nA matcher is able to describe itself to give feedback when it fails.\n<p\/>\nMatcher implementations should <b>NOT directly implement this interface<\/b>.\nInstead, <b>extend<\/b> the {@link Hamcrest\\BaseMatcher} abstract class,\nwhich will ensure that the Matcher API can grow to support\nnew features and remain compatible with all Matcher implementations.\n<p\/>\nFor easy access to common Matcher implementations, use the static factory\nmethods in {@link Hamcrest\\CoreMatchers}.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\MatcherAssert":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Matchers":{"class":{"descriptions":{"short":"A series of static factories for all hamcrest matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\NullDescription":{"class":{"descriptions":{"short":"Null implementation of {@link Hamcrest\\Description}.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Number\\IsCloseTo":{"class":{"descriptions":{"short":"Is the value a number equal to a value within some range of\nacceptable error?","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value","$delta"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Number\\OrderingComparison":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value","$minCompare","$maxCompare"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\SelfDescribing":{"class":{"descriptions":{"short":"The ability of an object to describe itself.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\StringDescription":{"class":{"descriptions":{"short":"A {@link Hamcrest\\Description} that is stored as a string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\IsEmptyString":{"class":{"descriptions":{"short":"Matches empty Strings (and null).","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$empty"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\IsEqualIgnoringCase":{"class":{"descriptions":{"short":"Tests if a string is equal to another string, regardless of the case.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\IsEqualIgnoringWhiteSpace":{"class":{"descriptions":{"short":"Tests if a string is equal to another string, ignoring any changes in\nwhitespace.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\MatchesPattern":{"class":{"descriptions":{"short":"Tests if the argument is a string that matches a regular expression.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$pattern"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\StringContains":{"class":{"descriptions":{"short":"Tests if the argument is a string that contains a substring.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substring"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\StringContainsIgnoringCase":{"class":{"descriptions":{"short":"Tests if the argument is a string that contains a substring ignoring case.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substring"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\StringContainsInOrder":{"class":{"descriptions":{"short":"Tests if the value contains a series of substrings in a constrained order.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substrings"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\StringEndsWith":{"class":{"descriptions":{"short":"Tests if the argument is a string that ends with a substring.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substring"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\StringStartsWith":{"class":{"descriptions":{"short":"Tests if the argument is a string that contains a substring.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substring"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Text\\SubstringMatcher":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$substring"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\TypeSafeDiagnosingMatcher":{"class":{"descriptions":{"short":"Convenient base class for Matchers that require a value of a specific type.\nThis simply checks the type and then casts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedType"],"optionals":["$expectedSubtype"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\TypeSafeMatcher":{"class":{"descriptions":{"short":"Convenient base class for Matchers that require a value of a specific type.\nThis simply checks the type.","long":"While it may seem a useless exercise to have this in PHP, objects cannot\nbe cast to certain data types such as numerics (or even strings if\n__toString() has not be defined)."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedType"],"optionals":["$expectedSubtype"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsArray":{"class":{"descriptions":{"short":"Tests whether the value is an array.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsArray","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsBoolean":{"class":{"descriptions":{"short":"Tests whether the value is a boolean.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsBoolean","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsCallable":{"class":{"descriptions":{"short":"Tests whether the value is callable.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsCallable","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsDouble":{"class":{"descriptions":{"short":"Tests whether the value is a float\/double.","long":"PHP returns \"double\" for values of type \"float\"."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsDouble","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsInteger":{"class":{"descriptions":{"short":"Tests whether the value is an integer.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsInteger","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsNumeric":{"class":{"descriptions":{"short":"Tests whether the value is numeric.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$theType"],"optionals":[],"docParameters":{"$theType":{"type":"string","description":"The predicate evaluates to true for values with this built-in type."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsTypeOf","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsObject":{"class":{"descriptions":{"short":"Tests whether the value is an object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsObject","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsResource":{"class":{"descriptions":{"short":"Tests whether the value is a resource.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsResource","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsScalar":{"class":{"descriptions":{"short":"Tests whether the value is a scalar (boolean, integer, double, or string).","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$theType"],"optionals":[],"docParameters":{"$theType":{"type":"string","description":"The predicate evaluates to true for values with this built-in type."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsTypeOf","long":""},"deprecated":false}}}},"Hamcrest\\Type\\IsString":{"class":{"descriptions":{"short":"Tests whether the value is a string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new instance of IsString","long":""},"deprecated":false}}}},"Hamcrest\\Util":{"class":{"descriptions":{"short":"Contains utility methods for handling Hamcrest matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Hamcrest\\Xml\\HasXPath":{"class":{"descriptions":{"short":"Matches if XPath applied to XML\/HTML\/XHTML document either\nevaluates to result matching the matcher or returns at least\none node, matching the matcher if present.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$xpath"],"optionals":["$matcher"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Object":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Blob":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Color":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$color"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dt"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Instance":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Method":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Nothing":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Parameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$param"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$label"],"optionals":["$name"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation_Color":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation_Docstring":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$docstring","$file","$line"],"optionals":["$class"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation_Microtime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$group"],"optionals":["$lap","$total","$i"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation_Source":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename","$line"],"optionals":["$padding"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Representation_SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fileInfo"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Resource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Stream":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$meta"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Throwable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$throw"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_Trace":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Object_TraceFrame":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Parser":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$max_depth","$c"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Parser_Base64":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Binary":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Blacklist":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_ClassMethods":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_ClassStatics":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Color":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_DOMIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_DOMNode":{"class":{"descriptions":{"short":"The DOMNode parser plugin is particularly useful as it is both the only way\nto see inside the DOMNode without print_r, and the only way to see mixed\ntext and node inside XML (SimpleXMLElement will strip out the text).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_FsPath":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Iterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Json":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Microtime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Plugin":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Serialize":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_SplObjectStorage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Stream":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Table":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Throwable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Timestamp":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_ToString":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Trace":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Parser_Xml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Kint_Renderer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":"Array with initial kint state information"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"It's a constructor. It constructs.","long":""},"deprecated":false}}}},"Kint_Renderer_Cli":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":"Array with initial kint state information"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"It's a constructor. It constructs.","long":""},"deprecated":false}}}},"Kint_Renderer_Plain":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":"Array with initial kint state information"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"It's a constructor. It constructs.","long":""},"deprecated":false}}}},"Kint_Renderer_Rich":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":"Array with initial kint state information"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"It's a constructor. It constructs.","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Binary":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Blacklist":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Callable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Color":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_ColorDetails":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_DepthLimit":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Docstring":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Microtime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Nothing":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Plugin":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Recursion":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Source":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Table":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_Timestamp":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Rich_TraceFrame":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":"Array with initial kint state information"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"It's a constructor. It constructs.","long":""},"deprecated":false}}}},"Kint_Renderer_Text_Blacklist":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text_DepthLimit":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text_Nothing":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text_Plugin":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text_Recursion":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_Renderer_Text_Trace":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$r"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Kint_SourceParser":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery":{"class":{"descriptions":{"short":"Mockery","long":"LICENSE\n\nThis source file is subject to the new BSD license that is bundled\nwith this package in the file LICENSE.txt.\nIt is also available through the world-wide-web at this URL:\nhttp:\/\/github.com\/padraic\/mockery\/blob\/master\/LICENSE\nIf you did not receive a copy of the license and are unable to\nobtain it through the world-wide-web, please send an email\nto padraic@php.net so we can send you a copy immediately."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Adapter\\Phpunit\\MockeryPHPUnitIntegration":{"class":{"descriptions":{"short":"Integrates Mockery into PHPUnit. Ensures Mockery expectations are verified\nfor each test and are included by the assertion counter.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Adapter\\Phpunit\\MockeryTestCase":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":""},"$data":{"type":"array","description":""},"$dataName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"Mockery\\Adapter\\Phpunit\\TestListener":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\CompositeExpectation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Configuration":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Container":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$generator","$loader"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\CountValidator\\AtLeast":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectation","$limit"],"optionals":[],"docParameters":{"$expectation":{"type":"\\Mockery\\Expectation","description":""},"$limit":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set Expectation object and upper call limit","long":""},"deprecated":false}}}},"Mockery\\CountValidator\\AtMost":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectation","$limit"],"optionals":[],"docParameters":{"$expectation":{"type":"\\Mockery\\Expectation","description":""},"$limit":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set Expectation object and upper call limit","long":""},"deprecated":false}}}},"Mockery\\CountValidator\\CountValidatorAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectation","$limit"],"optionals":[],"docParameters":{"$expectation":{"type":"\\Mockery\\Expectation","description":""},"$limit":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set Expectation object and upper call limit","long":""},"deprecated":false}}}},"Mockery\\CountValidator\\Exact":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectation","$limit"],"optionals":[],"docParameters":{"$expectation":{"type":"\\Mockery\\Expectation","description":""},"$limit":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set Expectation object and upper call limit","long":""},"deprecated":false}}}},"Mockery\\CountValidator\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Exception\\InvalidCountException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Exception\\InvalidOrderException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Exception\\NoMatchingExpectationException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Expectation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$mock","$name"],"optionals":[],"docParameters":{"$mock":{"type":"\\Mockery\\MockInterface","description":""},"$name":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Mockery\\ExpectationDirector":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$mock"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$mock":{"type":"\\Mockery\\MockInterface","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Mockery\\ExpectationInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\CachingGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$generator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\DefinedTargetClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rfc"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\Generator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\Method":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\MockConfiguration":{"class":{"descriptions":{"short":"This class describes the configuration of mocks and hides away some of the\nreflection implementation","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$targets","$blackListedMethods","$whiteListedMethods","$name","$instanceMock","$parameterOverrides"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\MockConfigurationBuilder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\MockDefinition":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$config","$code"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\Parameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rfp"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\StringManipulationGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$passes"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Generator\\StringManipulation\\Pass\\CallTypeHintPass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\ClassNamePass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\ClassPass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\InstanceMockPass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\InterfacePass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\MethodDefinitionPass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\Pass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\RemoveBuiltinMethodsThatAreFinalPass":{"class":{"descriptions":{"short":"The standard Mockery\\Mock class includes some methods to ease mocking, such\nas __wakeup, however if the target has a final __wakeup method, it can't be\nmocked. This pass removes the builtin methods where they are final on the\ntarget","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\StringManipulation\\Pass\\RemoveUnserializeForInternalSerializableClassesPass":{"class":{"descriptions":{"short":"Internal classes can not be instantiated with the newInstanceWithoutArgs\nreflection method, so need the serialization hack. If the class also\nimplements Serializable, we need to replace the standard unserialize method\ndefinition with a dummy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\TargetClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Generator\\UndefinedTargetClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Instantiator":{"class":{"descriptions":{"short":"This is a trimmed down version of https:\/\/github.com\/doctrine\/instantiator,\nbasically without the caching","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Loader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ns","$includePath"],"docParameters":{"$ns":{"type":"string","description":"The namespace to use."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new <tt>Loader<\/tt> that loads classes of the\nspecified namespace.","long":""},"deprecated":false}}}},"Mockery\\Loader\\EvalLoader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Loader\\Loader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Loader\\RequireLoader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Any":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\AnyOf":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Contains":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Ducktype":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\HasKey":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\HasValue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\MatcherAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\MustBe":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Not":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\NotAnyOf":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Subset":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\Matcher\\Type":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Set the expected value","long":""},"deprecated":false}}}},"Mockery\\MethodCall":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method","$args"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\Mock":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\MockInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\ReceivedMethodCalls":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\Recorder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$mock","$subject"],"optionals":[],"docParameters":{"$mock":{"type":"\\Mockery\\MockInterface","description":""},"$subject":{"type":"object","description":""}},"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"Construct accepting the mock object on which expectations are to be\nrecorded. The second parameter is the subject object, passed into\na \\Mockery::mock() call in the same way as a partial mock requires.","long":""},"deprecated":false}}}},"Mockery\\Undefined":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Mockery\\VerificationDirector":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$receivedMethodCalls","$expectation"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Mockery\\VerificationExpectation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$mock","$name"],"optionals":[],"docParameters":{"$mock":{"type":"\\Mockery\\MockInterface","description":""},"$name":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Monolog\\ErrorHandler":{"class":{"descriptions":{"short":"Monolog error handler","long":"A facility to enable logging of runtime errors, exceptions and fatal errors.\n\nQuick setup: <code>ErrorHandler::register($logger);<\/code>\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$logger"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\ChromePHPFormatter":{"class":{"descriptions":{"short":"Formats a log message according to the ChromePHP array format","long":"@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Formatter\\ElasticaFormatter":{"class":{"descriptions":{"short":"Format a log message into an Elastica Document","long":"@author Jelle Vink <jelle.vink@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index","$type"],"optionals":[],"docParameters":{"$index":{"type":"string","description":"Elastic Search index name"},"$type":{"type":"string","description":"Elastic Search document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FlowdockFormatter":{"class":{"descriptions":{"short":"formats the record to be used in the FlowdockHandler","long":"@author Dominik Liebler <liebler.dominik@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source","$sourceEmail"],"optionals":[],"docParameters":{"$source":{"type":"string","description":""},"$sourceEmail":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FluentdFormatter":{"class":{"descriptions":{"short":"Class FluentdFormatter","long":"Serializes a log message to Fluentd unix socket protocol\n\nFluentd config:\n\n<source>\ntype unix\npath \/var\/run\/td-agent\/td-agent.sock\n<\/source>\n\nMonolog setup:\n\n$logger = new Monolog\\Logger('fluent.tag');\n$fluentHandler = new Monolog\\Handler\\SocketHandler('unix:\/\/\/var\/run\/td-agent\/td-agent.sock');\n$fluentHandler->setFormatter(new Monolog\\Formatter\\FluentdFormatter());\n$logger->pushHandler($fluentHandler);\n\n@author Andrius Putna <fordnox@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$levelTag"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FormatterInterface":{"class":{"descriptions":{"short":"Interface for formatters","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Formatter\\GelfMessageFormatter":{"class":{"descriptions":{"short":"Serializes a log message to GELF","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\HtmlFormatter":{"class":{"descriptions":{"short":"Formats incoming records into an HTML table","long":"This is especially useful for html email logging\n\n@author Tiago Brito <tlfbrito@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\JsonFormatter":{"class":{"descriptions":{"short":"Encodes whatever record data is passed to it as json","long":"This can be useful to log to databases or remote APIs\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$batchMode","$appendNewline"],"docParameters":{"$batchMode":{"type":"int","description":""},"$appendNewline":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LineFormatter":{"class":{"descriptions":{"short":"Formats incoming records into a one-line string","long":"This is especially useful for logging to files\n\n@author Jordi Boggiano <j.boggiano@seld.be>\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$format","$dateFormat","$allowInlineLineBreaks","$ignoreEmptyContextAndExtra"],"docParameters":{"$format":{"type":"string","description":"The format of the message"},"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"},"$allowInlineLineBreaks":{"type":"bool","description":"Whether to allow inline line breaks in log entries"},"$ignoreEmptyContextAndExtra":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LogglyFormatter":{"class":{"descriptions":{"short":"Encodes message information into JSON in a format compatible with Loggly.","long":"@author Adam Pancutt <adam@pancutt.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$batchMode","$appendNewline"],"docParameters":{"$batchMode":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Overrides the default batch mode to new lines for compatibility with the\nLoggly bulk API.","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LogstashFormatter":{"class":{"descriptions":{"short":"Serializes a log message to Logstash Event Format","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$applicationName"],"optionals":["$systemName","$extraPrefix","$contextPrefix","$version"],"docParameters":{"$applicationName":{"type":"string","description":"the application that sends the data, used as the \"type\" field of logstash"},"$systemName":{"type":"string","description":"the system\/machine name, used as the \"source\" field of logstash, defaults to the hostname of the machine"},"$extraPrefix":{"type":"string","description":"prefix for extra keys inside logstash \"fields\""},"$contextPrefix":{"type":"string","description":"prefix for context keys inside logstash \"fields\", defaults to ctxt_"},"$version":{"type":"int","description":"the logstash format version to use, defaults to 0"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\MongoDBFormatter":{"class":{"descriptions":{"short":"Formats a record for use with the MongoDBHandler.","long":"@author Florian Plattner <me@florianplattner.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$maxNestingLevel","$exceptionTraceAsString"],"docParameters":{"$maxNestingLevel":{"type":"int","description":"0 means infinite nesting, the $record itself is level 1, $record['context'] is 2"},"$exceptionTraceAsString":{"type":"bool","description":"set to false to log exception traces as a sub documents instead of strings"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\NormalizerFormatter":{"class":{"descriptions":{"short":"Normalizes incoming records to remove objects\/resources so it's easier to dump to various targets","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\ScalarFormatter":{"class":{"descriptions":{"short":"Formats data into an associative array of scalar values.\nObjects and arrays will be JSON encoded.","long":"@author Andrew Lawson <adlawson@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\WildfireFormatter":{"class":{"descriptions":{"short":"Serializes a log message according to Wildfire's header requirements","long":"@author Eric Clemmons (@ericclemmons) <eric@uxdriven.com>\n@author Christophe Coevoet <stof@notk.org>\n@author Kirill chEbba Chebunin <iam@chebba.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractHandler":{"class":{"descriptions":{"short":"Base Handler class providing the Handler structure","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractProcessingHandler":{"class":{"descriptions":{"short":"Base Handler class providing the Handler structure","long":"Classes extending it should (in most cases) only implement write($record)\n\n@author Jordi Boggiano <j.boggiano@seld.be>\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractSyslogHandler":{"class":{"descriptions":{"short":"Common syslog functionality","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$facility","$level","$bubble"],"docParameters":{"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AmqpHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exchange"],"optionals":["$exchangeName","$level","$bubble"],"docParameters":{"$exchange":{"type":"AMQPExchange|AMQPChannel","description":"AMQPExchange (php AMQP ext) or PHP AMQP lib channel, ready for use"},"$exchangeName":{"type":"string","description":""},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\BrowserConsoleHandler":{"class":{"descriptions":{"short":"Handler sending logs to browser's javascript console with no browser extension required","long":"@author Olivier Poitrey <rs@dailymotion.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\BufferHandler":{"class":{"descriptions":{"short":"Buffers all records until closing the handler and then pass them as batch.","long":"This is useful for a MailHandler to send only one mail per request instead of\nsending one per log message.\n\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$bufferLimit","$level","$bubble","$flushOnOverflow"],"docParameters":{"$handler":{"type":"HandlerInterface","description":"Handler."},"$bufferLimit":{"type":"int","description":"How many entries should be buffered at most, beyond that the oldest items are removed from the buffer."},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$flushOnOverflow":{"type":"Boolean","description":"If true, the buffer is flushed when the max size has been reached, by default oldest entries are discarded"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ChromePHPHandler":{"class":{"descriptions":{"short":"Handler sending logs to the ChromePHP extension (http:\/\/www.chromephp.com\/)","long":"This also works out of the box with Firefox 43+\n\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\CouchDBHandler":{"class":{"descriptions":{"short":"CouchDB handler","long":"@author Markus Bachmann <markus.bachmann@bachi.biz>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\CubeHandler":{"class":{"descriptions":{"short":"Logs to Cube.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$url"],"optionals":["$level","$bubble"],"docParameters":[],"throws":{"\\UnexpectedValueException":"when given url is not a valid url. A valid url must consist of three parts : protocol:\/\/host:port Only valid protocols used by Cube are http and udp"},"return":{"type":"self","description":""},"descriptions":{"short":"Create a Cube handler","long":""},"deprecated":false}}}},"Monolog\\Handler\\Curl\\Util":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\DeduplicationHandler":{"class":{"descriptions":{"short":"Simple handler wrapper that deduplicates log records across multiple requests","long":"It also includes the BufferHandler functionality and will buffer\nall messages until the end of the request or flush() is called.\n\nThis works by storing all log records' messages above $deduplicationLevel\nto the file specified by $deduplicationStore. When further logs come in at the end of the\nrequest (or when flush() is called), all those above $deduplicationLevel are checked\nagainst the existing stored logs. If they match and the timestamps in the stored log is\nnot older than $time seconds, the new log record is discarded. If no log record is new, the\nwhole data set is discarded.\n\nThis is mainly useful in combination with Mail handlers or things like Slack or HipChat handlers\nthat send messages to people, to avoid spamming with the same message over and over in case of\na major component failure like a database server being down which makes all requests fail in the\nsame way.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$deduplicationStore","$deduplicationLevel","$time","$bubble"],"docParameters":{"$handler":{"type":"HandlerInterface","description":"Handler."},"$deduplicationStore":{"type":"string","description":"The file\/path where the deduplication log should be kept"},"$deduplicationLevel":{"type":"int","description":"The minimum logging level for log records to be looked at for deduplication purposes"},"$time":{"type":"int","description":"The period (in seconds) during which duplicate entries should be suppressed after a given log is sent through"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\DoctrineCouchDBHandler":{"class":{"descriptions":{"short":"CouchDB handler for Doctrine CouchDB ODM","long":"@author Markus Bachmann <markus.bachmann@bachi.biz>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\DynamoDbHandler":{"class":{"descriptions":{"short":"Amazon DynamoDB handler (http:\/\/aws.amazon.com\/dynamodb\/)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$table"],"optionals":["$level","$bubble"],"docParameters":{"$client":{"type":"DynamoDbClient","description":""},"$table":{"type":"string","description":""},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ElasticSearchHandler":{"class":{"descriptions":{"short":"Elastic Search handler","long":"Usage example:\n\n$client = new \\Elastica\\Client();\n$options = array(\n'index' => 'elastic_index_name',\n'type' => 'elastic_doc_type',\n);\n$handler = new ElasticSearchHandler($client, $options);\n$log = new Logger('application');\n$log->pushHandler($handler);\n\n@author Jelle Vink <jelle.vink@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":["$options","$level","$bubble"],"docParameters":{"$client":{"type":"Client","description":"Elastica Client object"},"$options":{"type":"array","description":"Handler configuration"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ErrorLogHandler":{"class":{"descriptions":{"short":"Stores to PHP error_log() handler.","long":"@author Elan Ruusam\u00c3\u00a4e <glen@delfi.ee>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$messageType","$level","$bubble","$expandNewlines"],"docParameters":{"$messageType":{"type":"int","description":"Says where the error should go."},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$expandNewlines":{"type":"Boolean","description":"If set to true, newlines in the message will be expanded to be take multiple log entries"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FilterHandler":{"class":{"descriptions":{"short":"Simple handler wrapper that filters records based on a list of levels","long":"It can be configured with an exact list of levels to allow, or a min\/max level."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$minLevelOrList","$maxLevel","$bubble"],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $this)."},"$minLevelOrList":{"type":"int|array","description":"A list of levels to accept or a minimum level if maxLevel is provided"},"$maxLevel":{"type":"int","description":"Maximum level to accept, only used if $minLevelOrList is not an array"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossedHandler":{"class":{"descriptions":{"short":"Buffers all records until a certain level is reached","long":"The advantage of this approach is that you don't get any clutter in your log files.\nOnly requests which actually trigger an error (or whatever your actionLevel is) will be\nin the logs, but they will contain all records, not only those above the level threshold.\n\nYou can find the various activation strategies in the\nMonolog\\Handler\\FingersCrossed\\ namespace.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$activationStrategy","$bufferSize","$bubble","$stopBuffering","$passthruLevel"],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $fingersCrossedHandler)."},"$activationStrategy":{"type":"int|ActivationStrategyInterface","description":"Strategy which determines when this handler takes action"},"$bufferSize":{"type":"int","description":"How many entries should be buffered at most, beyond that the oldest items are removed from the buffer."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$stopBuffering":{"type":"Boolean","description":"Whether the handler should stop buffering after being triggered (default true)"},"$passthruLevel":{"type":"int","description":"Minimum level to always flush to handler on close, even if strategy not triggered"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossed\\ActivationStrategyInterface":{"class":{"descriptions":{"short":"Interface for activation strategies for the FingersCrossedHandler.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\FingersCrossed\\ChannelLevelActivationStrategy":{"class":{"descriptions":{"short":"Channel and Error level based monolog activation strategy. Allows to trigger activation\nbased on level per channel. e.g. trigger activation on level 'ERROR' by default, except\nfor records of the 'sql' channel; those should trigger activation on level 'WARN'.","long":"Example:\n\n<code>\n$activationStrategy = new ChannelLevelActivationStrategy(\nLogger::CRITICAL,\narray(\n'request' => Logger::ALERT,\n'sensitive' => Logger::ERROR,\n)\n);\n$handler = new FingersCrossedHandler(new StreamHandler('php:\/\/stderr'), $activationStrategy);\n<\/code>\n\n@author Mike Meessen <netmikey@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$defaultActionLevel"],"optionals":["$channelToActionLevel"],"docParameters":{"$defaultActionLevel":{"type":"int","description":"The default action level to be used if the record's category doesn't match any"},"$channelToActionLevel":{"type":"array","description":"An array that maps channel names to action levels."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy":{"class":{"descriptions":{"short":"Error level based activation strategy.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$actionLevel"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FirePHPHandler":{"class":{"descriptions":{"short":"Simple FirePHP Handler (http:\/\/www.firephp.org\/), which uses the Wildfire protocol.","long":"@author Eric Clemmons (@ericclemmons) <eric@uxdriven.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FleepHookHandler":{"class":{"descriptions":{"short":"Sends logs to Fleep.io using Webhook integrations","long":"You'll need a Fleep.io account to use this handler."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":["$level","$bubble"],"docParameters":{"$token":{"type":"string","description":"Webhook token"},"$level":{"type":"bool|int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":{"MissingExtensionException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct a new Fleep.io Handler.","long":"For instructions on how to create a new web hook in your conversations\nsee https:\/\/fleep.io\/integrations\/webhooks\/"},"deprecated":false}}}},"Monolog\\Handler\\FlowdockHandler":{"class":{"descriptions":{"short":"Sends notifications through the Flowdock push API","long":"This must be configured with a FlowdockFormatter instance via setFormatter()\n\nNotes:\nAPI token - Flowdock API token\n\n@author Dominik Liebler <liebler.dominik@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$apiToken"],"optionals":["$level","$bubble"],"docParameters":{"$apiToken":{"type":"string","description":""},"$level":{"type":"bool|int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":{"MissingExtensionException":"if OpenSSL is missing"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\GelfHandler":{"class":{"descriptions":{"short":"Handler to send messages to a Graylog2 (http:\/\/www.graylog2.org) server","long":"@author Matt Lehner <mlehner@gmail.com>\n@author Benjamin Zikarsky <benjamin@zikarsky.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$publisher"],"optionals":["$level","$bubble"],"docParameters":{"$publisher":{"type":"PublisherInterface|IMessagePublisher|Publisher","description":"a publisher object"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\GroupHandler":{"class":{"descriptions":{"short":"Forwards records to multiple handlers","long":"@author Lenar L\u00c3\u00b5hmus <lenar@city.ee>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handlers"],"optionals":["$bubble"],"docParameters":{"$handlers":{"type":"array","description":"Array of Handlers."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\HandlerInterface":{"class":{"descriptions":{"short":"Interface that all Monolog Handlers must implement","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\HandlerWrapper":{"class":{"descriptions":{"short":"This simple wrapper class can be used to extend handlers functionality.","long":"Example: A custom filtering that can be applied to any handler.\n\nInherit from this class and override handle() like this:\n\npublic function handle(array $record)\n{\nif ($record meets certain conditions) {\nreturn false;\n}\nreturn $this->handler->handle($record);\n}\n\n@author Alexey Karapetov <alexey@karapetov.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":[],"docParameters":{"$handler":{"type":"HandlerInterface","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"HandlerWrapper constructor.","long":""},"deprecated":false}}}},"Monolog\\Handler\\HipChatHandler":{"class":{"descriptions":{"short":"Sends notifications through the hipchat api to a hipchat room","long":"Notes:\nAPI token - HipChat API token\nRoom      - HipChat Room Id or name, where messages are sent\nName      - Name used to send the message (from)\nnotify    - Should the message trigger a notification in the clients\nversion   - The API version to use (HipChatHandler::API_V1 | HipChatHandler::API_V2)\n\n@author Rafael Dohms <rafael@doh.ms>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$room"],"optionals":["$name","$notify","$level","$bubble","$useSSL","$format","$host","$version"],"docParameters":{"$token":{"type":"string","description":"HipChat API Token"},"$room":{"type":"string","description":"The room that should be alerted of the message (Id or Name)"},"$name":{"type":"string","description":"Name used in the \"from\" field."},"$notify":{"type":"bool","description":"Trigger a notification in clients or not"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$useSSL":{"type":"bool","description":"Whether to connect via SSL."},"$format":{"type":"string","description":"The format of the messages (default to text, can be set to html if you have html in the messages)"},"$host":{"type":"string","description":"The HipChat server hostname."},"$version":{"type":"string","description":"The HipChat API version (default HipChatHandler::API_V1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\IFTTTHandler":{"class":{"descriptions":{"short":"IFTTTHandler uses cURL to trigger IFTTT Maker actions","long":"Register a secret key and trigger\/event name at https:\/\/ifttt.com\/maker\n\nvalue1 will be the channel from monolog's Logger constructor,\nvalue2 will be the level name (ERROR, WARNING, ..)\nvalue3 will be the log record's message\n\n@author Nehal Patel <nehal@nehalpatel.me>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$eventName","$secretKey"],"optionals":["$level","$bubble"],"docParameters":{"$eventName":{"type":"string","description":"The name of the IFTTT Maker event that should be triggered"},"$secretKey":{"type":"string","description":"A valid IFTTT secret key"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\LogEntriesHandler":{"class":{"descriptions":{"short":"@author Robert Kaufmann III <rok3@rok3.me>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":["$useSSL","$level","$bubble"],"docParameters":{"$token":{"type":"string","description":"Log token supplied by LogEntries"},"$useSSL":{"type":"bool","description":"Whether or not SSL encryption should be used."},"$level":{"type":"int","description":"The minimum logging level to trigger this handler"},"$bubble":{"type":"bool","description":"Whether or not messages that are handled should bubble up the stack."}},"throws":{"MissingExtensionException":"If SSL encryption is set to true and OpenSSL is missing"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\LogglyHandler":{"class":{"descriptions":{"short":"Sends errors to Loggly.","long":"@author Przemek Sobstel <przemek@sobstel.org>\n@author Adam Pancutt <adam@pancutt.com>\n@author Gregory Barchard <gregory@barchard.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MailHandler":{"class":{"descriptions":{"short":"Base class for all mail handlers","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MandrillHandler":{"class":{"descriptions":{"short":"MandrillHandler uses cURL to send the emails to the Mandrill API","long":"@author Adam Nicholson <adamnicholson10@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$apiKey","$message"],"optionals":["$level","$bubble"],"docParameters":{"$apiKey":{"type":"string","description":"A valid Mandrill API key"},"$message":{"type":"callable|\\Swift_Message","description":"An example message for real messages, only the body will be replaced"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MissingExtensionException":{"class":{"descriptions":{"short":"Exception can be thrown if an extension for an handler is missing","long":"@author  Christian Bergau <cbergau86@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MongoDBHandler":{"class":{"descriptions":{"short":"Logs to a MongoDB database.","long":"usage example:\n\n$log = new Logger('application');\n$mongodb = new MongoDBHandler(new \\Mongo(\"mongodb:\/\/localhost:27017\"), \"logs\", \"prod\");\n$log->pushHandler($mongodb);\n\n@author Thomas Tourlourat <thomas@tourlourat.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NativeMailerHandler":{"class":{"descriptions":{"short":"NativeMailerHandler uses the mail() function to send the emails","long":"@author Christophe Coevoet <stof@notk.org>\n@author Mark Garrett <mark@moderndeveloperllc.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$to","$subject","$from"],"optionals":["$level","$bubble","$maxColumnWidth"],"docParameters":{"$to":{"type":"string|array","description":"The receiver of the mail"},"$subject":{"type":"string","description":"The subject of the mail"},"$from":{"type":"string","description":"The sender of the mail"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$maxColumnWidth":{"type":"int","description":"The maximum column width that the message lines will have"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NewRelicHandler":{"class":{"descriptions":{"short":"Class to record a log on a NewRelic application.\nEnabling New Relic High Security mode may prevent capture of useful information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NullHandler":{"class":{"descriptions":{"short":"Blackhole","long":"Any record it can handle will be thrown away. This can be used\nto put on top of an existing stack to override it temporarily.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PHPConsoleHandler":{"class":{"descriptions":{"short":"Monolog handler for Google Chrome extension \"PHP Console\"","long":"Display PHP error\/debug log messages in Google Chrome console and notification popups, executes PHP code remotely\n\nUsage:\n1. Install Google Chrome extension https:\/\/chrome.google.com\/webstore\/detail\/php-console\/nfhmhhlpfleoednkpnnnkolmclajemef\n2. See overview https:\/\/github.com\/barbushin\/php-console#overview\n3. Install PHP Console library https:\/\/github.com\/barbushin\/php-console#installation\n4. Example (result will looks like http:\/\/i.hizliresim.com\/vg3Pz4.png)\n\n$logger = new \\Monolog\\Logger('all', array(new \\Monolog\\Handler\\PHPConsoleHandler()));\n\\Monolog\\ErrorHandler::register($logger);\necho $undefinedVar;\n$logger->addDebug('SELECT * FROM users', array('db', 'time' => 0.012));\nPC::debug($_SERVER); \/\/ PHP Console debugger for any type of vars"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$connector","$level","$bubble"],"docParameters":{"$options":{"type":"array","description":"See \\Monolog\\Handler\\PHPConsoleHandler::$options for more details"},"$connector":{"type":"Connector|null","description":"Instance of \\PhpConsole\\Connector class (optional)"},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":{"Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PsrHandler":{"class":{"descriptions":{"short":"Proxies log messages to an existing PSR-3 compliant logger.","long":"@author Michael Moussa <michael.moussa@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$logger"],"optionals":["$level","$bubble"],"docParameters":{"$logger":{"type":"LoggerInterface","description":"The underlying PSR-3 compliant logger to which messages will be proxied"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PushoverHandler":{"class":{"descriptions":{"short":"Sends notifications through the pushover api to mobile phones","long":"@author Sebastian G\u00c3\u00b6ttschkes <sebastian.goettschkes@googlemail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$users"],"optionals":["$title","$level","$bubble","$useSSL","$highPriorityLevel","$emergencyLevel","$retry","$expire"],"docParameters":{"$token":{"type":"string","description":"Pushover api token"},"$users":{"type":"string|array","description":"Pushover user id or array of ids the message will be sent to"},"$title":{"type":"string","description":"Title sent to the Pushover API"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$useSSL":{"type":"Boolean","description":"Whether to connect via SSL. Required when pushing messages to users that are not the pushover.net app owner. OpenSSL is required for this option."},"$highPriorityLevel":{"type":"int","description":"The minimum logging level at which this handler will start sending \"high priority\" requests to the Pushover API"},"$emergencyLevel":{"type":"int","description":"The minimum logging level at which this handler will start sending \"emergency\" requests to the Pushover API"},"$retry":{"type":"int","description":"The retry parameter specifies how often (in seconds) the Pushover servers will send the same notification to the user."},"$expire":{"type":"int","description":"The expire parameter specifies how many seconds your notification will continue to be retried for (every retry seconds)."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RavenHandler":{"class":{"descriptions":{"short":"Handler to send messages to a Sentry (https:\/\/github.com\/getsentry\/sentry) server\nusing raven-php (https:\/\/github.com\/getsentry\/raven-php)","long":"@author Marc Abramowitz <marc@marc-abramowitz.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ravenClient"],"optionals":["$level","$bubble"],"docParameters":{"$ravenClient":{"type":"Raven_Client","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RedisHandler":{"class":{"descriptions":{"short":"Logs to a Redis key using rpush","long":"usage example:\n\n$log = new Logger('application');\n$redis = new RedisHandler(new Predis\\Client(\"tcp:\/\/localhost:6379\"), \"logs\", \"prod\");\n$log->pushHandler($redis);\n\n@author Thomas Tourlourat <thomas@tourlourat.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$redis","$key"],"optionals":["$level","$bubble","$capSize"],"docParameters":{"$redis":{"type":"\\Predis\\Client|\\Redis","description":"The redis instance"},"$key":{"type":"string","description":"The key name to push records to"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$capSize":{"type":"int","description":"Number of entries to limit list size to"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RollbarHandler":{"class":{"descriptions":{"short":"Sends errors to Rollbar","long":"If the context data contains a `payload` key, that is used as an array\nof payload options to RollbarNotifier's report_message\/report_exception methods.\n\nRollbar's context info will contain the context + extra keys from the log record\nmerged, and then on top of that a few keys:\n\n- level (rollbar level name)\n- monolog_level (monolog level name, raw level, as rollbar only has 5 but monolog 8)\n- channel\n- datetime (unix timestamp)\n\n@author Paul Statezny <paulstatezny@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rollbarNotifier"],"optionals":["$level","$bubble"],"docParameters":{"$rollbarNotifier":{"type":"RollbarNotifier","description":"RollbarNotifier object constructed with valid token"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RotatingFileHandler":{"class":{"descriptions":{"short":"Stores logs to files that are rotated every day and a limited number of files are kept.","long":"This rotation is only intended to be used as a workaround. Using logrotate to\nhandle the rotation is strongly encouraged when you can use it.\n\n@author Christophe Coevoet <stof@notk.org>\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$maxFiles","$level","$bubble","$filePermission","$useLocking"],"docParameters":{"$filename":{"type":"string","description":""},"$maxFiles":{"type":"int","description":"The maximal amount of files to keep (0 means unlimited)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$filePermission":{"type":"int|null","description":"Optional file permissions (default (0644) are only for owner read\/write)"},"$useLocking":{"type":"Boolean","description":"Try to lock log file before doing any writes"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SamplingHandler":{"class":{"descriptions":{"short":"Sampling handler","long":"A sampled event stream can be useful for logging high frequency events in\na production environment where you only need an idea of what is happening\nand are not concerned with capturing every occurrence. Since the decision to\nhandle or not handle a particular event is determined randomly, the\nresulting sampled log is not guaranteed to contain 1\/N of the events that\noccurred in the application, but based on the Law of large numbers, it will\ntend to be close to this ratio with a large number of attempts.\n\n@author Bryan Davis <bd808@wikimedia.org>\n@author Kunal Mehta <legoktm@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler","$factor"],"optionals":[],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $fingersCrossedHandler)."},"$factor":{"type":"int","description":"Sample factor"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack API","long":"@author Greg Kedzierski <greg@gregkedzierski.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$channel"],"optionals":["$username","$useAttachment","$iconEmoji","$level","$bubble","$useShortAttachment","$includeContextAndExtra","$excludeFields"],"docParameters":{"$token":{"type":"string","description":"Slack API token"},"$channel":{"type":"string","description":"Slack channel (encoded ID or name)"},"$username":{"type":"string|null","description":"Name of a bot"},"$useAttachment":{"type":"bool","description":"Whether the message should be added to Slack as attachment (plain text otherwise)"},"$iconEmoji":{"type":"string|null","description":"The emoji name to use (or null)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$useShortAttachment":{"type":"bool","description":"Whether the the context\/extra messages added to Slack as attachments are in a short style"},"$includeContextAndExtra":{"type":"bool","description":"Whether the attachment should include context and extra data"},"$excludeFields":{"type":"array","description":"Dot separated list of fields to exclude from slack message. E.g. ['context.field1', 'extra.field2']"}},"throws":{"MissingExtensionException":"If no OpenSSL PHP extension configured"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackWebhookHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack Webhooks","long":"@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$webhookUrl"],"optionals":["$channel","$username","$useAttachment","$iconEmoji","$useShortAttachment","$includeContextAndExtra","$level","$bubble","$excludeFields"],"docParameters":{"$webhookUrl":{"type":"string","description":"Slack Webhook URL"},"$channel":{"type":"string|null","description":"Slack channel (encoded ID or name)"},"$username":{"type":"string|null","description":"Name of a bot"},"$useAttachment":{"type":"bool","description":"Whether the message should be added to Slack as attachment (plain text otherwise)"},"$iconEmoji":{"type":"string|null","description":"The emoji name to use (or null)"},"$useShortAttachment":{"type":"bool","description":"Whether the the context\/extra messages added to Slack as attachments are in a short style"},"$includeContextAndExtra":{"type":"bool","description":"Whether the attachment should include context and extra data"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$excludeFields":{"type":"array","description":"Dot separated list of fields to exclude from slack message. E.g. ['context.field1', 'extra.field2']"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\Slack\\SlackRecord":{"class":{"descriptions":{"short":"Slack record utility helping to log to Slack webhooks or API.","long":"@author Greg Kedzierski <greg@gregkedzierski.com>\n@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$channel","$username","$useAttachment","$userIcon","$useShortAttachment","$includeContextAndExtra","$excludeFields","$formatter"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackbotHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack's Slackbot","long":"@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$slackTeam","$token","$channel"],"optionals":["$level","$bubble"],"docParameters":{"$slackTeam":{"type":"string","description":"Slack team slug"},"$token":{"type":"string","description":"Slackbot token"},"$channel":{"type":"string","description":"Slack channel (encoded ID or name)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SocketHandler":{"class":{"descriptions":{"short":"Stores to any socket - uses fsockopen() or pfsockopen().","long":"@author Pablo de Leon Belloc <pablolb@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connectionString"],"optionals":["$level","$bubble"],"docParameters":{"$connectionString":{"type":"string","description":"Socket connection string"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\StreamHandler":{"class":{"descriptions":{"short":"Stores to any stream resource","long":"Can be used to store into php:\/\/stderr, remote and local files, etc.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$level","$bubble","$filePermission","$useLocking"],"docParameters":{"$stream":{"type":"resource|string","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$filePermission":{"type":"int|null","description":"Optional file permissions (default (0644) are only for owner read\/write)"},"$useLocking":{"type":"Boolean","description":"Try to lock log file before doing any writes"}},"throws":{"\\Exception":"If a missing directory is not buildable","\\InvalidArgumentException":"If stream is not a resource or string"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SwiftMailerHandler":{"class":{"descriptions":{"short":"SwiftMailerHandler uses Swift_Mailer to send the emails","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$mailer","$message"],"optionals":["$level","$bubble"],"docParameters":{"$mailer":{"type":"\\Swift_Mailer","description":"The mailer to use"},"$message":{"type":"callable|\\Swift_Message","description":"An example message for real messages, only the body will be replaced"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogHandler":{"class":{"descriptions":{"short":"Logs to syslog service.","long":"usage example:\n\n$log = new Logger('application');\n$syslog = new SyslogHandler('myfacility', 'local6');\n$formatter = new LineFormatter(\"%channel%.%level_name%: %message% %extra%\");\n$syslog->setFormatter($formatter);\n$log->pushHandler($syslog);\n\n@author Sven Paulus <sven@karlsruhe.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ident"],"optionals":["$facility","$level","$bubble","$logopts"],"docParameters":{"$ident":{"type":"string","description":""},"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$logopts":{"type":"int","description":"Option flags for the openlog() call, defaults to LOG_PID"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogUdpHandler":{"class":{"descriptions":{"short":"A Handler for logging to a remote syslogd server.","long":"@author Jesper Skovgaard Nielsen <nulpunkt@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host"],"optionals":["$port","$facility","$level","$bubble","$ident"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$ident":{"type":"string","description":"Program name or tag for each log message."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogUdp\\UdpSocket":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ip"],"optionals":["$port"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\TestHandler":{"class":{"descriptions":{"short":"Used for testing purposes.","long":"It records all records and gives you access to them for verification.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\WhatFailureGroupHandler":{"class":{"descriptions":{"short":"Forwards records to multiple handlers suppressing failures of each handler\nand continuing through to give every handler a chance to succeed.","long":"@author Craig D'Amelio <craig@damelio.ca>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handlers"],"optionals":["$bubble"],"docParameters":{"$handlers":{"type":"array","description":"Array of Handlers."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ZendMonitorHandler":{"class":{"descriptions":{"short":"Handler sending logs to Zend Monitor","long":"@author  Christian Bergau <cbergau86@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":{"MissingExtensionException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Monolog\\Logger":{"class":{"descriptions":{"short":"Monolog log channel","long":"It contains a stack of Handlers and a stack of Processors,\nand uses them to store records that are added to it.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$handlers","$processors"],"docParameters":{"$name":{"type":"string","description":"The logging channel"},"$handlers":{"type":"HandlerInterface[]","description":"Optional stack of handlers, the first one in the array is called first, etc."},"$processors":{"type":"callable[]","description":"Optional array of processors"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\GitProcessor":{"class":{"descriptions":{"short":"Injects Git branch and Git commit SHA in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\IntrospectionProcessor":{"class":{"descriptions":{"short":"Injects line\/file:class\/function where the log message came from","long":"Warning: This only works if the handler processes the logs directly.\nIf you put the processor on a handler that is behind a FingersCrossedHandler\nfor example, the processor will only be called once the trigger level is reached,\nand all the log records will have the same file\/line\/.. data from the call that\ntriggered the FingersCrossedHandler.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$skipClassesPartials","$skipStackFramesCount"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryPeakUsageProcessor":{"class":{"descriptions":{"short":"Injects memory_get_peak_usage in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryProcessor":{"class":{"descriptions":{"short":"Some methods that are common for all memory processors","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryUsageProcessor":{"class":{"descriptions":{"short":"Injects memory_get_usage in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MercurialProcessor":{"class":{"descriptions":{"short":"Injects Hg branch and Hg revision number in all records","long":"@author Jonathan A. Schweder <jonathanschweder@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\ProcessIdProcessor":{"class":{"descriptions":{"short":"Adds value of getmypid into records","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Processor\\PsrLogMessageProcessor":{"class":{"descriptions":{"short":"Processes a record's message according to PSR-3 rules","long":"It replaces {foo} with the value from $context['foo']\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Processor\\TagProcessor":{"class":{"descriptions":{"short":"Adds a tags array into record","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$tags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\UidProcessor":{"class":{"descriptions":{"short":"Adds a unique identifier into records","long":"@author Simon M\u00c3\u00b6nch <sm@webfactory.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$length"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\WebProcessor":{"class":{"descriptions":{"short":"Injects url\/method and remote IP of the current web request in all records","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$serverData","$extraFields"],"docParameters":{"$serverData":{"type":"array|\\ArrayAccess","description":"Array or object w\/ ArrayAccess that provides access to the $_SERVER data"},"$extraFields":{"type":"array|null","description":"Field names and the related key inside $serverData to be added. If not provided it defaults to: url, ip, http_method, server, referrer"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Registry":{"class":{"descriptions":{"short":"Monolog log registry","long":"Allows to get `Logger` instances in the global scope\nvia static method calls on this class.\n\n<code>\n$application = new Monolog\\Logger('application');\n$api = new Monolog\\Logger('api');\n\nMonolog\\Registry::addLogger($application);\nMonolog\\Registry::addLogger($api);\n\nfunction testLogger()\n{\nMonolog\\Registry::api()->addError('Sent to $api Logger instance');\nMonolog\\Registry::application()->addError('Sent to $application Logger instance');\n}\n<\/code>\n\n@author Tomas Tatarko <tomas@tatarko.sk>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\Assert":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\AssertionFailedError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\BaseTestListener":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\Test":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\TestCase":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":""},"$data":{"type":"array","description":""},"$dataName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\TestListener":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\TestSuite":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":""},"$name":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit_Exception":{"class":{"descriptions":{"short":"Marker interface for PHPUnit exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Extensions_GroupTestSuite":{"class":{"descriptions":{"short":"We have a TestSuite object A.\nIn TestSuite object A we have Tests tagged with @group.\nWe want a TestSuite object B that contains TestSuite objects C, D, ...\nfor the Tests tagged with @group C, @group D, ...\nRunning the Tests from TestSuite object B results in Tests tagged with both","long":"@group C and @group D in TestSuite object A to be run twice .\n\n<code>\n$suite = new PHPUnit_Extensions_GroupTestSuite($A, array('C', 'D'));\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":""},"$name":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit_Extensions_PhptTestCase":{"class":{"descriptions":{"short":"Runner for PHPT test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$phpUtil"],"docParameters":{"$filename":{"type":"string","description":""},"$phpUtil":{"type":"PHPUnit_Util_PHP","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given filename.","long":""},"deprecated":false}}}},"PHPUnit_Extensions_PhptTestSuite":{"class":{"descriptions":{"short":"Suite for .phpt test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$directory"],"optionals":[],"docParameters":{"$directory":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new TestSuite for .phpt test cases.","long":""},"deprecated":false}}}},"PHPUnit_Extensions_RepeatedTest":{"class":{"descriptions":{"short":"A Decorator that runs a test repeatedly.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":["$timesRepeat","$processIsolation"],"docParameters":{"$test":{"type":"PHPUnit_Framework_Test","description":""},"$timesRepeat":{"type":"int","description":""},"$processIsolation":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Extensions_TestDecorator":{"class":{"descriptions":{"short":"A Decorator for Tests.","long":"Use TestDecorator as the base class for defining new\ntest decorators. Test decorator subclasses can be introduced\nto add behaviour before or after a test is run."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"PHPUnit_Framework_Test","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Extensions_TicketListener":{"class":{"descriptions":{"short":"Base class for test listeners that interact with an issue tracker.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_Assert":{"class":{"descriptions":{"short":"A set of assertion methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_AssertionFailedError":{"class":{"descriptions":{"short":"Thrown when an assertion failed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_BaseTestListener":{"class":{"descriptions":{"short":"An empty Listener that can be extended to implement TestListener\nwith just a few lines of code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_CodeCoverageException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint":{"class":{"descriptions":{"short":"Abstract base class for constraints which can be applied to any value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_And":{"class":{"descriptions":{"short":"Logical AND.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ArrayHasKey":{"class":{"descriptions":{"short":"Constraint that asserts that the array it is evaluated for has a given key.","long":"Uses array_key_exists() to check if the key is found in the input array, if\nnot found the evaluation fails.\n\nThe array key is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key"],"optionals":[],"docParameters":{"$key":{"type":"int|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ArraySubset":{"class":{"descriptions":{"short":"Constraint that asserts that the array it is evaluated for has a specified subset.","long":"Uses array_replace_recursive() to check if a key value subset is part of the\nsubject array."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$subset"],"optionals":["$strict"],"docParameters":{"$subset":{"type":"array|Traversable","description":""},"$strict":{"type":"bool","description":"Check for object identity"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Attribute":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint","$attributeName"],"optionals":[],"docParameters":{"$constraint":{"type":"PHPUnit_Framework_Constraint","description":""},"$attributeName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Callback":{"class":{"descriptions":{"short":"Constraint that evaluates against a specified closure.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ClassHasAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the class it is evaluated for has a given\nattribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ClassHasStaticAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the class it is evaluated for has a given\nstatic attribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Composite":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$innerConstraint"],"optionals":[],"docParameters":{"$innerConstraint":{"type":"PHPUnit_Framework_Constraint","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Count":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_DirectoryExists":{"class":{"descriptions":{"short":"Constraint that checks if the directory(name) that it is evaluated for exists.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ExceptionCode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ExceptionMessage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ExceptionMessageRegExp":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_FileExists":{"class":{"descriptions":{"short":"Constraint that checks if the file(name) that it is evaluated for exists.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_GreaterThan":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is greater\nthan a given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"numeric","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsAnything":{"class":{"descriptions":{"short":"Constraint that accepts any input value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsEmpty":{"class":{"descriptions":{"short":"Constraint that checks whether a variable is empty().","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsEqual":{"class":{"descriptions":{"short":"Constraint that checks if one value is equal to another.","long":"Equality is checked with PHP's == operator, the operator is explained in\ndetail at {@url http:\/\/www.php.net\/manual\/en\/types.comparisons.php}.\nTwo values are equal if they have the same value disregarding type.\n\nThe expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$delta","$maxDepth","$canonicalize","$ignoreCase"],"docParameters":{"$value":{"type":"mixed","description":""},"$delta":{"type":"float","description":""},"$maxDepth":{"type":"int","description":""},"$canonicalize":{"type":"bool","description":""},"$ignoreCase":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsFalse":{"class":{"descriptions":{"short":"Constraint that accepts false.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsFinite":{"class":{"descriptions":{"short":"Constraint that accepts finite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsIdentical":{"class":{"descriptions":{"short":"Constraint that asserts that one value is identical to another.","long":"Identical check is performed with PHP's === operator, the operator is\nexplained in detail at\n{@url http:\/\/www.php.net\/manual\/en\/types.comparisons.php}.\nTwo values are identical if they have the same value and are of the same\ntype.\n\nThe expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsInfinite":{"class":{"descriptions":{"short":"Constraint that accepts infinite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsInstanceOf":{"class":{"descriptions":{"short":"Constraint that asserts that the object it is evaluated for is an instance\nof a given class.","long":"The expected class name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsJson":{"class":{"descriptions":{"short":"Constraint that asserts that a string is valid JSON.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsNan":{"class":{"descriptions":{"short":"Constraint that accepts nan.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsNull":{"class":{"descriptions":{"short":"Constraint that accepts null.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsReadable":{"class":{"descriptions":{"short":"Constraint that checks if the file\/dir(name) that it is evaluated for is readable.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsTrue":{"class":{"descriptions":{"short":"Constraint that accepts true.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsType":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is of a\nspecified type.","long":"The expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_IsWritable":{"class":{"descriptions":{"short":"Constraint that checks if the file\/dir(name) that it is evaluated for is writable.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_JsonMatches":{"class":{"descriptions":{"short":"Asserts whether or not two JSON objects are equal.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new constraint.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider":{"class":{"descriptions":{"short":"Provides human readable messages for each JSON error.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_Constraint_LessThan":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is less than\na given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"numeric","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Not":{"class":{"descriptions":{"short":"Logical NOT.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint"],"optionals":[],"docParameters":{"$constraint":{"type":"PHPUnit_Framework_Constraint","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_ObjectHasAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the object it is evaluated for has a given\nattribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Or":{"class":{"descriptions":{"short":"Logical OR.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_PCREMatch":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for matches\na regular expression.","long":"Checks a given value using the Perl Compatible Regular Expression extension\nin PHP. The pattern is matched by executing preg_match().\n\nThe pattern string passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$pattern"],"optionals":[],"docParameters":{"$pattern":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_SameSize":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_StringContains":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for contains\na given string.","long":"Uses mb_strpos() to find the position of the string in the input, if not\nfound the evaluation fails.\n\nThe sub-string is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":["$ignoreCase"],"docParameters":{"$string":{"type":"string","description":""},"$ignoreCase":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_StringEndsWith":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for ends with a given\nsuffix.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$suffix"],"optionals":[],"docParameters":{"$suffix":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_StringMatches":{"class":{"descriptions":{"short":"...","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":[],"docParameters":{"$string":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_StringStartsWith":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for begins with a\ngiven prefix.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefix"],"optionals":[],"docParameters":{"$prefix":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_TraversableContains":{"class":{"descriptions":{"short":"Constraint that asserts that the Traversable it is applied to contains\na given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$checkForObjectIdentity","$checkForNonObjectIdentity"],"docParameters":{"$value":{"type":"mixed","description":""},"$checkForObjectIdentity":{"type":"bool","description":""},"$checkForNonObjectIdentity":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_TraversableContainsOnly":{"class":{"descriptions":{"short":"Constraint that asserts that the Traversable it is applied to contains\nonly values of a given type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$isNativeType"],"docParameters":{"$type":{"type":"string","description":""},"$isNativeType":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Constraint_Xor":{"class":{"descriptions":{"short":"Logical XOR.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_CoveredCodeNotExecutedException":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that does not execute the code it wants to cover.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Error":{"class":{"descriptions":{"short":"Wrapper for PHP errors.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":""},"$code":{"type":"int","description":""},"$file":{"type":"string","description":""},"$line":{"type":"int","description":""},"$previous":{"type":"Exception","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Error_Deprecated":{"class":{"descriptions":{"short":"Wrapper for PHP deprecated errors.\nYou can disable deprecated-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Deprecated::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":""},"$code":{"type":"int","description":""},"$file":{"type":"string","description":""},"$line":{"type":"int","description":""},"$previous":{"type":"Exception","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Error_Notice":{"class":{"descriptions":{"short":"Wrapper for PHP notices.\nYou can disable notice-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Notice::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":""},"$code":{"type":"int","description":""},"$file":{"type":"string","description":""},"$line":{"type":"int","description":""},"$previous":{"type":"Exception","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Error_Warning":{"class":{"descriptions":{"short":"Wrapper for PHP warnings.\nYou can disable notice-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Warning::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":""},"$code":{"type":"int","description":""},"$file":{"type":"string","description":""},"$line":{"type":"int","description":""},"$previous":{"type":"Exception","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Exception":{"class":{"descriptions":{"short":"Base class for all PHPUnit Framework exceptions.","long":"Ensures that exceptions thrown during a test run do not leave stray\nreferences behind.\n\nEvery Exception contains a stack trace. Each stack frame contains the 'args'\nof the called function. The function arguments can contain references to\ninstantiated objects. The references prevent the objects from being\ndestructed (until test results are eventually printed), so memory cannot be\nfreed up.\n\nWith enabled process isolation, test results are serialized in the child\nprocess and unserialized in the parent process. The stack trace of Exceptions\nmay contain objects that cannot be serialized or unserialized (e.g., PDO\nconnections). Unserializing user-space objects from the child process into\nthe parent would break the intended encapsulation of process isolation."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_ExceptionWrapper":{"class":{"descriptions":{"short":"Wraps Exceptions thrown by code under test.","long":"Re-instantiates Exceptions thrown by user-space code to retain their original\nclass names, properties, and stack traces (but without arguments).\n\nUnlike PHPUnit_Framework_Exception, the complete stack of previous Exceptions\nis processed."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$e"],"optionals":[],"docParameters":{"$e":{"type":"Throwable|Exception","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_ExpectationFailedException":{"class":{"descriptions":{"short":"Exception for expectations which failed their check.","long":"The exception contains the error message and optionally a\nSebastianBergmann\\Comparator\\ComparisonFailure which is used to\ngenerate diff output of the failed expectations."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$comparisonFailure","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_IncompleteTest":{"class":{"descriptions":{"short":"A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_IncompleteTestCase":{"class":{"descriptions":{"short":"An incomplete test case","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName"],"optionals":["$message"],"docParameters":{"$className":{"type":"string","description":""},"$methodName":{"type":"string","description":""},"$message":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_IncompleteTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of an incomplete test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_InvalidCoversTargetException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MissingCoversAnnotationException":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark a test as risky\nwhen it does not have a @covers annotation but is expected to have one.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Builder_Identity":{"class":{"descriptions":{"short":"Builder interface for unique identifiers.","long":"Defines the interface for recording unique identifiers. The identifiers\ncan be used to define the invocation order of expectations. The expectation\nis recorded using id() and then defined in order using\nPHPUnit_Framework_MockObject_Builder_Match::after()."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_InvocationMocker":{"class":{"descriptions":{"short":"Builder for mocked or stubbed invocations.","long":"Provides methods for building expectations without having to resort to\ninstantiating the various matchers manually. These methods also form a\nmore natural way of reading the expectation. This class should be together\nwith the test case PHPUnit_Framework_MockObject_TestCase."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$collection","$invocationMatcher","$configurableMethods"],"optionals":[],"docParameters":{"$collection":{"type":"PHPUnit_Framework_MockObject_Stub_MatcherCollection","description":""},"$invocationMatcher":{"type":"PHPUnit_Framework_MockObject_Matcher_Invocation","description":""},"$configurableMethods":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Builder_Match":{"class":{"descriptions":{"short":"Builder interface for invocation order matches.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_MethodNameMatch":{"class":{"descriptions":{"short":"Builder interface for matcher of method names.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_Namespace":{"class":{"descriptions":{"short":"Interface for builders which can register builders with a given identification.","long":"This interface relates to PHPUnit_Framework_MockObject_Builder_Identity."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_ParametersMatch":{"class":{"descriptions":{"short":"Builder interface for parameter matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_Stub":{"class":{"descriptions":{"short":"Builder interface for stubs which are actions replacing an invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Exception":{"class":{"descriptions":{"short":"Interface for exceptions used by PHPUnit_MockObject.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Generator":{"class":{"descriptions":{"short":"Mock Object Code Generator","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Invocation":{"class":{"descriptions":{"short":"Interface for invocations.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_InvocationMocker":{"class":{"descriptions":{"short":"Mocker for invocations which are sent from\nPHPUnit_Framework_MockObject_MockObject objects.","long":"Keeps track of all expectations and stubs as well as registering\nidentifications for builders."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$configurableMethods"],"optionals":[],"docParameters":{"$configurableMethods":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invocation_Object":{"class":{"descriptions":{"short":"Represents a non-static invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName","$parameters","$returnType","$object"],"optionals":["$cloneObjects"],"docParameters":{"$className":{"type":"string","description":""},"$methodName":{"type":"string","description":""},"$parameters":{"type":"array","description":""},"$returnType":{"type":"string","description":""},"$object":{"type":"object","description":""},"$cloneObjects":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invocation_Static":{"class":{"descriptions":{"short":"Represents a static invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName","$parameters","$returnType"],"optionals":["$cloneObjects"],"docParameters":{"$className":{"type":"string","description":""},"$methodName":{"type":"string","description":""},"$parameters":{"type":"array","description":""},"$returnType":{"type":"string","description":""},"$cloneObjects":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invokable":{"class":{"descriptions":{"short":"Interface for classes which can be invoked.","long":"The invocation will be taken from a mock object and passed to an object\nof this class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher":{"class":{"descriptions":{"short":"Main matcher which defines a full expectation using method, parameter and\ninvocation matchers.\nThis matcher encapsulates all the other matchers and allows the builder to\nset the specific matchers when the appropriate methods are called (once(),\nwhere() etc.).","long":"All properties are public so that they can easily be accessed by the builder."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$invocationMatcher"],"optionals":[],"docParameters":{"$invocationMatcher":{"type":"PHPUnit_Framework_MockObject_Matcher_Invocation","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked zero or more\ntimes. This matcher will always match.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_AnyParameters":{"class":{"descriptions":{"short":"Invocation matcher which allows any parameters to a method.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters":{"class":{"descriptions":{"short":"Invocation matcher which looks for sets of specific parameters in the invocations.","long":"Checks the parameters of the incoming invocations, the parameter list is\nchecked against the defined constraints in $parameters. If the constraint\nis met it will return true in matches().\n\nIt takes a list of match groups and and increases a call index after each invocation.\nSo the first invocation uses the first group of constraints, the second the next and so on."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameterGroups"],"optionals":[],"docParameters":{"$parameterGroups":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_Invocation":{"class":{"descriptions":{"short":"Interface for classes which matches an invocation based on its\nmethod name, argument, order or call count.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method was invoked at a certain index.","long":"If the expected index number does not match the current invocation index it\nwill not match which means it skips all method and parameter matching. Only\nonce the index is reached will the method and parameter start matching and\nverifying.\n\nIf the index is never reached it will throw an exception in index."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sequenceIndex"],"optionals":[],"docParameters":{"$sequenceIndex":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least\nN times.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$requiredInvocations"],"optionals":[],"docParameters":{"$requiredInvocations":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least one\ntime.","long":"If the number of invocations is 0 it will throw an exception in verify."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least\nN times.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$allowedInvocations"],"optionals":[],"docParameters":{"$allowedInvocations":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked a certain amount\nof times.\nIf the number of invocations exceeds the value it will immediately throw an\nexception,\nIf the number is less it will later be checked in verify() and also throw an\nexception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedCount"],"optionals":[],"docParameters":{"$expectedCount":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedRecorder":{"class":{"descriptions":{"short":"Records invocations and provides convenience methods for checking them later\non.\nThis abstract class can be implemented by matchers which needs to check the\nnumber of times an invocation has occurred.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_MethodName":{"class":{"descriptions":{"short":"Invocation matcher which looks for a specific method name in the invocations.","long":"Checks the method name all incoming invocations, the name is checked against\nthe defined constraint $constraint. If the constraint is met it will return\ntrue in matches()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint"],"optionals":[],"docParameters":{"":{"type":"PHPUnit_Framework_Constraint|string","description":""}},"throws":{"PHPUnit_Framework_Constraint":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_Parameters":{"class":{"descriptions":{"short":"Invocation matcher which looks for specific parameters in the invocations.","long":"Checks the parameters of all incoming invocations, the parameter list is\nchecked against the defined constraints in $parameters. If the constraint\nis met it will return true in matches()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_StatelessInvocation":{"class":{"descriptions":{"short":"Invocation matcher which does not care about previous state from earlier\ninvocations.","long":"This abstract class can be implemented by matchers which does not care about\nstate but only the current run-time value of the invocation itself."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_MockBuilder":{"class":{"descriptions":{"short":"Implementation of the Builder pattern for Mock objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$testCase","$type"],"optionals":[],"docParameters":{"$testCase":{"type":"PHPUnit_Framework_TestCase","description":""},"$type":{"type":"array|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_MockObject":{"class":{"descriptions":{"short":"Interface for all mock objects which are generated by\nPHPUnit_Framework_MockObject_MockBuilder.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub":{"class":{"descriptions":{"short":"An object that stubs the process of a normal method for a mock object.","long":"The stub object will replace the code for the stubbed method and return a\nspecific value instead of the original value."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined stack of values.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stack"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_Exception":{"class":{"descriptions":{"short":"Stubs a method by raising a user-defined exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_MatcherCollection":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined value.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_Return":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnArgument":{"class":{"descriptions":{"short":"Stubs a method by returning an argument that was passed to the mocked method.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argumentIndex"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnCallback":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnReference":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined reference to a value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnSelf":{"class":{"descriptions":{"short":"Stubs a method by returning the current object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_ReturnValueMap":{"class":{"descriptions":{"short":"Stubs a method by returning a value from a map.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$valueMap"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Verifiable":{"class":{"descriptions":{"short":"Interface for classes which must verify a given expectation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_OutputError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that printed output.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_RiskyTest":{"class":{"descriptions":{"short":"A marker interface for marking any exception\/error as result of an unit\ntest as risky.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_RiskyTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a risky test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_SelfDescribing":{"class":{"descriptions":{"short":"Interface for classes that can return a description of itself.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_SkippedTest":{"class":{"descriptions":{"short":"A marker interface for marking a unit test as being skipped.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_SkippedTestCase":{"class":{"descriptions":{"short":"A skipped test case","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName"],"optionals":["$message"],"docParameters":{"$message":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_SkippedTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a skipped test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_SkippedTestSuiteError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a skipped test suite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_SyntheticError":{"class":{"descriptions":{"short":"Creates a synthetic failed assertion.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line","$trace"],"optionals":[],"docParameters":{"$message":{"type":"string","description":""},"$code":{"type":"int","description":""},"$file":{"type":"string","description":""},"$line":{"type":"int","description":""},"$trace":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Framework_Test":{"class":{"descriptions":{"short":"A Test can be run and collect its results.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_TestCase":{"class":{"descriptions":{"short":"A TestCase defines the fixture to run multiple tests.","long":"To define a TestCase\n\n1) Implement a subclass of PHPUnit_Framework_TestCase.\n2) Define instance variables that store the state of the fixture.\n3) Initialize the fixture state by overriding setUp().\n4) Clean-up after a test by overriding tearDown().\n\nEach test runs in its own fixture so there can be no side effects\namong test runs.\n\nHere is an example:\n\n<code>\n<?php\nclass MathTest extends PHPUnit_Framework_TestCase\n{\npublic $value1;\npublic $value2;\n\nprotected function setUp()\n{\n$this->value1 = 2;\n$this->value2 = 3;\n}\n}\n?>\n<\/code>\n\nFor each test implement a method which interacts with the fixture.\nVerify the expected results with assertions specified by calling\nassert with a boolean.\n\n<code>\n<?php\npublic function testPass()\n{\n$this->assertTrue($this->value1 + $this->value2 == 5);\n}\n?>\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":""},"$data":{"type":"array","description":""},"$dataName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"PHPUnit_Framework_TestFailure":{"class":{"descriptions":{"short":"A TestFailure collects a failed test together with the caught exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$failedTest","$t"],"optionals":[],"docParameters":{"$failedTest":{"type":"PHPUnit_Framework_Test","description":""},"$t":{"type":"Throwable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a TestFailure with the given test and exception.","long":""},"deprecated":false}}}},"PHPUnit_Framework_TestListener":{"class":{"descriptions":{"short":"A Listener for test progress.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_TestResult":{"class":{"descriptions":{"short":"A TestResult collects the results of executing a test case.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_TestSuite":{"class":{"descriptions":{"short":"A TestSuite is a composite of Tests. It runs a collection of test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":""},"$name":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit_Framework_TestSuite_DataProvider":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":""},"$name":{"type":"string","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit_Framework_UnintentionallyCoveredCodeError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that unintentionally covers code.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_Warning":{"class":{"descriptions":{"short":"Thrown when an there is a warning.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_WarningTestCase":{"class":{"descriptions":{"short":"A warning.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message"],"docParameters":{"$message":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_BaseTestRunner":{"class":{"descriptions":{"short":"Base class for all test runners.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Runner_Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_Filter_Factory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Runner_Filter_GroupFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":""},"$groups":{"type":"array","description":""},"$suite":{"type":"PHPUnit_Framework_TestSuite","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_Filter_Group_Exclude":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":""},"$groups":{"type":"array","description":""},"$suite":{"type":"PHPUnit_Framework_TestSuite","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_Filter_Group_Include":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":""},"$groups":{"type":"array","description":""},"$suite":{"type":"PHPUnit_Framework_TestSuite","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_Filter_Test":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$filter"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":""},"$filter":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Runner_StandardTestSuiteLoader":{"class":{"descriptions":{"short":"The standard test suite loader.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Runner_TestSuiteLoader":{"class":{"descriptions":{"short":"An interface to define how a test suite should be loaded.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Runner_Version":{"class":{"descriptions":{"short":"This class defines the current version of PHPUnit.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_TextUI_Command":{"class":{"descriptions":{"short":"A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_TextUI_ResultPrinter":{"class":{"descriptions":{"short":"Prints the result of a TextUI TestRunner run.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$verbose","$colors","$debug","$numberOfColumns","$reverse"],"docParameters":{"$out":{"type":"mixed","description":""},"$verbose":{"type":"bool","description":""},"$colors":{"type":"string","description":""},"$debug":{"type":"bool","description":""},"$numberOfColumns":{"type":"int|string","description":""},"$reverse":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_TextUI_TestRunner":{"class":{"descriptions":{"short":"A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$loader","$filter"],"docParameters":{"$loader":{"type":"PHPUnit_Runner_TestSuiteLoader","description":""},"$filter":{"type":"CodeCoverageFilter","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_Blacklist":{"class":{"descriptions":{"short":"Utility class for blacklisting PHPUnit's own source code files.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Configuration":{"class":{"descriptions":{"short":"Wrapper for the PHPUnit XML configuration file.","long":"Example XML configuration file:\n<code>\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n\n<phpunit backupGlobals=\"true\"\nbackupStaticAttributes=\"false\"\nbootstrap=\"\/path\/to\/bootstrap.php\"\ncacheTokens=\"false\"\ncolumns=\"80\"\ncolors=\"false\"\nstderr=\"false\"\nconvertErrorsToExceptions=\"true\"\nconvertNoticesToExceptions=\"true\"\nconvertWarningsToExceptions=\"true\"\nforceCoversAnnotation=\"false\"\nprocessIsolation=\"false\"\nstopOnError=\"false\"\nstopOnFailure=\"false\"\nstopOnWarning=\"false\"\nstopOnIncomplete=\"false\"\nstopOnRisky=\"false\"\nstopOnSkipped=\"false\"\nfailOnWarning=\"false\"\nfailOnRisky=\"false\"\nextensionsDirectory=\"tools\/phpunit.d\"\nprinterClass=\"PHPUnit_TextUI_ResultPrinter\"\ntestSuiteLoaderClass=\"PHPUnit_Runner_StandardTestSuiteLoader\"\nbeStrictAboutChangesToGlobalState=\"false\"\nbeStrictAboutCoversAnnotation=\"false\"\nbeStrictAboutOutputDuringTests=\"false\"\nbeStrictAboutResourceUsageDuringSmallTests=\"false\"\nbeStrictAboutTestsThatDoNotTestAnything=\"false\"\nbeStrictAboutTodoAnnotatedTests=\"false\"\ncheckForUnintentionallyCoveredCode=\"false\"\nenforceTimeLimit=\"false\"\ntimeoutForSmallTests=\"1\"\ntimeoutForMediumTests=\"10\"\ntimeoutForLargeTests=\"60\"\nverbose=\"false\"\nreverseDefectList=\"false\"\nregisterMockObjectsFromTestArgumentsRecursively=\"false\">\n<testsuites>\n<testsuite name=\"My Test Suite\">\n<directory suffix=\"Test.php\" phpVersion=\"5.3.0\" phpVersionOperator=\">=\">\/path\/to\/files<\/directory>\n<file phpVersion=\"5.3.0\" phpVersionOperator=\">=\">\/path\/to\/MyTest.php<\/file>\n<exclude>\/path\/to\/files\/exclude<\/exclude>\n<\/testsuite>\n<\/testsuites>\n\n<groups>\n<include>\n<group>name<\/group>\n<\/include>\n<exclude>\n<group>name<\/group>\n<\/exclude>\n<\/groups>\n\n<testdoxGroups>\n<include>\n<group>name<\/group>\n<\/include>\n<exclude>\n<group>name<\/group>\n<\/exclude>\n<\/testdoxGroups>\n\n<filter>\n<whitelist addUncoveredFilesFromWhitelist=\"true\"\nprocessUncoveredFilesFromWhitelist=\"false\">\n<directory suffix=\".php\">\/path\/to\/files<\/directory>\n<file>\/path\/to\/file<\/file>\n<exclude>\n<directory suffix=\".php\">\/path\/to\/files<\/directory>\n<file>\/path\/to\/file<\/file>\n<\/exclude>\n<\/whitelist>\n<\/filter>\n\n<listeners>\n<listener class=\"MyListener\" file=\"\/optional\/path\/to\/MyListener.php\">\n<arguments>\n<array>\n<element key=\"0\">\n<string>Sebastian<\/string>\n<\/element>\n<\/array>\n<integer>22<\/integer>\n<string>April<\/string>\n<double>19.78<\/double>\n<null\/>\n<object class=\"stdClass\"\/>\n<file>MyRelativeFile.php<\/file>\n<directory>MyRelativeDir<\/directory>\n<\/arguments>\n<\/listener>\n<\/listeners>\n\n<logging>\n<log type=\"coverage-html\" target=\"\/tmp\/report\" lowUpperBound=\"50\" highLowerBound=\"90\"\/>\n<log type=\"coverage-clover\" target=\"\/tmp\/clover.xml\"\/>\n<log type=\"coverage-crap4j\" target=\"\/tmp\/crap.xml\" threshold=\"30\"\/>\n<log type=\"json\" target=\"\/tmp\/logfile.json\"\/>\n<log type=\"plain\" target=\"\/tmp\/logfile.txt\"\/>\n<log type=\"tap\" target=\"\/tmp\/logfile.tap\"\/>\n<log type=\"teamcity\" target=\"\/tmp\/logfile.txt\"\/>\n<log type=\"junit\" target=\"\/tmp\/logfile.xml\" logIncompleteSkipped=\"false\"\/>\n<log type=\"testdox-html\" target=\"\/tmp\/testdox.html\"\/>\n<log type=\"testdox-text\" target=\"\/tmp\/testdox.txt\"\/>\n<log type=\"testdox-xml\" target=\"\/tmp\/testdox.xml\"\/>\n<\/logging>\n\n<php>\n<includePath>.<\/includePath>\n<ini name=\"foo\" value=\"bar\"\/>\n<const name=\"foo\" value=\"bar\"\/>\n<var name=\"foo\" value=\"bar\"\/>\n<env name=\"foo\" value=\"bar\"\/>\n<post name=\"foo\" value=\"bar\"\/>\n<get name=\"foo\" value=\"bar\"\/>\n<cookie name=\"foo\" value=\"bar\"\/>\n<server name=\"foo\" value=\"bar\"\/>\n<files name=\"foo\" value=\"bar\"\/>\n<request name=\"foo\" value=\"bar\"\/>\n<\/php>\n<\/phpunit>\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":{"$filename":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Loads a PHPUnit configuration file.","long":""},"deprecated":false}}}},"PHPUnit_Util_ConfigurationGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_ErrorHandler":{"class":{"descriptions":{"short":"Error handler that converts PHP errors and warnings to exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Fileloader":{"class":{"descriptions":{"short":"Utility methods to load PHP sourcefiles.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Filesystem":{"class":{"descriptions":{"short":"Filesystem helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Filter":{"class":{"descriptions":{"short":"Utility class for code filtering.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Getopt":{"class":{"descriptions":{"short":"Command-line options parsing class.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_GlobalState":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_InvalidArgumentHelper":{"class":{"descriptions":{"short":"Factory for PHPUnit_Framework_Exception objects that are used to describe\ninvalid arguments passed to a function or method.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Log_JSON":{"class":{"descriptions":{"short":"A TestListener that generates JSON messages.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"mixed","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Util_Log_JUnit":{"class":{"descriptions":{"short":"A TestListener that generates a logfile of the test execution in XML markup.","long":"The XML markup used is the same as the one that is used by the JUnit Ant task."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$logIncompleteSkipped"],"docParameters":{"$out":{"type":"mixed","description":""},"$logIncompleteSkipped":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Util_Log_TAP":{"class":{"descriptions":{"short":"A TestListener that generates a logfile of the\ntest execution using the Test Anything Protocol (TAP).","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"mixed","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Util_Log_TeamCity":{"class":{"descriptions":{"short":"A TestListener that generates a logfile of the test execution using the\nTeamCity format (for use with PhpStorm, for instance).","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$verbose","$colors","$debug","$numberOfColumns","$reverse"],"docParameters":{"$out":{"type":"mixed","description":""},"$verbose":{"type":"bool","description":""},"$colors":{"type":"string","description":""},"$debug":{"type":"bool","description":""},"$numberOfColumns":{"type":"int|string","description":""},"$reverse":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Util_PHP":{"class":{"descriptions":{"short":"Utility methods for PHP sub-processes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit_Util_PHP_Default":{"class":{"descriptions":{"short":"Default utility for PHP sub-processes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit_Util_PHP_Windows":{"class":{"descriptions":{"short":"Windows utility for PHP sub-processes.","long":"Reading from STDOUT or STDERR hangs forever on Windows if the output is\ntoo large."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit_Util_Printer":{"class":{"descriptions":{"short":"Utility class that can print to STDOUT or write to a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"mixed","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit_Util_Regex":{"class":{"descriptions":{"short":"Error handler that converts PHP errors and warnings to exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_String":{"class":{"descriptions":{"short":"String helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_Test":{"class":{"descriptions":{"short":"Test helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_TestDox_NamePrettifier":{"class":{"descriptions":{"short":"Prettifies class and method names for use in TestDox documentation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_TestDox_ResultPrinter":{"class":{"descriptions":{"short":"Base class for printers of TestDox documentation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":""},"$groups":{"type":"array","description":""},"$excludeGroups":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_TestDox_ResultPrinter_HTML":{"class":{"descriptions":{"short":"Prints TestDox documentation in HTML format.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":""},"$groups":{"type":"array","description":""},"$excludeGroups":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_TestDox_ResultPrinter_Text":{"class":{"descriptions":{"short":"Prints TestDox documentation in text format.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":""},"$groups":{"type":"array","description":""},"$excludeGroups":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_TestDox_ResultPrinter_XML":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"string|resource","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_TestSuiteIterator":{"class":{"descriptions":{"short":"Iterator for test suites.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$testSuite"],"optionals":[],"docParameters":{"$testSuite":{"type":"PHPUnit_Framework_TestSuite","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Util_Type":{"class":{"descriptions":{"short":"Utility class for textual type (and value) representation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Util_XML":{"class":{"descriptions":{"short":"XML helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_Timer":{"class":{"descriptions":{"short":"Utility class for timing.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_Token":{"class":{"descriptions":{"short":"A PHP token.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_TokenWithScope":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_TokenWithScopeAndVisibility":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ABSTRACT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AMPERSAND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AND_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ARRAY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ARRAY_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ASYNC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AWAIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BACKTICK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BAD_CHARACTER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOLEAN_AND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOLEAN_OR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOL_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BREAK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CALLABLE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CARET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CASE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CATCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CHARACTER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS_NAME_CONSTANT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLONE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_BRACKET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_CURLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_SQUARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_TAG":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COALESCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMMA":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMMENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMPILER_HALT_OFFSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONCAT_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONSTANT_ENCAPSED_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONTINUE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CURLY_OPEN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DEC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DECLARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DEFAULT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIV":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIV_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DNUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOC_COMMENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOLLAR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOLLAR_OPEN_CURLY_BRACES":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_ARROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_COLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_QUOTES":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ECHO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELLIPSIS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELSE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELSEIF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EMPTY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENCAPSED_AND_WHITESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDDECLARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDFOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDFOREACH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDIF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDSWITCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDWHILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_END_HEREDOC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENUM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EQUALS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EVAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXCLAMATION_MARK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXTENDS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FINAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FINALLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FOREACH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FUNCTION":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FUNC_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GLOBAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GOTO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_HALT_COMPILER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IMPLEMENTS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INCLUDE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INCLUDE_ONCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INLINE_HTML":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INSTANCEOF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INSTEADOF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INTERFACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INT_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ISSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_GREATER_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_IDENTICAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_NOT_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_NOT_IDENTICAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_SMALLER_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Includes":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_JOIN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_ARROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_CP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_OP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LINE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LIST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LNUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_AND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_OR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_XOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_METHOD_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MINUS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MINUS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MOD_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MULT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MUL_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NAMESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NEW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NS_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NS_SEPARATOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NULLSAFE_OBJECT_OPERATOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NUM_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OBJECT_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OBJECT_OPERATOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ONUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_BRACKET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_CURLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_SQUARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_TAG":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_TAG_WITH_ECHO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PAAMAYIM_NEKUDOTAYIM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PERCENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PIPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PLUS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PLUS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_POW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_POW_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PRINT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PRIVATE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PROTECTED":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PUBLIC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_QUESTION_MARK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_REQUIRE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_REQUIRE_ONCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_RETURN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SEMICOLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SHAPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SL_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SPACESHIP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_START_HEREDOC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STATIC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING_VARNAME":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SUPER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SWITCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Stream":{"class":{"descriptions":{"short":"A stream of PHP tokens.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sourceCode"],"optionals":[],"docParameters":{"$sourceCode":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Stream_CachingFactory":{"class":{"descriptions":{"short":"A caching factory for token stream objects.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_Token_THROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TILDE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRAIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRAIT_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPELIST_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPELIST_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_UNSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_UNSET_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_USE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_USE_FUNCTION":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_VAR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_VARIABLE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHERE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHITESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_ATTRIBUTE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CATEGORY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CATEGORY_LABEL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CHILDREN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_LABEL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_REQUIRED":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TAG_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TAG_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TEXT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XOR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_YIELD":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_YIELD_FROM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":""},"$line":{"type":"integer","description":""},"$tokenStream":{"type":"PHP_Token_Stream","description":""},"$id":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PhpAmqpLib\\Channel\\AMQPChannel":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":["$channel_id","$auto_decode"],"docParameters":{"$connection":{"type":"\\PhpAmqpLib\\Connection\\AbstractConnection","description":""},"$channel_id":{"type":"null","description":""},"$auto_decode":{"type":"bool","description":""}},"throws":{"\\Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Channel\\AbstractChannel":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection","$channel_id"],"optionals":[],"docParameters":{"$connection":{"type":"AbstractConnection","description":""},"$channel_id":{"type":"string","description":""}},"throws":{"\\PhpAmqpLib\\Exception\\AMQPRuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPConnection":{"class":{"descriptions":{"short":"Class AMQPConnection","long":"Kept for BC"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPLazyConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPLazySocketConnection":{"class":{"descriptions":{"short":"Yet another lazy connection. This time using sockets. Current architecture doesn't allow to wrap existing connections","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$timeout","$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPSSLConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$ssl_options","$options"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$ssl_options":{"type":"array","description":""},"$options":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPSocketConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$timeout","$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPStreamConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AbstractConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$user","$password","$vhost","$insist","$login_method","$login_response","$locale","$io"],"optionals":["$heartbeat"],"docParameters":{"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$io":{"type":"AbstractIO","description":""},"$heartbeat":{"type":"int","description":""}},"throws":{"\\Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPBasicCancelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$consumerTag"],"optionals":[],"docParameters":{"$consumerTag":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPChannelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPExceptionInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Exception\\AMQPIOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPIOWaitException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPInvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPLogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPOutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPOutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolChannelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPRuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPTimeoutException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Helper\\DebugHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$PROTOCOL_CONSTANTS_CLASS"],"optionals":[],"docParameters":{"$PROTOCOL_CONSTANTS_CLASS":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Helper\\MiscHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\MethodMap080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\MethodMap091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Protocol080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Protocol091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Wait080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Wait091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Message\\AMQPMessage":{"class":{"descriptions":{"short":"A Message for use with the Channnel.basic_* methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$body","$properties"],"docParameters":{"$body":{"type":"string","description":""},"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPAbstractCollection":{"class":{"descriptions":{"short":"Iterator implemented for transparent integration with AMQPWriter::write_[array|table]()","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":{"$data":{"type":"array|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPDecimal":{"class":{"descriptions":{"short":"AMQP protocol decimal value.","long":"Values are represented as (n,e) pairs. The actual value\nis n * 10^(-e).\n\nFrom 0.8 spec: Decimal values are\nnot intended to support floating point values, but rather\nbusiness values such as currency rates and amounts. The\n'decimals' octet is not signed."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$n","$e"],"optionals":[],"docParameters":{"$n":{"type":"int","description":""},"$e":{"type":"int","description":""}},"throws":{"\\PhpAmqpLib\\Exception\\AMQPOutOfBoundsException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPReader":{"class":{"descriptions":{"short":"This class can read from a string or from a stream","long":"TODO : split this class: AMQPStreamReader and a AMQPBufferReader"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$str"],"optionals":["$io","$timeout"],"docParameters":{"$str":{"type":"string","description":""},"$io":{"type":"AbstractIO","description":""},"$timeout":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPTable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AbstractClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\Constants080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\Constants091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\GenericContent":{"class":{"descriptions":{"short":"Abstract base class for AMQP content.  Subclasses should override\nthe propertyDefinitions attribute.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":["$propertyTypes"],"docParameters":{"$properties":{"type":"array","description":"Message property content"},"$propertyTypes":{"type":"array","description":"Message property definitions"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\IO\\AbstractIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\IO\\SocketIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$timeout"],"optionals":["$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\IO\\StreamIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$connection_timeout","$read_write_timeout"],"optionals":["$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast":{"class":{"descriptions":{"short":"Abstract superclass of all elements in the abstract syntax tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector":{"class":{"descriptions":{"short":"Abstract superclass of all selector elements in the abstract syntax tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector\\Combinator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Child":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Descendant":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Follower":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Next":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Group":{"class":{"descriptions":{"short":"List of Css Selector Sequences.","long":"This is the root element of a standard selector string like:\n\"element, .class\"\n\nBecause it is a list the some standard interfaces are implemented for\neasier usage."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequences"],"docParameters":{"$sequences":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the object and assign sequences if provided. They\ncan be added later of course.","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Sequence":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$simples","$combinator"],"docParameters":{"$simples":{"type":"array(Simple)","description":""},"$combinator":{"type":"Combinator","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector\\Simple\\Attribute":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$match","$literal"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\ClassName":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Id":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$id"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parameter"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Language":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$language"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Position":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$repeat","$add"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Type":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Universal":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefix"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Visitor":{"class":{"descriptions":{"short":"Interface declaration for php css ast visitors","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Css":{"class":{"descriptions":{"short":"An ast visitor that compiles a css selector string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Explain":{"class":{"descriptions":{"short":"An ast visitor that compiles a dom document explaining the selector","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Visitor\\Overload":{"class":{"descriptions":{"short":"An abstract visitor class that includes a mapping between functions and classes,\nsimulating overloading.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Xpath":{"class":{"descriptions":{"short":"An visitor that compiles the AST into a xpath expression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$defaultPrefix"],"docParameters":{"$options":{"type":"integer","description":""},"$defaultPrefix":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create visitor and store mode options","long":""},"deprecated":false}}}},"PhpCss\\Exception":{"class":{"descriptions":{"short":"Abstract superclass for PhpCss exceptions","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Exception\\InvalidCharacter":{"class":{"descriptions":{"short":"Exception thrown if a scanner status finds does not\nfind a valid character.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$buffer","$offset","$status"],"optionals":[],"docParameters":{"$buffer":{"type":"string","description":""},"$offset":{"type":"int","description":""},"$status":{"type":"\\PhpCss\\Scanner\\Status","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\NotConvertable":{"class":{"descriptions":{"short":"Exception thrown if a visitor finds something that it can not use.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$target"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\Parser":{"class":{"descriptions":{"short":"Exception thrown if a parse error occurs","long":"A parse error occurs if certain tokens are expected for further parsing, but\nnone of them are found on the token stream"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\Token":{"class":{"descriptions":{"short":"Exception thrown if a parse error occurs","long":"A parse error occurs if certain tokens are expected for further parsing, but\nnone of them are found on the token stream"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$message"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\TokenMismatch":{"class":{"descriptions":{"short":"Exception thrown if a token is encountered which was not expected.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$encounteredToken","$expectedTokens"],"optionals":[],"docParameters":{"$encounteredToken":{"type":"PhpCss\\Scanner\\Token","description":""},"$expectedTokens":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnexpectedEndOfFile":{"class":{"descriptions":{"short":"Exception thrown if an unexpected end of file is detected.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedTokens"],"optionals":[],"docParameters":{"$expectedTokens":{"type":"array(PhpCss\\Scanner\\Token)","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnknownPseudoClass":{"class":{"descriptions":{"short":"Exception thrown if an a pseudo class is found and the name is not known.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":[],"docParameters":{"$token":{"type":"PhpCss\\Scanner\\Token","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnknownPseudoElement":{"class":{"descriptions":{"short":"Exception thrown if an a pseudo element is found and the name is not known.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":[],"docParameters":{"$token":{"type":"PhpCss\\Scanner\\Token","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Parser":{"class":{"descriptions":{"short":"Abstract class implementing functionality to ease parsing in extending\nsubparsers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Attribute":{"class":{"descriptions":{"short":"The attribute parser parses a simple attribute selector.","long":"The attribute value can be an string if a string start is found it delegates to a string\nparser."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\PseudoClass":{"class":{"descriptions":{"short":"The attribute parser parses a simple attribute selector.","long":"The attribute value can be an string if a string start is found it delegates to a string\nparser."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Sequence":{"class":{"descriptions":{"short":"The Sequence parser parses a list of simple selector tokens into the AST.","long":"It delegates to separate parsers for pseudo classes and attributes.\n\nA css combinator delegates to a new instance of this class."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Standard":{"class":{"descriptions":{"short":"Default parsing status, expecting a group of selector sequences","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Text":{"class":{"descriptions":{"short":"The string parser collects all string character tokens until a string end token is found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Scanner":{"class":{"descriptions":{"short":"Scans a string and creates list of tokens.","long":"The actual result depends on the status, the status\nclass does the actual token matching and generation, the scanner handles, to loops and\ndelegations."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$status"],"optionals":[],"docParameters":{"$status":{"type":"Scanner\\Status","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor, set status object","long":""},"deprecated":false}}}},"PhpCss\\Scanner\\Patterns":{"class":{"descriptions":{"short":"An abstract class providing token regex pattern for repeated usage.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status":{"class":{"descriptions":{"short":"Abstract superclass for all scanner status implementations","long":"It defines the API and provides basic logic to match patterns."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Selector":{"class":{"descriptions":{"short":"Scanner Status Selector recognizes token of a css selector sequence.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Selector\\Attribute":{"class":{"descriptions":{"short":"Scan attribute selectors","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Text\\Double":{"class":{"descriptions":{"short":"Double quote string status for the scanner","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Text\\Single":{"class":{"descriptions":{"short":"Single quote string status for the scanner","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Token":{"class":{"descriptions":{"short":"An element (token) generated by the scan","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$content","$position"],"docParameters":{"$type":{"type":"integer","description":""},"$content":{"type":"string","description":""},"$position":{"type":"integer","description":""}},"throws":[],"return":{"type":"Token","description":""},"descriptions":{"short":"Construct and initialize token","long":""},"deprecated":false}}}},"Prophecy\\Argument":{"class":{"descriptions":{"short":"Argument tokens shortcuts.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\ArgumentsWildcard":{"class":{"descriptions":{"short":"Arguments wildcarding.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arguments"],"optionals":[],"docParameters":{"$arguments":{"type":"array","description":"Array of argument tokens or values"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes wildcard.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\AnyValueToken":{"class":{"descriptions":{"short":"Any single value token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\AnyValuesToken":{"class":{"descriptions":{"short":"Any values token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\ApproximateValueToken":{"class":{"descriptions":{"short":"Approximate value token","long":"@author Daniel Leech <daniel@dantleech.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$precision"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayCountToken":{"class":{"descriptions":{"short":"Array elements count token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"integer","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayEntryToken":{"class":{"descriptions":{"short":"Array entry token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$value"],"optionals":[],"docParameters":{"$key":{"type":"mixed","description":"exact value or token"},"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayEveryEntryToken":{"class":{"descriptions":{"short":"Array every entry token.","long":"@author Adrien Brault <adrien.brault@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\CallbackToken":{"class":{"descriptions":{"short":"Callback-verified token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":""}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ExactValueToken":{"class":{"descriptions":{"short":"Exact value token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$util","$comparatorFactory"],"docParameters":{"$value":{"type":"mixed","description":""},"$util":{"type":"StringUtil","description":""},"$comparatorFactory":{"type":"ComparatorFactory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\IdenticalValueToken":{"class":{"descriptions":{"short":"Identical value token.","long":"@author Florian Voutzinos <florian@voutzinos.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$util"],"docParameters":{"$value":{"type":"mixed","description":""},"$util":{"type":"StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\LogicalAndToken":{"class":{"descriptions":{"short":"Logical AND token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arguments"],"optionals":[],"docParameters":{"$arguments":{"type":"array","description":"exact values or tokens"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\LogicalNotToken":{"class":{"descriptions":{"short":"Logical NOT token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ObjectStateToken":{"class":{"descriptions":{"short":"Object state-checker token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName","$value"],"optionals":["$util","$comparatorFactory"],"docParameters":{"$methodName":{"type":"string","description":""},"$value":{"type":"mixed","description":"Expected return value"},"$util":{"type":"null|StringUtil","description":""},"$comparatorFactory":{"type":"ComparatorFactory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\StringContainsToken":{"class":{"descriptions":{"short":"String contains token.","long":"@author Peter Mitchell <pete@peterjmit.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\TokenInterface":{"class":{"descriptions":{"short":"Argument token interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\TypeToken":{"class":{"descriptions":{"short":"Value type token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Call\\Call":{"class":{"descriptions":{"short":"Call object.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName","$arguments","$returnValue","$exception","$file","$line"],"optionals":[],"docParameters":{"$methodName":{"type":"string","description":""},"$arguments":{"type":"array","description":""},"$returnValue":{"type":"mixed","description":""},"$exception":{"type":"Exception","description":""},"$file":{"type":"null|string","description":""},"$line":{"type":"null|int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes call.","long":""},"deprecated":false}}}},"Prophecy\\Call\\CallCenter":{"class":{"descriptions":{"short":"Calls receiver & manager.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes call center.","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\ClosureComparator":{"class":{"descriptions":{"short":"Closure comparator.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\Factory":{"class":{"descriptions":{"short":"Prophecy comparator factory.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new factory.","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\ProphecyComparator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\CachedDoubler":{"class":{"descriptions":{"short":"Cached class doubler.\nPrevents mirroring\/creation of the same structure twice.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$mirror","$creator","$namer"],"docParameters":{"$mirror":{"type":"ClassMirror","description":""},"$creator":{"type":"ClassCreator","description":""},"$namer":{"type":"NameGenerator","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes doubler.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\ClassPatch\\ClassPatchInterface":{"class":{"descriptions":{"short":"Class patch interface.\nClass patches extend doubles functionality or help\nProphecy to avoid some internal PHP bugs.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\DisableConstructorPatch":{"class":{"descriptions":{"short":"Disable constructor.\nMakes all constructor arguments optional.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\HhvmExceptionPatch":{"class":{"descriptions":{"short":"Exception patch for HHVM to remove the stubs from special methods","long":"@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\KeywordPatch":{"class":{"descriptions":{"short":"Remove method functionality from the double which will clash with php keywords.","long":"@author Milan Magudia <milan@magudia.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\MagicCallPatch":{"class":{"descriptions":{"short":"Discover Magical API using \"@method\" PHPDoc format.","long":"@author Thomas Tourlourat <thomas@tourlourat.com>\n@author K\u00c3\u00a9vin Dunglas <dunglas@gmail.com>\n@author Th\u00c3\u00a9o FIDRY <theo.fidry@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$tagRetriever"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\ClassPatch\\ProphecySubjectPatch":{"class":{"descriptions":{"short":"Add Prophecy functionality to the double.\nThis is a core class patch for Prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\ReflectionClassNewInstancePatch":{"class":{"descriptions":{"short":"ReflectionClass::newInstance patch.\nMakes first argument of newInstance optional, since it works but signature is misleading","long":"@author Florian Klein <florian.klein@free.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\SplFileInfoPatch":{"class":{"descriptions":{"short":"SplFileInfo patch.\nMakes SplFileInfo and derivative classes usable with Prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\TraversablePatch":{"class":{"descriptions":{"short":"Traversable interface patch.\nForces classes that implement interfaces, that extend Traversable to also implement Iterator.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\DoubleInterface":{"class":{"descriptions":{"short":"Core double interface.\nAll doubled classes will implement this one.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Doubler":{"class":{"descriptions":{"short":"Cached class doubler.\nPrevents mirroring\/creation of the same structure twice.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$mirror","$creator","$namer"],"docParameters":{"$mirror":{"type":"ClassMirror","description":""},"$creator":{"type":"ClassCreator","description":""},"$namer":{"type":"NameGenerator","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes doubler.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ClassCodeGenerator":{"class":{"descriptions":{"short":"Class code creator.\nGenerates PHP code for specific class node tree.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\ClassCreator":{"class":{"descriptions":{"short":"Class creator.\nCreates specific class in current environment.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$generator"],"docParameters":{"$generator":{"type":"ClassCodeGenerator","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes creator.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ClassMirror":{"class":{"descriptions":{"short":"Class mirror.\nCore doubler class. Mirrors specific class and\/or interfaces into class node tree.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\Node\\ArgumentNode":{"class":{"descriptions":{"short":"Argument node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\Node\\ClassNode":{"class":{"descriptions":{"short":"Class node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\Node\\MethodNode":{"class":{"descriptions":{"short":"Method node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$code"],"docParameters":{"$name":{"type":"string","description":""},"$code":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ReflectionInterface":{"class":{"descriptions":{"short":"Reflection interface.\nAll reflected classes implement this interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\LazyDouble":{"class":{"descriptions":{"short":"Lazy double.\nGives simple interface to describe double before creating it.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doubler"],"optionals":[],"docParameters":{"$doubler":{"type":"Doubler","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes lazy double.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\NameGenerator":{"class":{"descriptions":{"short":"Name generator.\nGenerates classname for double.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Call\\UnexpectedCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$objectProphecy","$methodName","$arguments"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassCreatorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$node"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassMirrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$class"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname"],"optionals":[],"docParameters":{"$message":{"type":"string","description":""},"$classname":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\DoubleException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\DoublerException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Doubler\\InterfaceNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname"],"optionals":[],"docParameters":{"$message":{"type":"string","description":""},"$classname":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\MethodNotExtendableException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$className","$methodName"],"optionals":[],"docParameters":{"$message":{"type":"string","description":""},"$className":{"type":"string","description":""},"$methodName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\MethodNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname","$methodName"],"optionals":["$arguments"],"docParameters":{"$message":{"type":"string","description":""},"$classname":{"type":"string","description":""},"$methodName":{"type":"string","description":""},"$arguments":{"type":"null|Argument\\ArgumentsWildcard|array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ReturnByReferenceException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname","$methodName"],"optionals":[],"docParameters":{"$message":{"type":"string","description":""},"$classname":{"type":"string","description":""},"$methodName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Exception":{"class":{"descriptions":{"short":"Core Prophecy exception interface.\nAll Prophecy exceptions implement it.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\AggregateException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\FailedPredictionException":{"class":{"descriptions":{"short":"Basic failed prediction exception.\nUse it for custom prediction failures.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\NoCallsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\PredictionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Prediction\\UnexpectedCallsCountException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy","$count","$calls"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\UnexpectedCallsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy","$calls"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\MethodProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\ObjectProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$objectProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\ProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\PhpDocumentor\\ClassAndInterfaceTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00c3\u00a9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$classRetriever"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\PhpDocumentor\\ClassTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00c3\u00a9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\PhpDocumentor\\LegacyClassTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00c3\u00a9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\PhpDocumentor\\MethodTagRetrieverInterface":{"class":{"descriptions":{"short":"@author Th\u00c3\u00a9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prediction\\CallPrediction":{"class":{"descriptions":{"short":"Call prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\CallTimesPrediction":{"class":{"descriptions":{"short":"Prediction interface.\nPredictions are logical test blocks, tied to `should...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$times"],"optionals":["$util"],"docParameters":{"$times":{"type":"int","description":""},"$util":{"type":"StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\CallbackPrediction":{"class":{"descriptions":{"short":"Callback prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":"Custom callback"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes callback prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\NoCallsPrediction":{"class":{"descriptions":{"short":"No calls prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"null|StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\PredictionInterface":{"class":{"descriptions":{"short":"Prediction interface.\nPredictions are logical test blocks, tied to `should...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Promise\\CallbackPromise":{"class":{"descriptions":{"short":"Callback promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":"Custom callback"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes callback promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\PromiseInterface":{"class":{"descriptions":{"short":"Promise interface.\nPromises are logical blocks, tied to `will...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Promise\\ReturnArgumentPromise":{"class":{"descriptions":{"short":"Return argument promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$index"],"docParameters":{"$index":{"type":"int","description":"The zero-indexed number of the argument to return"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes callback promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\ReturnPromise":{"class":{"descriptions":{"short":"Return promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$returnValues"],"optionals":[],"docParameters":{"$returnValues":{"type":"array","description":"Array of values"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\ThrowPromise":{"class":{"descriptions":{"short":"Throw promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":{"$exception":{"type":"string|\\Exception|\\Throwable","description":"Exception class name or instance"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes promise.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\MethodProphecy":{"class":{"descriptions":{"short":"Method prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$objectProphecy","$methodName"],"optionals":["$arguments"],"docParameters":{"$objectProphecy":{"type":"ObjectProphecy","description":""},"$methodName":{"type":"string","description":""},"$arguments":{"type":"null|Argument\\ArgumentsWildcard|array","description":""}},"throws":{"\\Prophecy\\Exception\\Doubler\\MethodNotFoundException":"If method not found"},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes method prophecy.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\ObjectProphecy":{"class":{"descriptions":{"short":"Object prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$lazyDouble"],"optionals":["$callCenter","$revealer","$comparatorFactory"],"docParameters":{"$lazyDouble":{"type":"LazyDouble","description":""},"$callCenter":{"type":"CallCenter","description":""},"$revealer":{"type":"RevealerInterface","description":""},"$comparatorFactory":{"type":"ComparatorFactory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes object prophecy.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\ProphecyInterface":{"class":{"descriptions":{"short":"Core Prophecy interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\ProphecySubjectInterface":{"class":{"descriptions":{"short":"Controllable doubles interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\Revealer":{"class":{"descriptions":{"short":"Basic prophecies revealer.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\RevealerInterface":{"class":{"descriptions":{"short":"Prophecies revealer interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophet":{"class":{"descriptions":{"short":"Prophet creates prophecies.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$doubler","$revealer","$util"],"docParameters":{"$doubler":{"type":"null|Doubler","description":""},"$revealer":{"type":"null|RevealerInterface","description":""},"$util":{"type":"null|StringUtil","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes Prophet.","long":""},"deprecated":false}}}},"Prophecy\\Util\\ExportUtil":{"class":{"descriptions":{"short":"This class is a modification from sebastianbergmann\/exporter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Util\\StringUtil":{"class":{"descriptions":{"short":"String utility.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\MessageInterface":{"class":{"descriptions":{"short":"HTTP messages consist of requests from a client to a server and responses\nfrom a server to a client. This interface defines the methods common to\neach.","long":"Messages are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\RequestInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, client-side request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nDuring construction, implementations MUST attempt to set the Host header from\na provided URI if no Host header is provided.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ResponseInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, server-side response.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- Status code and reason phrase\n- Headers\n- Message body\n\nResponses are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ServerRequestInterface":{"class":{"descriptions":{"short":"Representation of an incoming, server-side HTTP request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nAdditionally, it encapsulates all data as it has arrived to the\napplication from the CGI and\/or PHP environment, including:\n\n- The values represented in $_SERVER.\n- Any cookies provided (generally via $_COOKIE)\n- Query string arguments (generally via $_GET, or as parsed via parse_str())\n- Upload files, if any (as represented by $_FILES)\n- Deserialized body parameters (generally from $_POST)\n\n$_SERVER values MUST be treated as immutable, as they represent application\nstate at the time of request; as such, no methods are provided to allow\nmodification of those values. The other values provide such methods, as they\ncan be restored from $_SERVER or the request body, and may need treatment\nduring the application (e.g., body parameters may be deserialized based on\ncontent type).\n\nAdditionally, this interface recognizes the utility of introspecting a\nrequest to derive and match additional parameters (e.g., via URI path\nmatching, decrypting cookie values, deserializing non-form-encoded body\ncontent, matching authorization headers to users, etc). These parameters\nare stored in an \"attributes\" property.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\StreamInterface":{"class":{"descriptions":{"short":"Describes a data stream.","long":"Typically, an instance will wrap a PHP stream; this interface provides\na wrapper around the most common operations, including serialization of\nthe entire stream to a string."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UploadedFileInterface":{"class":{"descriptions":{"short":"Value object representing a file uploaded through an HTTP request.","long":"Instances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UriInterface":{"class":{"descriptions":{"short":"Value object representing a URI.","long":"This interface is meant to represent URIs according to RFC 3986 and to\nprovide methods for most common operations. Additional functionality for\nworking with URIs can be provided on top of the interface or externally.\nIts primary use is for HTTP requests, but may also be used in other\ncontexts.\n\nInstances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state.\n\nTypically the Host header will be also be present in the request message.\nFor server-side requests, the scheme will typically be discoverable in the\nserver parameters."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\AbstractLogger":{"class":{"descriptions":{"short":"This is a simple Logger implementation that other Loggers can inherit from.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Psr\\Log\\LogLevel":{"class":{"descriptions":{"short":"Describes log levels.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareInterface":{"class":{"descriptions":{"short":"Describes a logger-aware instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareTrait":{"class":{"descriptions":{"short":"Basic Implementation of LoggerAwareInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerInterface":{"class":{"descriptions":{"short":"Describes a logger instance.","long":"The message MUST be a string or object implementing __toString().\n\nThe message MAY contain placeholders in the form: {foo} where foo\nwill be replaced by the context data in key \"foo\".\n\nThe context array can contain arbitrary data. The only assumption that\ncan be made by implementors is that if an Exception instance is given\nto produce a stack trace, it MUST be in a key named \"exception\".\n\nSee https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-3-logger-interface.md\nfor the full interface specification."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerTrait":{"class":{"descriptions":{"short":"This is a simple Logger trait that classes unable to extend AbstractLogger\n(because they extend another class, etc) can include.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\NullLogger":{"class":{"descriptions":{"short":"This Logger can be used to avoid conditional log calls.","long":"Logging should always be optional, and if no logger is provided to your\nlibrary creating a NullLogger instance to have something to throw logs at\nis a good way to avoid littering your code with `if ($this->logger) { }`\nblocks."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\Test\\DummyTest":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\Test\\LoggerInterfaceTest":{"class":{"descriptions":{"short":"Provides a base test class for ensuring compliance with the LoggerInterface.","long":"Implementors can extend the class and implement abstract methods to run this\nas part of their test suite."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":""},"$data":{"type":"array","description":""},"$dataName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\CodeCoverage":{"class":{"descriptions":{"short":"Provides collection functionality for PHP code coverage information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$driver","$filter"],"docParameters":{"$driver":{"type":"Driver","description":""},"$filter":{"type":"Filter","description":""}},"throws":{"RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\CoveredCodeNotExecutedException":{"class":{"descriptions":{"short":"Exception that is raised when covered code is not executed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\Driver":{"class":{"descriptions":{"short":"Interface for code coverage drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Driver\\HHVM":{"class":{"descriptions":{"short":"Driver for HHVM's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\PHPDBG":{"class":{"descriptions":{"short":"Driver for PHPDBG's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\Xdebug":{"class":{"descriptions":{"short":"Driver for Xdebug's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Exception":{"class":{"descriptions":{"short":"Exception interface for php-code-coverage component.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Filter":{"class":{"descriptions":{"short":"Filter for whitelisting of code coverage information.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\MissingCoversAnnotationException":{"class":{"descriptions":{"short":"Exception that is raised when @covers must be used but is not.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\AbstractNode":{"class":{"descriptions":{"short":"Base class for nodes in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parent"],"docParameters":{"$name":{"type":"string","description":""},"$parent":{"type":"AbstractNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\Builder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Node\\Directory":{"class":{"descriptions":{"short":"Represents a directory in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parent"],"docParameters":{"$name":{"type":"string","description":""},"$parent":{"type":"AbstractNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\File":{"class":{"descriptions":{"short":"Represents a file in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$parent","$coverageData","$testData","$cacheTokens"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$parent":{"type":"AbstractNode","description":""},"$coverageData":{"type":"array","description":""},"$testData":{"type":"array","description":""},"$cacheTokens":{"type":"bool","description":""}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\Iterator":{"class":{"descriptions":{"short":"Recursive iterator for node object graphs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"Directory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Clover":{"class":{"descriptions":{"short":"Generates a Clover XML logfile from a code coverage object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Crap4j":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$threshold"],"docParameters":{"$threshold":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Dashboard":{"class":{"descriptions":{"short":"Renders the dashboard for a directory node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":""},"$generator":{"type":"string","description":""},"$date":{"type":"string","description":""},"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Directory":{"class":{"descriptions":{"short":"Renders a directory node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":""},"$generator":{"type":"string","description":""},"$date":{"type":"string","description":""},"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Facade":{"class":{"descriptions":{"short":"Generates an HTML report from a code coverage object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$lowUpperBound","$highLowerBound","$generator"],"docParameters":{"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""},"$generator":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\File":{"class":{"descriptions":{"short":"Renders a file node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":""},"$generator":{"type":"string","description":""},"$date":{"type":"string","description":""},"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Renderer":{"class":{"descriptions":{"short":"Base class for node renderers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":""},"$generator":{"type":"string","description":""},"$date":{"type":"string","description":""},"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\PHP":{"class":{"descriptions":{"short":"Uses var_export() to write a SebastianBergmann\\CodeCoverage\\CodeCoverage object to a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Text":{"class":{"descriptions":{"short":"Generates human readable output from a code coverage object.","long":"The output gets put into a text file our written to the CLI."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$lowUpperBound","$highLowerBound","$showUncoveredFiles","$showOnlySummary"],"docParameters":{"$lowUpperBound":{"type":"int","description":""},"$highLowerBound":{"type":"int","description":""},"$showUncoveredFiles":{"type":"bool","description":""},"$showOnlySummary":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Coverage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$line"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Facade":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\File":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Method":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Node":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Project":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Report":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Tests":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Totals":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$container"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Unit":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\UnintentionallyCoveredCodeException":{"class":{"descriptions":{"short":"Exception that is raised when code is unintentionally covered.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$unintentionallyCoveredUnits"],"optionals":[],"docParameters":{"$unintentionallyCoveredUnits":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Util":{"class":{"descriptions":{"short":"Utility methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeUnitReverseLookup\\Wizard":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Comparator\\ArrayComparator":{"class":{"descriptions":{"short":"Compares arrays for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\Comparator":{"class":{"descriptions":{"short":"Abstract base class for comparators which compare values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ComparisonFailure":{"class":{"descriptions":{"short":"Thrown when an assertion for string equality failed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected","$actual","$expectedAsString","$actualAsString"],"optionals":["$identical","$message"],"docParameters":{"$expected":{"type":"mixed","description":"Expected value retrieved."},"$actual":{"type":"mixed","description":"Actual value retrieved."},"$expectedAsString":{"type":"string","description":""},"$actualAsString":{"type":"string","description":""},"$identical":{"type":"bool","description":""},"$message":{"type":"string","description":"A string which is prefixed on all returned lines in the difference output."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initialises with the expected value and the actual value.","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DOMNodeComparator":{"class":{"descriptions":{"short":"Compares DOMNode instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DateTimeComparator":{"class":{"descriptions":{"short":"Compares DateTimeInterface instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DoubleComparator":{"class":{"descriptions":{"short":"Compares doubles for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ExceptionComparator":{"class":{"descriptions":{"short":"Compares Exception instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\Factory":{"class":{"descriptions":{"short":"Factory for comparators which compare values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new factory.","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\MockObjectComparator":{"class":{"descriptions":{"short":"Compares PHPUnit_Framework_MockObject_MockObject instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\NumericComparator":{"class":{"descriptions":{"short":"Compares numerical values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ObjectComparator":{"class":{"descriptions":{"short":"Compares objects for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ResourceComparator":{"class":{"descriptions":{"short":"Compares resources for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ScalarComparator":{"class":{"descriptions":{"short":"Compares scalar or NULL values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\SplObjectStorageComparator":{"class":{"descriptions":{"short":"Compares \\SplObjectStorage instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\TypeComparator":{"class":{"descriptions":{"short":"Compares values for type equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Chunk":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$start","$startRange","$end","$endRange","$lines"],"docParameters":{"$start":{"type":"int","description":""},"$startRange":{"type":"int","description":""},"$end":{"type":"int","description":""},"$endRange":{"type":"int","description":""},"$lines":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Diff":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$from","$to"],"optionals":["$chunks"],"docParameters":{"$from":{"type":"string","description":""},"$to":{"type":"string","description":""},"$chunks":{"type":"Chunk[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Differ":{"class":{"descriptions":{"short":"Diff implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$header","$showNonDiffLines"],"docParameters":{"$header":{"type":"string","description":""},"$showNonDiffLines":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence":{"class":{"descriptions":{"short":"Interface for implementations of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\LCS\\MemoryEfficientImplementation":{"class":{"descriptions":{"short":"Memory-efficient implementation of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\LCS\\TimeEfficientImplementation":{"class":{"descriptions":{"short":"Time-efficient implementation of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\Line":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$content"],"docParameters":{"$type":{"type":"int","description":""},"$content":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Parser":{"class":{"descriptions":{"short":"Unified diff parser.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Environment\\Console":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Environment\\Runtime":{"class":{"descriptions":{"short":"Utility class for HHVM\/PHP environment handling.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Exporter\\Exporter":{"class":{"descriptions":{"short":"A nifty utility for visualizing PHP variables.","long":"<code>\n<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\nprint $exporter->export(new Exception);\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Blacklist":{"class":{"descriptions":{"short":"A blacklist for global state elements that should not be snapshotted.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\CodeExporter":{"class":{"descriptions":{"short":"Exports parts of a Snapshot as PHP code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Restorer":{"class":{"descriptions":{"short":"Restorer of snapshots of global state.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\GlobalState\\Snapshot":{"class":{"descriptions":{"short":"A snapshot of global state.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$blacklist","$includeGlobalVariables","$includeStaticAttributes","$includeConstants","$includeFunctions","$includeClasses","$includeInterfaces","$includeTraits","$includeIniSettings","$includeIncludedFiles"],"docParameters":{"$blacklist":{"type":"Blacklist","description":""},"$includeGlobalVariables":{"type":"bool","description":""},"$includeStaticAttributes":{"type":"bool","description":""},"$includeConstants":{"type":"bool","description":""},"$includeFunctions":{"type":"bool","description":""},"$includeClasses":{"type":"bool","description":""},"$includeInterfaces":{"type":"bool","description":""},"$includeTraits":{"type":"bool","description":""},"$includeIniSettings":{"type":"bool","description":""},"$includeIncludedFiles":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a snapshot of the current global state.","long":""},"deprecated":false}}}},"SebastianBergmann\\ObjectEnumerator\\Enumerator":{"class":{"descriptions":{"short":"Traverses array structures and object graphs\nto enumerate all referenced objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\ObjectEnumerator\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\ObjectEnumerator\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\RecursionContext\\Context":{"class":{"descriptions":{"short":"A context containing previously processed arrays and objects\nwhen recursively processing a value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initialises the context","long":""},"deprecated":false}}}},"SebastianBergmann\\RecursionContext\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\RecursionContext\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\ResourceOperations\\ResourceOperations":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Version":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$release","$path"],"optionals":[],"docParameters":{"$release":{"type":"string","description":""},"$path":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Analyser":{"class":{"descriptions":{"short":"Extract swagger-php annotations from a [PHPDoc](http:\/\/en.wikipedia.org\/wiki\/PHPDoc) using Doctrine's DocParser.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$docParser"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Analysis":{"class":{"descriptions":{"short":"Result of the analyser which pretends to be an array of annotations, but also contains detected classes and helper functions for the processors.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$annotations","$context"],"docParameters":{"$annotations":{"type":"array","description":""},"$context":{"type":"null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\AbstractAnnotation":{"class":{"descriptions":{"short":"The swagger annotation base class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Contact":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Definition":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Delete":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\ExternalDocumentation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Get":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Head":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Header":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Info":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Items":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\License":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Operation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Options":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Parameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Patch":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Path":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Post":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Property":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Put":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Response":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Schema":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\SecurityScheme":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Swagger":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Tag":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Xml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Context":{"class":{"descriptions":{"short":"Context","long":"The context in which the annotation is parsed.\nIt includes useful metadata which the Processors can use to augment the annotations.\n\nContext hierarchy:\n- parseContext\n|- docBlockContext\n|- classContext\n|- docBlockContext\n|- propertyContext\n|- methodContext"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$properties","$parent"],"docParameters":{"$properties":{"type":"array","description":"new properties for this context."},"$parent":{"type":"Context","description":"The parent context"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Logger":{"class":{"descriptions":{"short":"Logger reports the parser and validation messages.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Processors\\AugmentDefinitions":{"class":{"descriptions":{"short":"Use the definition context to extract useful information and inject that into the annotation.\nMerges properties into","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentOperations":{"class":{"descriptions":{"short":"Use the operation context to extract useful information and inject that into the annotation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentParameters":{"class":{"descriptions":{"short":"Use the parameter->name as keyfield (parameter->parameter) when used in swagger object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentProperties":{"class":{"descriptions":{"short":"Use the property context to extract useful information and inject that into the annotation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\BuildPaths":{"class":{"descriptions":{"short":"Build the swagger->paths using the detected @SWG\\Path and @SWG\\Operations (like @SWG\\Get, @SWG\\Post, etc)","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\CleanUnmerged":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\HandleReferences":{"class":{"descriptions":{"short":"Copy the annotated properties from parent classes;","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\InheritProperties":{"class":{"descriptions":{"short":"Copy the annotated properties from parent classes;","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\MergeIntoSwagger":{"class":{"descriptions":{"short":"Merge all @SWG\\Swagger annotations into one.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Serializer":{"class":{"descriptions":{"short":"Class AnnotationDeserializer is used to deserialize a json string\nto a specific Swagger PHP Annotation class and vice versa.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\StaticAnalyser":{"class":{"descriptions":{"short":"Swagger\\StaticAnalyser extracts swagger-php annotations from php code using static analysis.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$filename"],"docParameters":{"$filename":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Util":{"class":{"descriptions":{"short":"Convenient utility functions that don't neatly fit anywhere else","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Comparator\\Comparator":{"class":{"descriptions":{"short":"Comparator.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Comparator\\DateComparator":{"class":{"descriptions":{"short":"DateCompare compiles date comparisons.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"string","description":"A comparison string"}},"throws":{"\\InvalidArgumentException":"If the test is not understood"},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Comparator\\NumberComparator":{"class":{"descriptions":{"short":"NumberComparator compiles a simple comparison to an anonymous\nsubroutine, which you can call with a value to be tested again.","long":"Now this would be very pointless, if NumberCompare didn't understand\nmagnitudes.\n\nThe target value may use magnitudes of kilobytes (k, ki),\nmegabytes (m, mi), or gigabytes (g, gi).  Those suffixed\nwith an i use the appropriate 2**n version in accordance with the\nIEC standard: http:\/\/physics.nist.gov\/cuu\/Units\/binary.html\n\nBased on the Perl Number::Compare module.\n\n@author    Fabien Potencier <fabien@symfony.com> PHP port\n@author    Richard Clamp <richardc@unixbeard.net> Perl version\n@copyright 2004-2005 Fabien Potencier <fabien@symfony.com>\n@copyright 2002 Richard Clamp <richardc@unixbeard.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"string|int","description":"A comparison string or an integer"}},"throws":{"\\InvalidArgumentException":"If the test is not understood"},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Exception\\AccessDeniedException":{"class":{"descriptions":{"short":"@author Jean-Fran\u00c3\u00a7ois Simon <jeanfrancois.simon@sensiolabs.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"@author Jean-Fran\u00c3\u00a7ois Simon <contact@jfsimon.fr>","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Finder":{"class":{"descriptions":{"short":"Finder allows to build rules to find files and directories.","long":"It is a thin wrapper around several specialized iterator classes.\n\nAll rules may be invoked several times.\n\nAll methods return the current Finder object to allow easy chaining:\n\n$finder = Finder::create()->files()->name('*.php')->in(__DIR__);\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Glob":{"class":{"descriptions":{"short":"Glob matches globbing patterns against text.","long":"if match_glob(\"foo.*\", \"foo.bar\") echo \"matched\\n\";\n\n\/\/ prints foo.bar and foo.baz\n$regex = glob_to_regex(\"foo.*\");\nfor (array('foo.bar', 'foo.baz', 'foo', 'bar') as $t)\n{\nif (\/$regex\/) echo \"matched: $car\\n\";\n}\n\nGlob implements glob(3) style matching that can be used to match\nagainst text, rather than fetching names from a filesystem.\n\nBased on the Perl Text::Glob module.\n\n@author Fabien Potencier <fabien@symfony.com> PHP port\n@author     Richard Clamp <richardc@unixbeard.net> Perl version\n@copyright  2004-2005 Fabien Potencier <fabien@symfony.com>\n@copyright  2002 Richard Clamp <richardc@unixbeard.net>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Iterator\\CustomFilterIterator":{"class":{"descriptions":{"short":"CustomFilterIterator filters files by applying anonymous functions.","long":"The anonymous function receives a \\SplFileInfo and must return false\nto remove files.\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$filters"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$filters":{"type":"callable[]","description":"An array of PHP callbacks"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\DateRangeFilterIterator":{"class":{"descriptions":{"short":"DateRangeFilterIterator filters out files that are not in the given date range (last modified dates).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$comparators"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$comparators":{"type":"DateComparator[]","description":"An array of DateComparator instances"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\DepthRangeFilterIterator":{"class":{"descriptions":{"short":"DepthRangeFilterIterator limits the directory depth.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$minDepth","$maxDepth"],"docParameters":{"$iterator":{"type":"\\RecursiveIteratorIterator","description":"The Iterator to filter"},"$minDepth":{"type":"int","description":"The min depth"},"$maxDepth":{"type":"int","description":"The max depth"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\ExcludeDirectoryFilterIterator":{"class":{"descriptions":{"short":"ExcludeDirectoryFilterIterator filters out directories.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$directories"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$directories":{"type":"array","description":"An array of directories to exclude"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FileTypeFilterIterator":{"class":{"descriptions":{"short":"FileTypeFilterIterator only keeps files, directories, or both.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$mode"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$mode":{"type":"int","description":"The mode (self::ONLY_FILES or self::ONLY_DIRECTORIES)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilecontentFilterIterator":{"class":{"descriptions":{"short":"FilecontentFilterIterator filters files by their contents using patterns (regexps or strings).","long":"@author Fabien Potencier  <fabien@symfony.com>\n@author W\u00c5\u0082odzimierz Gajda <gajdaw@gajdaw.pl>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilenameFilterIterator":{"class":{"descriptions":{"short":"FilenameFilterIterator filters files by patterns (a regexp, a glob, or a string).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilterIterator":{"class":{"descriptions":{"short":"This iterator just overrides the rewind method in order to correct a PHP bug,\nwhich existed before version 5.5.23\/5.6.7.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\MultiplePcreFilterIterator":{"class":{"descriptions":{"short":"MultiplePcreFilterIterator filters files using patterns (regexps, globs or strings).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\PathFilterIterator":{"class":{"descriptions":{"short":"PathFilterIterator filters files by path patterns (e.g. some\/special\/dir).","long":"@author Fabien Potencier  <fabien@symfony.com>\n@author W\u00c5\u0082odzimierz Gajda <gajdaw@gajdaw.pl>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"Extends the \\RecursiveDirectoryIterator to support relative paths.","long":"@author Victor Berchet <victor@suumit.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$flags"],"optionals":["$ignoreUnreadableDirs"],"docParameters":{"$path":{"type":"string","description":""},"$flags":{"type":"int","description":""},"$ignoreUnreadableDirs":{"type":"bool","description":""}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\SizeRangeFilterIterator":{"class":{"descriptions":{"short":"SizeRangeFilterIterator filters out files that are not in the given size range.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$comparators"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$comparators":{"type":"NumberComparator[]","description":"An array of NumberComparator instances"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\SortableIterator":{"class":{"descriptions":{"short":"SortableIterator applies a sort on a given Iterator.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$sort"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Traversable","description":"The Iterator to filter"},"$sort":{"type":"int|callable","description":"The sort type (SORT_BY_NAME, SORT_BY_TYPE, or a PHP callback)"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\SplFileInfo":{"class":{"descriptions":{"short":"Extends \\SplFileInfo to support relative paths.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file","$relativePath","$relativePathname"],"optionals":[],"docParameters":{"$file":{"type":"string","description":"The file name"},"$relativePath":{"type":"string","description":"The relative path"},"$relativePathname":{"type":"string","description":"The relative path name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Dumper":{"class":{"descriptions":{"short":"Dumper dumps PHP variables to YAML strings.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$indentation"],"docParameters":{"$indentation":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Escaper":{"class":{"descriptions":{"short":"Escaper encapsulates escaping rules for single and double-quoted\nYAML strings.","long":"@author Matthew Lewinski <matthew@lewinski.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Exception\\DumpException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during dumping.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"Exception interface for all exceptions thrown by the component.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Exception\\ParseException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during parsing.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$parsedLine","$snippet","$parsedFile","$previous"],"docParameters":{"$message":{"type":"string","description":"The error message"},"$parsedLine":{"type":"int","description":"The line where the error occurred"},"$snippet":{"type":"string|null","description":"The snippet of code near the problem"},"$parsedFile":{"type":"string|null","description":"The file name where the error occurred"},"$previous":{"type":"\\Exception|null","description":"The previous exception"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during parsing.","long":"@author Romain Neutron <imprec@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Inline":{"class":{"descriptions":{"short":"Inline implements a YAML parser\/dumper for the YAML inline syntax.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Parser":{"class":{"descriptions":{"short":"Parser parses YAML strings to convert them to PHP arrays.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Tag\\TaggedValue":{"class":{"descriptions":{"short":"@author Nicolas Grekas <p@tchwork.com>\n@author Guilhem N. <egetick@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tag","$value"],"optionals":[],"docParameters":{"$tag":{"type":"string","description":""},"$value":{"type":"mixed","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Unescaper":{"class":{"descriptions":{"short":"Unescaper encapsulates unescaping rules for single and double-quoted\nYAML strings.","long":"@author Matthew Lewinski <matthew@lewinski.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Yaml":{"class":{"descriptions":{"short":"Yaml offers convenience methods to load and dump YAML.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Text_Template":{"class":{"descriptions":{"short":"A simple template engine.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$file","$openDelimiter","$closeDelimiter"],"docParameters":{"$file":{"type":"string","description":""}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"WP_Mock":{"class":{"descriptions":{"short":"WP_Mock","long":"LICENSE\n\nCopyright 2013 10up and other contributors\nhttp:\/\/10up.com\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"WP_Mock\\Action":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\Action_Responder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"WP_Mock\\EventManager":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\Filter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\Filter_Responder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"WP_Mock\\Functions":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor for the Functions object","long":""},"deprecated":false}}}},"WP_Mock\\Handler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"WP_Mock\\Hook":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\HookedCallback":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\HookedCallbackResponder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"WP_Mock\\Loader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ns","$includePath"],"docParameters":{"$ns":{"type":"string","description":"The namespace to use."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new <tt>Loader<\/tt> that loads classes of the\nspecified namespace.","long":""},"deprecated":false}}}},"WP_Mock\\Matcher\\FuzzyObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expected"],"docParameters":{"$expected":{"type":"object|array","description":""}},"throws":{"\\Mockery\\Exception":"If a non-object non-array expectation is provided"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\ReturnSequence":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor to set up the return sequence object","long":"You can pass arbitrary arguments to the constructor to set to the internal\n$return_values array"},"deprecated":false}}}},"WP_Mock\\Tools\\Constraints\\ExpectationsMet":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\Tools\\Constraints\\IsEqualHtml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$delta","$maxDepth","$canonicalize","$ignoreCase"],"docParameters":{"$value":{"type":"mixed","description":""},"$delta":{"type":"float","description":""},"$maxDepth":{"type":"int","description":""},"$canonicalize":{"type":"bool","description":""},"$ignoreCase":{"type":"bool","description":""}},"throws":{"PHPUnit_Framework_Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"WP_Mock\\Tools\\TestCase":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":""},"$data":{"type":"array","description":""},"$dataName":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"Webmozart\\Assert\\Assert":{"class":{"descriptions":{"short":"Efficient assertions to validate the input\/output of your methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$summary","$description","$tags","$context","$location","$isTemplateStart","$isTemplateEnd"],"docParameters":{"$summary":{"type":"string","description":""},"$description":{"type":"DocBlock\\Description","description":""},"$tags":{"type":"DocBlock\\Tag[]","description":""},"$context":{"type":"Types\\Context","description":"The context in which the DocBlock occurs."},"$location":{"type":"Location","description":"The location within the file that this DocBlock occurs in."},"$isTemplateStart":{"type":"bool","description":""},"$isTemplateEnd":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlockFactory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$descriptionFactory","$tagFactory"],"optionals":[],"docParameters":{"$descriptionFactory":{"type":"DescriptionFactory","description":""},"$tagFactory":{"type":"TagFactory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this factory with the required subcontractors.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlockFactoryInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Description":{"class":{"descriptions":{"short":"Object representing to description for a DocBlock.","long":"A Description object can consist of plain text but can also include tags. A Description Formatter can then combine\na body template with sprintf-style placeholders together with formatted tags in order to reconstitute a complete\ndescription text using the format that you would prefer.\n\nBecause parsing a Description text can be a verbose process this is handled by the {@see DescriptionFactory}. It is\nthus recommended to use that to create a Description object, like this:\n\n$description = $descriptionFactory->create('This is a {@see Description}', $context);\n\nThe description factory will interpret the given body and create a body template and list of tags from them, and pass\nthat onto the constructor if this class.\n\n> The $context variable is a class of type {@see \\phpDocumentor\\Reflection\\Types\\Context} and contains the namespace\n> and the namespace aliases that apply to this DocBlock. These are used by the Factory to resolve and expand partial\n> type names and FQSENs.\n\nIf you do not want to use the DescriptionFactory you can pass a body template and tag listing like this:\n\n$description = new Description(\n'This is a %1$s',\n[ new See(new Fqsen('\\phpDocumentor\\Reflection\\DocBlock\\Description')) ]\n);\n\nIt is generally recommended to use the Factory as that will also apply escaping rules, while the Description object\nis mainly responsible for rendering."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$bodyTemplate"],"optionals":["$tags"],"docParameters":{"$bodyTemplate":{"type":"string","description":""},"$tags":{"type":"Tag[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes a Description with its body (template) and a listing of the tags used in the body template.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory":{"class":{"descriptions":{"short":"Creates a new Description object given a body of text.","long":"Descriptions in phpDocumentor are somewhat complex entities as they can contain one or more tags inside their\nbody that can be replaced with a readable output. The replacing is done by passing a Formatter object to the\nDescription object's `render` method.\n\nIn addition to the above does a Description support two types of escape sequences:\n\n1. `{@}` to escape the `@` character to prevent it from being interpreted as part of a tag, i.e. `{{@}link}`\n2. `{}` to escape the `}` character, this can be used if you want to use the `}` character in the description\nof an inline tag.\n\nIf a body consists of multiple lines then this factory will also remove any superfluous whitespace at the beginning\nof each line while maintaining any indentation that is used. This will prevent formatting parsers from tripping\nover unexpected spaces as can be observed with tag descriptions."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tagFactory"],"optionals":[],"docParameters":{"$tagFactory":{"type":"TagFactory","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this factory with the means to construct (inline) tags.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Serializer":{"class":{"descriptions":{"short":"Converts a DocBlock back from an object to a complete DocComment including Asterisks.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$indent","$indentString","$indentFirstLine","$lineLength"],"docParameters":{"$indent":{"type":"int","description":"The number of times the indent string is repeated."},"$indentString":{"type":"string","description":"The string to indent the comment with."},"$indentFirstLine":{"type":"bool","description":"Whether to indent the first line."},"$lineLength":{"type":"int|null","description":"The max length of a line or NULL to disable line wrapping."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a Serializer instance.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory":{"class":{"descriptions":{"short":"Creates a Tag object given the contents of a tag.","long":"This Factory is capable of determining the appropriate class for a tag and instantiate it using its `create`\nfactory method. The `create` factory method of a Tag can have a variable number of arguments; this way you can\npass the dependencies that you need to construct a tag object.\n\n> Important: each parameter in addition to the body variable for the `create` method must default to null, otherwise\n> it violates the constraint with the interface; it is recommended to use the {@see Assert::notNull()} method to\n> verify that a dependency is actually passed.\n\nThis Factory also features a Service Locator component that is used to pass the right dependencies to the\n`create` method of a tag; each dependency should be registered as a service or as a parameter.\n\nWhen you want to use a Tag of your own with custom handling you need to call the `registerTagHandler` method, pass\nthe name of the tag and a Fully Qualified Class Name pointing to a class that implements the Tag interface."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fqsenResolver"],"optionals":["$tagHandlers"],"docParameters":{"$fqsenResolver":{"type":"FqsenResolver","description":""},"$tagHandlers":{"type":"string[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initialize this tag factory with the means to resolve an FQSEN and optionally a list of tag handlers.","long":"If no tag handlers are provided than the default list in the {@see self::$tagHandlerMappings} property\nis used."},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tag":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\TagFactory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Author":{"class":{"descriptions":{"short":"Reflection class for an {@}author tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$authorName","$authorEmail"],"optionals":[],"docParameters":{"$authorName":{"type":"string","description":""},"$authorEmail":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this tag with the author name and e-mail.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\BaseTag":{"class":{"descriptions":{"short":"Parses a tag definition for a DocBlock.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Covers":{"class":{"descriptions":{"short":"Reflection class for a @covers tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Deprecated":{"class":{"descriptions":{"short":"Reflection class for a {@}deprecated tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Example":{"class":{"descriptions":{"short":"Reflection class for a {@}example tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\Strategy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter\\PassthroughFormatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic":{"class":{"descriptions":{"short":"Parses a tag definition for a DocBlock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$description"],"docParameters":{"$name":{"type":"string","description":"Name of the tag."},"$description":{"type":"Description","description":"The contents of the given tag."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Parses a tag and populates the member variables.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Link":{"class":{"descriptions":{"short":"Reflection class for a @link tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$link"],"optionals":["$description"],"docParameters":{"$link":{"type":"string","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes a link to a URL.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Method":{"class":{"descriptions":{"short":"Reflection class for an {@}method in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName"],"optionals":["$arguments","$returnType","$static","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Param":{"class":{"descriptions":{"short":"Reflection class for the {@}param tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$isVariadic","$description"],"docParameters":{"$variableName":{"type":"string","description":""},"$type":{"type":"Type","description":""},"$isVariadic":{"type":"bool","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Property":{"class":{"descriptions":{"short":"Reflection class for a {@}property tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":""},"$type":{"type":"Type","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyRead":{"class":{"descriptions":{"short":"Reflection class for a {@}property-read tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":""},"$type":{"type":"Type","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyWrite":{"class":{"descriptions":{"short":"Reflection class for a {@}property-write tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":""},"$type":{"type":"Type","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Return_":{"class":{"descriptions":{"short":"Reflection class for a {@}return tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\See":{"class":{"descriptions":{"short":"Reflection class for an {@}see tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Since":{"class":{"descriptions":{"short":"Reflection class for a {@}since tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Source":{"class":{"descriptions":{"short":"Reflection class for a {@}source tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$startingLine"],"optionals":["$lineCount","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws":{"class":{"descriptions":{"short":"Reflection class for a {@}throws tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Uses":{"class":{"descriptions":{"short":"Reflection class for a {@}uses tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Var_":{"class":{"descriptions":{"short":"Reflection class for a {@}var tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":""},"$type":{"type":"Type","description":""},"$description":{"type":"Description","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Version":{"class":{"descriptions":{"short":"Reflection class for a {@}version tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Element":{"class":{"descriptions":{"short":"Interface for Api Elements","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\ExampleFinder":{"class":{"descriptions":{"short":"Class used to find an example file's location based on a given ExampleDescriptor.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\File":{"class":{"descriptions":{"short":"Interface for files processed by the ProjectFactory","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Fqsen":{"class":{"descriptions":{"short":"Value Object for Fqsen.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fqsen"],"optionals":[],"docParameters":{"$fqsen":{"type":"string","description":""}},"throws":{"\\InvalidArgumentException":"when $fqsen is not matching the format."},"return":{"type":"self","description":""},"descriptions":{"short":"Initializes the object.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\FqsenResolver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Location":{"class":{"descriptions":{"short":"The location where an element occurs within a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$lineNumber"],"optionals":["$columnNumber"],"docParameters":{"$lineNumber":{"type":"int","description":""},"$columnNumber":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes the location for an element using its line number in the file and optionally the column number.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Project":{"class":{"descriptions":{"short":"Interface for project. Since the definition of a project can be different per factory this interface will be small.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\ProjectFactory":{"class":{"descriptions":{"short":"Interface for project factories. A project factory shall convert a set of files\ninto an object implementing the Project interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Type":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\TypeResolver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fqsenResolver"],"docParameters":{"$fqsenResolver":{"type":"FqsenResolver","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this TypeResolver with the means to create and resolve Fqsen objects.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Array_":{"class":{"descriptions":{"short":"Represents an array type as described in the PSR-5, the PHPDoc Standard.","long":"An array can be represented in two forms:\n\n1. Untyped (`array`), where the key and value type is unknown and hence classified as 'Mixed'.\n2. Types (`string[]`), where the value type is provided by preceding an opening and closing square bracket with a\ntype name."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$valueType","$keyType"],"docParameters":{"$valueType":{"type":"Type","description":""},"$keyType":{"type":"Type","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this representation of an array with the given Type or Fqsen.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Boolean":{"class":{"descriptions":{"short":"Value Object representing a Boolean type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Callable_":{"class":{"descriptions":{"short":"Value Object representing a Callable type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Compound":{"class":{"descriptions":{"short":"Value Object representing a Compound Type.","long":"A Compound Type is not so much a special keyword or object reference but is a series of Types that are separated\nusing an OR operator (`|`). This combination of types signifies that whatever is associated with this compound type\nmay contain a value with any of the given types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$types"],"optionals":[],"docParameters":{"$types":{"type":"Type[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes a compound type (i.e. `string|int`) and tests if the provided types all implement the Type interface.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Context":{"class":{"descriptions":{"short":"Provides information about the Context in which the DocBlock occurs that receives this context.","long":"A DocBlock does not know of its own accord in which namespace it occurs and which namespace aliases are applicable\nfor the block of code in which it is in. This information is however necessary to resolve Class names in tags since\nyou can provide a short form or make use of namespace aliases.\n\nThe phpDocumentor Reflection component knows how to create this class but if you use the DocBlock parser from your\nown application it is possible to generate a Context class using the ContextFactory; this will analyze the file in\nwhich an associated class resides for its namespace and imports."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace"],"optionals":["$namespaceAliases"],"docParameters":{"$namespace":{"type":"string","description":"The namespace where this DocBlock resides in."},"$namespaceAliases":{"type":"array","description":"List of namespace aliases => Fully Qualified Namespace."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes the new context and normalizes all passed namespaces to be in Qualified Namespace Name (QNN)\nformat (without a preceding `\\`).","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\ContextFactory":{"class":{"descriptions":{"short":"Convenience class to create a Context for DocBlocks when not using the Reflection Component of phpDocumentor.","long":"For a DocBlock to be able to resolve types that use partial namespace names or rely on namespace imports we need to\nprovide a bit of context so that the DocBlock can read that and based on it decide how to resolve the types to\nFully Qualified names."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Float_":{"class":{"descriptions":{"short":"Value Object representing a Float.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Integer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Mixed":{"class":{"descriptions":{"short":"Value Object representing an unknown, or mixed, type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Null_":{"class":{"descriptions":{"short":"Value Object representing a null value or type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Object_":{"class":{"descriptions":{"short":"Value Object representing an object.","long":"An object can be either typed or untyped. When an object is typed it means that it has an identifier, the FQSEN,\npointing to an element in PHP. Object types that are untyped do not refer to a specific class but represent objects\nin general."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fqsen"],"docParameters":{"$fqsen":{"type":"Fqsen","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Initializes this object with an optional FQSEN, if not provided this object is considered 'untyped'.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Resource":{"class":{"descriptions":{"short":"Value Object representing the 'resource' Type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Scalar":{"class":{"descriptions":{"short":"Value Object representing the 'scalar' pseudo-type, which is either a string, integer, float or boolean.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Self_":{"class":{"descriptions":{"short":"Value Object representing the 'self' type.","long":"Self, as a Type, represents the class in which the associated element was defined."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Static_":{"class":{"descriptions":{"short":"Value Object representing the 'static' type.","long":"Self, as a Type, represents the class in which the associated element was called. This differs from self as self does\nnot take inheritance into account but static means that the return type is always that of the class of the called\nelement.\n\nSee the documentation on late static binding in the PHP Documentation for more information on the difference between\nstatic and self."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\String_":{"class":{"descriptions":{"short":"Value Object representing the type 'string'.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\This":{"class":{"descriptions":{"short":"Value Object representing the '$this' pseudo-type.","long":"$this, as a Type, represents the instance of the class associated with the element as it was called. $this is\ncommonly used when documenting fluent interfaces since it represents that the same object is returned."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Void_":{"class":{"descriptions":{"short":"Value Object representing the pseudo-type 'void'.","long":"Void is generally only used when working with return types as it signifies that the method intentionally does not\nreturn any value."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"stdClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ErrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$severity","$filename","$lineno","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Generator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeImmutable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeZone":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$timezone"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateInterval":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$interval_spec"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DatePeriod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$start","$interval","$end"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LibXMLError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SQLite3":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename","$flags","$encryption_key"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sqlite3"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CURLFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$mimetype","$postname"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameSpaceNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDocumentFragment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMNodeList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNamedNodeMap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCharacterData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMAttr":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMText":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMComment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMTypeinfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMUserDataHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDomError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMErrorHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMLocator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMConfiguration":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCdataSection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocumentType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNotation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntity":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntityReference":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMProcessingInstruction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringExtend":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMXPath":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doc"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"finfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$arg"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadFunctionCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DomainException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LengthException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OverflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnderflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnexpectedValueException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveIteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$mode","$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParentIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LimitIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$offset","$count"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"NoRewindIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"AppendIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InfiniteIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveRegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"EmptyIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"RecursiveTreeIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags","$caching_it_flags","$mode"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilesystemIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GlobIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":["$open_mode","$use_include_path","$context"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplTempFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$max_memory"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplStack":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMinHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMaxHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplPriorityQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplFixedArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$size"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplObjectStorage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MultipleIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$flags"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SessionHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"__PHP_Incomplete_Class":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"php_user_filter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli_sql_exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_driver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$host","$user","$password","$database","$port","$socket"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_warning":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$username","$passwd","$options"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOStatement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PDORow":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PharException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Phar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Reflection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunctionAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionParameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$function","$parameter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class_or_method"],"optionals":["$name"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionProperty":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionZendExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SNMP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$version","$host","$community"],"optionals":["$timeout","$retries"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SNMPException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapVar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$encoding"],"optionals":["$type_name","$type_namespace","$node_name","$node_namespace"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapServer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapFault":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$faultcode","$faultstring"],"optionals":["$faultactor","$detail","$faultname","$headerfault"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapParam":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapHeader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace","$name"],"optionals":["$data","$mustunderstand","$actor"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"tidy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"tidyNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"XMLReader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XMLWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XSLTProcessor":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ZipArchive":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}}},"autocomplete":["DeepCopy\\DeepCopy","DeepCopy\\Exception\\CloneException","DeepCopy\\Filter\\Doctrine\\DoctrineCollectionFilter","DeepCopy\\Filter\\Doctrine\\DoctrineEmptyCollectionFilter","DeepCopy\\Filter\\Doctrine\\DoctrineProxyFilter","DeepCopy\\Filter\\Filter","DeepCopy\\Filter\\KeepFilter","DeepCopy\\Filter\\ReplaceFilter","DeepCopy\\Filter\\SetNullFilter","DeepCopy\\Matcher\\Doctrine\\DoctrineProxyMatcher","DeepCopy\\Matcher\\Matcher","DeepCopy\\Matcher\\PropertyMatcher","DeepCopy\\Matcher\\PropertyNameMatcher","DeepCopy\\Matcher\\PropertyTypeMatcher","DeepCopy\\Reflection\\ReflectionHelper","DeepCopy\\TypeFilter\\ReplaceFilter","DeepCopy\\TypeFilter\\ShallowCopyFilter","DeepCopy\\TypeFilter\\Spl\\SplDoublyLinkedList","DeepCopy\\TypeFilter\\TypeFilter","DeepCopy\\TypeMatcher\\TypeMatcher","Doctrine\\Common\\Annotations\\Annotation","Doctrine\\Common\\Annotations\\AnnotationException","Doctrine\\Common\\Annotations\\AnnotationReader","Doctrine\\Common\\Annotations\\AnnotationRegistry","Doctrine\\Common\\Annotations\\Annotation\\Attribute","Doctrine\\Common\\Annotations\\Annotation\\Attributes","Doctrine\\Common\\Annotations\\Annotation\\Enum","Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation","Doctrine\\Common\\Annotations\\Annotation\\Required","Doctrine\\Common\\Annotations\\Annotation\\Target","Doctrine\\Common\\Annotations\\CachedReader","Doctrine\\Common\\Annotations\\DocLexer","Doctrine\\Common\\Annotations\\DocParser","Doctrine\\Common\\Annotations\\FileCacheReader","Doctrine\\Common\\Annotations\\IndexedReader","Doctrine\\Common\\Annotations\\PhpParser","Doctrine\\Common\\Annotations\\Reader","Doctrine\\Common\\Annotations\\SimpleAnnotationReader","Doctrine\\Common\\Annotations\\TokenParser","Doctrine\\Common\\Lexer\\AbstractLexer","Doctrine\\Instantiator\\Exception\\ExceptionInterface","Doctrine\\Instantiator\\Exception\\InvalidArgumentException","Doctrine\\Instantiator\\Exception\\UnexpectedValueException","Doctrine\\Instantiator\\Instantiator","Doctrine\\Instantiator\\InstantiatorInterface","Elastica\\AbstractUpdateAction","Elastica\\Aggregation\\AbstractAggregation","Elastica\\Aggregation\\AbstractSimpleAggregation","Elastica\\Aggregation\\Avg","Elastica\\Aggregation\\Cardinality","Elastica\\Aggregation\\DateHistogram","Elastica\\Aggregation\\DateRange","Elastica\\Aggregation\\ExtendedStats","Elastica\\Aggregation\\Filter","Elastica\\Aggregation\\Filters","Elastica\\Aggregation\\GeoDistance","Elastica\\Aggregation\\GeohashGrid","Elastica\\Aggregation\\GlobalAggregation","Elastica\\Aggregation\\Histogram","Elastica\\Aggregation\\IpRange","Elastica\\Aggregation\\Max","Elastica\\Aggregation\\Min","Elastica\\Aggregation\\Missing","Elastica\\Aggregation\\Nested","Elastica\\Aggregation\\Range","Elastica\\Aggregation\\ReverseNested","Elastica\\Aggregation\\ScriptedMetric","Elastica\\Aggregation\\Stats","Elastica\\Aggregation\\Sum","Elastica\\Aggregation\\Terms","Elastica\\Aggregation\\TopHits","Elastica\\Aggregation\\ValueCount","Elastica\\Bulk","Elastica\\Bulk\\Action","Elastica\\Bulk\\Action\\AbstractDocument","Elastica\\Bulk\\Action\\CreateDocument","Elastica\\Bulk\\Action\\DeleteDocument","Elastica\\Bulk\\Action\\IndexDocument","Elastica\\Bulk\\Action\\UpdateDocument","Elastica\\Bulk\\Response","Elastica\\Bulk\\ResponseSet","Elastica\\Client","Elastica\\Cluster","Elastica\\Cluster\\Health","Elastica\\Cluster\\Health\\Index","Elastica\\Cluster\\Health\\Shard","Elastica\\Cluster\\Settings","Elastica\\Connection","Elastica\\Connection\\ConnectionPool","Elastica\\Connection\\Strategy\\CallbackStrategy","Elastica\\Connection\\Strategy\\RoundRobin","Elastica\\Connection\\Strategy\\Simple","Elastica\\Connection\\Strategy\\StrategyFactory","Elastica\\Connection\\Strategy\\StrategyInterface","Elastica\\Document","Elastica\\Exception\\BulkException","Elastica\\Exception\\Bulk\\ResponseException","Elastica\\Exception\\Bulk\\Response\\ActionException","Elastica\\Exception\\Bulk\\UdpException","Elastica\\Exception\\ClientException","Elastica\\Exception\\ConnectionException","Elastica\\Exception\\Connection\\GuzzleException","Elastica\\Exception\\Connection\\HttpException","Elastica\\Exception\\Connection\\MemcacheException","Elastica\\Exception\\Connection\\ThriftException","Elastica\\Exception\\ElasticsearchException","Elastica\\Exception\\ExceptionInterface","Elastica\\Exception\\InvalidException","Elastica\\Exception\\JSONParseException","Elastica\\Exception\\NotFoundException","Elastica\\Exception\\NotImplementedException","Elastica\\Exception\\PartialShardFailureException","Elastica\\Exception\\QueryBuilderException","Elastica\\Exception\\ResponseException","Elastica\\Exception\\RuntimeException","Elastica\\Facet\\AbstractFacet","Elastica\\Facet\\DateHistogram","Elastica\\Facet\\Filter","Elastica\\Facet\\GeoCluster","Elastica\\Facet\\GeoDistance","Elastica\\Facet\\Histogram","Elastica\\Facet\\Query","Elastica\\Facet\\Range","Elastica\\Facet\\Statistical","Elastica\\Facet\\Terms","Elastica\\Facet\\TermsStats","Elastica\\Filter\\AbstractFilter","Elastica\\Filter\\AbstractGeoDistance","Elastica\\Filter\\AbstractGeoShape","Elastica\\Filter\\AbstractMulti","Elastica\\Filter\\Bool","Elastica\\Filter\\BoolAnd","Elastica\\Filter\\BoolNot","Elastica\\Filter\\BoolOr","Elastica\\Filter\\Exists","Elastica\\Filter\\GeoBoundingBox","Elastica\\Filter\\GeoDistance","Elastica\\Filter\\GeoDistanceRange","Elastica\\Filter\\GeoPolygon","Elastica\\Filter\\GeoShapePreIndexed","Elastica\\Filter\\GeoShapeProvided","Elastica\\Filter\\GeohashCell","Elastica\\Filter\\HasChild","Elastica\\Filter\\HasParent","Elastica\\Filter\\Ids","Elastica\\Filter\\Indices","Elastica\\Filter\\Limit","Elastica\\Filter\\MatchAll","Elastica\\Filter\\Missing","Elastica\\Filter\\Nested","Elastica\\Filter\\NumericRange","Elastica\\Filter\\Prefix","Elastica\\Filter\\Query","Elastica\\Filter\\Range","Elastica\\Filter\\Regexp","Elastica\\Filter\\Script","Elastica\\Filter\\Term","Elastica\\Filter\\Terms","Elastica\\Filter\\Type","Elastica\\Index","Elastica\\Index\\Settings","Elastica\\Index\\Stats","Elastica\\Index\\Status","Elastica\\JSON","Elastica\\Log","Elastica\\Multi\\ResultSet","Elastica\\Multi\\Search","Elastica\\Node","Elastica\\Node\\Info","Elastica\\Node\\Stats","Elastica\\Param","Elastica\\Percolator","Elastica\\Query","Elastica\\QueryBuilder","Elastica\\QueryBuilder\\DSL","Elastica\\QueryBuilder\\DSL\\Aggregation","Elastica\\QueryBuilder\\DSL\\Filter","Elastica\\QueryBuilder\\DSL\\Query","Elastica\\QueryBuilder\\DSL\\Suggest","Elastica\\QueryBuilder\\Facade","Elastica\\QueryBuilder\\Version","Elastica\\QueryBuilder\\Version\\Version090","Elastica\\QueryBuilder\\Version\\Version100","Elastica\\QueryBuilder\\Version\\Version110","Elastica\\QueryBuilder\\Version\\Version120","Elastica\\QueryBuilder\\Version\\Version130","Elastica\\QueryBuilder\\Version\\Version140","Elastica\\Query\\AbstractQuery","Elastica\\Query\\Bool","Elastica\\Query\\Boosting","Elastica\\Query\\Builder","Elastica\\Query\\Common","Elastica\\Query\\ConstantScore","Elastica\\Query\\DisMax","Elastica\\Query\\Filtered","Elastica\\Query\\FunctionScore","Elastica\\Query\\Fuzzy","Elastica\\Query\\FuzzyLikeThis","Elastica\\Query\\HasChild","Elastica\\Query\\HasParent","Elastica\\Query\\Ids","Elastica\\Query\\Match","Elastica\\Query\\MatchAll","Elastica\\Query\\MatchPhrase","Elastica\\Query\\MatchPhrasePrefix","Elastica\\Query\\MoreLikeThis","Elastica\\Query\\MultiMatch","Elastica\\Query\\Nested","Elastica\\Query\\Prefix","Elastica\\Query\\QueryString","Elastica\\Query\\Range","Elastica\\Query\\Regexp","Elastica\\Query\\Simple","Elastica\\Query\\SimpleQueryString","Elastica\\Query\\Term","Elastica\\Query\\Terms","Elastica\\Query\\TopChildren","Elastica\\Query\\Wildcard","Elastica\\Request","Elastica\\Rescore\\AbstractRescore","Elastica\\Rescore\\Query","Elastica\\Response","Elastica\\Result","Elastica\\ResultSet","Elastica\\ScanAndScroll","Elastica\\Script","Elastica\\ScriptFields","Elastica\\Search","Elastica\\SearchableInterface","Elastica\\Snapshot","Elastica\\Status","Elastica\\Suggest","Elastica\\Suggest\\AbstractSuggest","Elastica\\Suggest\\CandidateGenerator\\AbstractCandidateGenerator","Elastica\\Suggest\\CandidateGenerator\\DirectGenerator","Elastica\\Suggest\\Phrase","Elastica\\Suggest\\Term","Elastica\\Transport\\AbstractTransport","Elastica\\Transport\\Guzzle","Elastica\\Transport\\Http","Elastica\\Transport\\HttpAdapter","Elastica\\Transport\\Https","Elastica\\Transport\\Memcache","Elastica\\Transport\\Null","Elastica\\Transport\\Thrift","Elastica\\Type","Elastica\\Type\\AbstractType","Elastica\\Type\\Mapping","Elastica\\Util","File_Iterator","File_Iterator_Facade","File_Iterator_Factory","FluentDOM\\Appendable","FluentDOM\\Attribute","FluentDOM\\CdataSection","FluentDOM\\Comment","FluentDOM\\Constraints","FluentDOM\\Document","FluentDOM\\DocumentFragment","FluentDOM\\Element","FluentDOM\\Exception","FluentDOM\\Exceptions\\InvalidArgument","FluentDOM\\Exceptions\\InvalidFragmentLoader","FluentDOM\\Exceptions\\InvalidSerializer","FluentDOM\\Exceptions\\InvalidSource","FluentDOM\\Exceptions\\InvalidSource\\TypeFile","FluentDOM\\Exceptions\\InvalidSource\\TypeString","FluentDOM\\Exceptions\\InvalidSource\\Variable","FluentDOM\\Exceptions\\LoadingError","FluentDOM\\Exceptions\\LoadingError\\EmptyResult","FluentDOM\\Exceptions\\LoadingError\\EmptySource","FluentDOM\\Exceptions\\LoadingError\\Json","FluentDOM\\Exceptions\\LoadingError\\Libxml","FluentDOM\\Exceptions\\NoSerializer","FluentDOM\\HHVM\\Properties","FluentDOM\\Iterators\\ElementIterator","FluentDOM\\Iterators\\IndexIterator","FluentDOM\\Iterators\\MapIterator","FluentDOM\\Iterators\\NodesIterator","FluentDOM\\Loadable","FluentDOM\\Loader\\Html","FluentDOM\\Loader\\JSONx","FluentDOM\\Loader\\Json","FluentDOM\\Loader\\Json\\BadgerFish","FluentDOM\\Loader\\Json\\JsonDOM","FluentDOM\\Loader\\Json\\JsonML","FluentDOM\\Loader\\Json\\Rayfish","FluentDOM\\Loader\\Json\\SimpleXML","FluentDOM\\Loader\\Lazy","FluentDOM\\Loader\\Libxml\\Errors","FluentDOM\\Loader\\Options","FluentDOM\\Loader\\PHP","FluentDOM\\Loader\\PHP\\PDO","FluentDOM\\Loader\\PHP\\SimpleXml","FluentDOM\\Loader\\Result","FluentDOM\\Loader\\Standard","FluentDOM\\Loader\\Supports","FluentDOM\\Loader\\Supports\\Json","FluentDOM\\Loader\\Supports\\Libxml","FluentDOM\\Loader\\Text","FluentDOM\\Loader\\Text\\CSV","FluentDOM\\Loader\\Xml","FluentDOM\\Loaders","FluentDOM\\Node\\ChildNode","FluentDOM\\Node\\ChildNode\\Implementation","FluentDOM\\Node\\MutationMacro","FluentDOM\\Node\\NonDocumentTypeChildNode","FluentDOM\\Node\\NonDocumentTypeChildNode\\Implementation","FluentDOM\\Node\\NonDocumentTypeChildNode\\Properties","FluentDOM\\Node\\ParentNode","FluentDOM\\Node\\ParentNode\\Implementation","FluentDOM\\Node\\ParentNode\\Properties","FluentDOM\\Node\\QuerySelector","FluentDOM\\Node\\QuerySelector\\Implementation","FluentDOM\\Node\\StringCast","FluentDOM\\Node\\WholeText","FluentDOM\\Node\\Xpath","FluentDOM\\Nodes","FluentDOM\\Nodes\\Builder","FluentDOM\\Nodes\\Compare","FluentDOM\\Nodes\\Creator","FluentDOM\\Nodes\\Creator\\Node","FluentDOM\\Nodes\\Creator\\Nodes","FluentDOM\\Nodes\\Fetcher","FluentDOM\\Nodes\\Modifier","FluentDOM\\ProcessingInstruction","FluentDOM\\QualifiedName","FluentDOM\\Query","FluentDOM\\Query\\Attributes","FluentDOM\\Query\\Css","FluentDOM\\Query\\Css\\Properties","FluentDOM\\Query\\Css\\PropertyCompare","FluentDOM\\Query\\Data","FluentDOM\\Serializer\\Factory","FluentDOM\\Serializer\\Factory\\Group","FluentDOM\\Serializer\\Html","FluentDOM\\Serializer\\Json","FluentDOM\\Serializer\\Json\\BadgerFish","FluentDOM\\Serializer\\Json\\JsonML","FluentDOM\\Serializer\\Json\\RabbitFish","FluentDOM\\Serializer\\Json\\Rayfish","FluentDOM\\Serializer\\Xml","FluentDOM\\Text","FluentDOM\\Transformer\\JSONx","FluentDOM\\Transformer\\Namespaces\\Optimize","FluentDOM\\Transformer\\Namespaces\\Replace","FluentDOM\\XmlSerializable","FluentDOM\\XmlSerialize","FluentDOM\\Xpath","FluentDOM\\Xpath\\Transformer","GuzzleHttp\\Client","GuzzleHttp\\ClientInterface","GuzzleHttp\\Cookie\\CookieJar","GuzzleHttp\\Cookie\\CookieJarInterface","GuzzleHttp\\Cookie\\FileCookieJar","GuzzleHttp\\Cookie\\SessionCookieJar","GuzzleHttp\\Cookie\\SetCookie","GuzzleHttp\\Exception\\BadResponseException","GuzzleHttp\\Exception\\ClientException","GuzzleHttp\\Exception\\ConnectException","GuzzleHttp\\Exception\\GuzzleException","GuzzleHttp\\Exception\\RequestException","GuzzleHttp\\Exception\\SeekException","GuzzleHttp\\Exception\\ServerException","GuzzleHttp\\Exception\\TooManyRedirectsException","GuzzleHttp\\Exception\\TransferException","GuzzleHttp\\HandlerStack","GuzzleHttp\\Handler\\CurlFactory","GuzzleHttp\\Handler\\CurlFactoryInterface","GuzzleHttp\\Handler\\CurlHandler","GuzzleHttp\\Handler\\CurlMultiHandler","GuzzleHttp\\Handler\\EasyHandle","GuzzleHttp\\Handler\\MockHandler","GuzzleHttp\\Handler\\Proxy","GuzzleHttp\\Handler\\StreamHandler","GuzzleHttp\\MessageFormatter","GuzzleHttp\\Middleware","GuzzleHttp\\Pool","GuzzleHttp\\PrepareBodyMiddleware","GuzzleHttp\\Promise\\AggregateException","GuzzleHttp\\Promise\\CancellationException","GuzzleHttp\\Promise\\Coroutine","GuzzleHttp\\Promise\\EachPromise","GuzzleHttp\\Promise\\FulfilledPromise","GuzzleHttp\\Promise\\Promise","GuzzleHttp\\Promise\\PromiseInterface","GuzzleHttp\\Promise\\PromisorInterface","GuzzleHttp\\Promise\\RejectedPromise","GuzzleHttp\\Promise\\RejectionException","GuzzleHttp\\Promise\\TaskQueue","GuzzleHttp\\Promise\\TaskQueueInterface","GuzzleHttp\\Psr7\\AppendStream","GuzzleHttp\\Psr7\\BufferStream","GuzzleHttp\\Psr7\\CachingStream","GuzzleHttp\\Psr7\\DroppingStream","GuzzleHttp\\Psr7\\FnStream","GuzzleHttp\\Psr7\\InflateStream","GuzzleHttp\\Psr7\\LazyOpenStream","GuzzleHttp\\Psr7\\LimitStream","GuzzleHttp\\Psr7\\MessageTrait","GuzzleHttp\\Psr7\\MultipartStream","GuzzleHttp\\Psr7\\NoSeekStream","GuzzleHttp\\Psr7\\PumpStream","GuzzleHttp\\Psr7\\Request","GuzzleHttp\\Psr7\\Response","GuzzleHttp\\Psr7\\ServerRequest","GuzzleHttp\\Psr7\\Stream","GuzzleHttp\\Psr7\\StreamDecoratorTrait","GuzzleHttp\\Psr7\\StreamWrapper","GuzzleHttp\\Psr7\\UploadedFile","GuzzleHttp\\Psr7\\Uri","GuzzleHttp\\Psr7\\UriNormalizer","GuzzleHttp\\Psr7\\UriResolver","GuzzleHttp\\RedirectMiddleware","GuzzleHttp\\RequestOptions","GuzzleHttp\\RetryMiddleware","GuzzleHttp\\TransferStats","GuzzleHttp\\UriTemplate","Hamcrest\\Arrays\\IsArray","Hamcrest\\Arrays\\IsArrayContaining","Hamcrest\\Arrays\\IsArrayContainingInAnyOrder","Hamcrest\\Arrays\\IsArrayContainingInOrder","Hamcrest\\Arrays\\IsArrayContainingKey","Hamcrest\\Arrays\\IsArrayContainingKeyValuePair","Hamcrest\\Arrays\\IsArrayWithSize","Hamcrest\\Arrays\\MatchingOnce","Hamcrest\\Arrays\\SeriesMatchingOnce","Hamcrest\\AssertionError","Hamcrest\\BaseDescription","Hamcrest\\BaseMatcher","Hamcrest\\Collection\\IsEmptyTraversable","Hamcrest\\Collection\\IsTraversableWithSize","Hamcrest\\Core\\AllOf","Hamcrest\\Core\\AnyOf","Hamcrest\\Core\\CombinableMatcher","Hamcrest\\Core\\DescribedAs","Hamcrest\\Core\\Every","Hamcrest\\Core\\HasToString","Hamcrest\\Core\\Is","Hamcrest\\Core\\IsAnything","Hamcrest\\Core\\IsCollectionContaining","Hamcrest\\Core\\IsEqual","Hamcrest\\Core\\IsIdentical","Hamcrest\\Core\\IsInstanceOf","Hamcrest\\Core\\IsNot","Hamcrest\\Core\\IsNull","Hamcrest\\Core\\IsSame","Hamcrest\\Core\\IsTypeOf","Hamcrest\\Core\\Set","Hamcrest\\Core\\ShortcutCombination","Hamcrest\\Description","Hamcrest\\DiagnosingMatcher","Hamcrest\\FeatureMatcher","Hamcrest\\Internal\\SelfDescribingValue","Hamcrest\\Matcher","Hamcrest\\MatcherAssert","Hamcrest\\Matchers","Hamcrest\\NullDescription","Hamcrest\\Number\\IsCloseTo","Hamcrest\\Number\\OrderingComparison","Hamcrest\\SelfDescribing","Hamcrest\\StringDescription","Hamcrest\\Text\\IsEmptyString","Hamcrest\\Text\\IsEqualIgnoringCase","Hamcrest\\Text\\IsEqualIgnoringWhiteSpace","Hamcrest\\Text\\MatchesPattern","Hamcrest\\Text\\StringContains","Hamcrest\\Text\\StringContainsIgnoringCase","Hamcrest\\Text\\StringContainsInOrder","Hamcrest\\Text\\StringEndsWith","Hamcrest\\Text\\StringStartsWith","Hamcrest\\Text\\SubstringMatcher","Hamcrest\\TypeSafeDiagnosingMatcher","Hamcrest\\TypeSafeMatcher","Hamcrest\\Type\\IsArray","Hamcrest\\Type\\IsBoolean","Hamcrest\\Type\\IsCallable","Hamcrest\\Type\\IsDouble","Hamcrest\\Type\\IsInteger","Hamcrest\\Type\\IsNumeric","Hamcrest\\Type\\IsObject","Hamcrest\\Type\\IsResource","Hamcrest\\Type\\IsScalar","Hamcrest\\Type\\IsString","Hamcrest\\Util","Hamcrest\\Xml\\HasXPath","Kint","Kint_Object","Kint_Object_Blob","Kint_Object_Closure","Kint_Object_Color","Kint_Object_DateTime","Kint_Object_Instance","Kint_Object_Method","Kint_Object_Nothing","Kint_Object_Parameter","Kint_Object_Representation","Kint_Object_Representation_Color","Kint_Object_Representation_Docstring","Kint_Object_Representation_Microtime","Kint_Object_Representation_Source","Kint_Object_Representation_SplFileInfo","Kint_Object_Resource","Kint_Object_Stream","Kint_Object_Throwable","Kint_Object_Trace","Kint_Object_TraceFrame","Kint_Parser","Kint_Parser_Base64","Kint_Parser_Binary","Kint_Parser_Blacklist","Kint_Parser_ClassMethods","Kint_Parser_ClassStatics","Kint_Parser_Closure","Kint_Parser_Color","Kint_Parser_DOMIterator","Kint_Parser_DOMNode","Kint_Parser_DateTime","Kint_Parser_FsPath","Kint_Parser_Iterator","Kint_Parser_Json","Kint_Parser_Microtime","Kint_Parser_Plugin","Kint_Parser_Serialize","Kint_Parser_SimpleXMLElement","Kint_Parser_SplFileInfo","Kint_Parser_SplObjectStorage","Kint_Parser_Stream","Kint_Parser_Table","Kint_Parser_Throwable","Kint_Parser_Timestamp","Kint_Parser_ToString","Kint_Parser_Trace","Kint_Parser_Xml","Kint_Renderer","Kint_Renderer_Cli","Kint_Renderer_Plain","Kint_Renderer_Rich","Kint_Renderer_Rich_Binary","Kint_Renderer_Rich_Blacklist","Kint_Renderer_Rich_Callable","Kint_Renderer_Rich_Closure","Kint_Renderer_Rich_Color","Kint_Renderer_Rich_ColorDetails","Kint_Renderer_Rich_DepthLimit","Kint_Renderer_Rich_Docstring","Kint_Renderer_Rich_Microtime","Kint_Renderer_Rich_Nothing","Kint_Renderer_Rich_Plugin","Kint_Renderer_Rich_Recursion","Kint_Renderer_Rich_SimpleXMLElement","Kint_Renderer_Rich_Source","Kint_Renderer_Rich_Table","Kint_Renderer_Rich_Timestamp","Kint_Renderer_Rich_TraceFrame","Kint_Renderer_Text","Kint_Renderer_Text_Blacklist","Kint_Renderer_Text_DepthLimit","Kint_Renderer_Text_Nothing","Kint_Renderer_Text_Plugin","Kint_Renderer_Text_Recursion","Kint_Renderer_Text_Trace","Kint_SourceParser","Mockery","Mockery\\Adapter\\Phpunit\\MockeryPHPUnitIntegration","Mockery\\Adapter\\Phpunit\\MockeryTestCase","Mockery\\Adapter\\Phpunit\\TestListener","Mockery\\CompositeExpectation","Mockery\\Configuration","Mockery\\Container","Mockery\\CountValidator\\AtLeast","Mockery\\CountValidator\\AtMost","Mockery\\CountValidator\\CountValidatorAbstract","Mockery\\CountValidator\\Exact","Mockery\\CountValidator\\Exception","Mockery\\Exception","Mockery\\Exception\\InvalidCountException","Mockery\\Exception\\InvalidOrderException","Mockery\\Exception\\NoMatchingExpectationException","Mockery\\Exception\\RuntimeException","Mockery\\Expectation","Mockery\\ExpectationDirector","Mockery\\ExpectationInterface","Mockery\\Generator\\CachingGenerator","Mockery\\Generator\\DefinedTargetClass","Mockery\\Generator\\Generator","Mockery\\Generator\\Method","Mockery\\Generator\\MockConfiguration","Mockery\\Generator\\MockConfigurationBuilder","Mockery\\Generator\\MockDefinition","Mockery\\Generator\\Parameter","Mockery\\Generator\\StringManipulationGenerator","Mockery\\Generator\\StringManipulation\\Pass\\CallTypeHintPass","Mockery\\Generator\\StringManipulation\\Pass\\ClassNamePass","Mockery\\Generator\\StringManipulation\\Pass\\ClassPass","Mockery\\Generator\\StringManipulation\\Pass\\InstanceMockPass","Mockery\\Generator\\StringManipulation\\Pass\\InterfacePass","Mockery\\Generator\\StringManipulation\\Pass\\MethodDefinitionPass","Mockery\\Generator\\StringManipulation\\Pass\\Pass","Mockery\\Generator\\StringManipulation\\Pass\\RemoveBuiltinMethodsThatAreFinalPass","Mockery\\Generator\\StringManipulation\\Pass\\RemoveUnserializeForInternalSerializableClassesPass","Mockery\\Generator\\TargetClass","Mockery\\Generator\\UndefinedTargetClass","Mockery\\Instantiator","Mockery\\Loader","Mockery\\Loader\\EvalLoader","Mockery\\Loader\\Loader","Mockery\\Loader\\RequireLoader","Mockery\\Matcher\\Any","Mockery\\Matcher\\AnyOf","Mockery\\Matcher\\Closure","Mockery\\Matcher\\Contains","Mockery\\Matcher\\Ducktype","Mockery\\Matcher\\HasKey","Mockery\\Matcher\\HasValue","Mockery\\Matcher\\MatcherAbstract","Mockery\\Matcher\\MustBe","Mockery\\Matcher\\Not","Mockery\\Matcher\\NotAnyOf","Mockery\\Matcher\\Subset","Mockery\\Matcher\\Type","Mockery\\MethodCall","Mockery\\Mock","Mockery\\MockInterface","Mockery\\ReceivedMethodCalls","Mockery\\Recorder","Mockery\\Undefined","Mockery\\VerificationDirector","Mockery\\VerificationExpectation","Monolog\\ErrorHandler","Monolog\\Formatter\\ChromePHPFormatter","Monolog\\Formatter\\ElasticaFormatter","Monolog\\Formatter\\FlowdockFormatter","Monolog\\Formatter\\FluentdFormatter","Monolog\\Formatter\\FormatterInterface","Monolog\\Formatter\\GelfMessageFormatter","Monolog\\Formatter\\HtmlFormatter","Monolog\\Formatter\\JsonFormatter","Monolog\\Formatter\\LineFormatter","Monolog\\Formatter\\LogglyFormatter","Monolog\\Formatter\\LogstashFormatter","Monolog\\Formatter\\MongoDBFormatter","Monolog\\Formatter\\NormalizerFormatter","Monolog\\Formatter\\ScalarFormatter","Monolog\\Formatter\\WildfireFormatter","Monolog\\Handler\\AbstractHandler","Monolog\\Handler\\AbstractProcessingHandler","Monolog\\Handler\\AbstractSyslogHandler","Monolog\\Handler\\AmqpHandler","Monolog\\Handler\\BrowserConsoleHandler","Monolog\\Handler\\BufferHandler","Monolog\\Handler\\ChromePHPHandler","Monolog\\Handler\\CouchDBHandler","Monolog\\Handler\\CubeHandler","Monolog\\Handler\\Curl\\Util","Monolog\\Handler\\DeduplicationHandler","Monolog\\Handler\\DoctrineCouchDBHandler","Monolog\\Handler\\DynamoDbHandler","Monolog\\Handler\\ElasticSearchHandler","Monolog\\Handler\\ErrorLogHandler","Monolog\\Handler\\FilterHandler","Monolog\\Handler\\FingersCrossedHandler","Monolog\\Handler\\FingersCrossed\\ActivationStrategyInterface","Monolog\\Handler\\FingersCrossed\\ChannelLevelActivationStrategy","Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy","Monolog\\Handler\\FirePHPHandler","Monolog\\Handler\\FleepHookHandler","Monolog\\Handler\\FlowdockHandler","Monolog\\Handler\\GelfHandler","Monolog\\Handler\\GroupHandler","Monolog\\Handler\\HandlerInterface","Monolog\\Handler\\HandlerWrapper","Monolog\\Handler\\HipChatHandler","Monolog\\Handler\\IFTTTHandler","Monolog\\Handler\\LogEntriesHandler","Monolog\\Handler\\LogglyHandler","Monolog\\Handler\\MailHandler","Monolog\\Handler\\MandrillHandler","Monolog\\Handler\\MissingExtensionException","Monolog\\Handler\\MongoDBHandler","Monolog\\Handler\\NativeMailerHandler","Monolog\\Handler\\NewRelicHandler","Monolog\\Handler\\NullHandler","Monolog\\Handler\\PHPConsoleHandler","Monolog\\Handler\\PsrHandler","Monolog\\Handler\\PushoverHandler","Monolog\\Handler\\RavenHandler","Monolog\\Handler\\RedisHandler","Monolog\\Handler\\RollbarHandler","Monolog\\Handler\\RotatingFileHandler","Monolog\\Handler\\SamplingHandler","Monolog\\Handler\\SlackHandler","Monolog\\Handler\\SlackWebhookHandler","Monolog\\Handler\\Slack\\SlackRecord","Monolog\\Handler\\SlackbotHandler","Monolog\\Handler\\SocketHandler","Monolog\\Handler\\StreamHandler","Monolog\\Handler\\SwiftMailerHandler","Monolog\\Handler\\SyslogHandler","Monolog\\Handler\\SyslogUdpHandler","Monolog\\Handler\\SyslogUdp\\UdpSocket","Monolog\\Handler\\TestHandler","Monolog\\Handler\\WhatFailureGroupHandler","Monolog\\Handler\\ZendMonitorHandler","Monolog\\Logger","Monolog\\Processor\\GitProcessor","Monolog\\Processor\\IntrospectionProcessor","Monolog\\Processor\\MemoryPeakUsageProcessor","Monolog\\Processor\\MemoryProcessor","Monolog\\Processor\\MemoryUsageProcessor","Monolog\\Processor\\MercurialProcessor","Monolog\\Processor\\ProcessIdProcessor","Monolog\\Processor\\PsrLogMessageProcessor","Monolog\\Processor\\TagProcessor","Monolog\\Processor\\UidProcessor","Monolog\\Processor\\WebProcessor","Monolog\\Registry","PHPUnit\\Framework\\Assert","PHPUnit\\Framework\\AssertionFailedError","PHPUnit\\Framework\\BaseTestListener","PHPUnit\\Framework\\Test","PHPUnit\\Framework\\TestCase","PHPUnit\\Framework\\TestListener","PHPUnit\\Framework\\TestSuite","PHPUnit_Exception","PHPUnit_Extensions_GroupTestSuite","PHPUnit_Extensions_PhptTestCase","PHPUnit_Extensions_PhptTestSuite","PHPUnit_Extensions_RepeatedTest","PHPUnit_Extensions_TestDecorator","PHPUnit_Extensions_TicketListener","PHPUnit_Framework_Assert","PHPUnit_Framework_AssertionFailedError","PHPUnit_Framework_BaseTestListener","PHPUnit_Framework_CodeCoverageException","PHPUnit_Framework_Constraint","PHPUnit_Framework_Constraint_And","PHPUnit_Framework_Constraint_ArrayHasKey","PHPUnit_Framework_Constraint_ArraySubset","PHPUnit_Framework_Constraint_Attribute","PHPUnit_Framework_Constraint_Callback","PHPUnit_Framework_Constraint_ClassHasAttribute","PHPUnit_Framework_Constraint_ClassHasStaticAttribute","PHPUnit_Framework_Constraint_Composite","PHPUnit_Framework_Constraint_Count","PHPUnit_Framework_Constraint_DirectoryExists","PHPUnit_Framework_Constraint_Exception","PHPUnit_Framework_Constraint_ExceptionCode","PHPUnit_Framework_Constraint_ExceptionMessage","PHPUnit_Framework_Constraint_ExceptionMessageRegExp","PHPUnit_Framework_Constraint_FileExists","PHPUnit_Framework_Constraint_GreaterThan","PHPUnit_Framework_Constraint_IsAnything","PHPUnit_Framework_Constraint_IsEmpty","PHPUnit_Framework_Constraint_IsEqual","PHPUnit_Framework_Constraint_IsFalse","PHPUnit_Framework_Constraint_IsFinite","PHPUnit_Framework_Constraint_IsIdentical","PHPUnit_Framework_Constraint_IsInfinite","PHPUnit_Framework_Constraint_IsInstanceOf","PHPUnit_Framework_Constraint_IsJson","PHPUnit_Framework_Constraint_IsNan","PHPUnit_Framework_Constraint_IsNull","PHPUnit_Framework_Constraint_IsReadable","PHPUnit_Framework_Constraint_IsTrue","PHPUnit_Framework_Constraint_IsType","PHPUnit_Framework_Constraint_IsWritable","PHPUnit_Framework_Constraint_JsonMatches","PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider","PHPUnit_Framework_Constraint_LessThan","PHPUnit_Framework_Constraint_Not","PHPUnit_Framework_Constraint_ObjectHasAttribute","PHPUnit_Framework_Constraint_Or","PHPUnit_Framework_Constraint_PCREMatch","PHPUnit_Framework_Constraint_SameSize","PHPUnit_Framework_Constraint_StringContains","PHPUnit_Framework_Constraint_StringEndsWith","PHPUnit_Framework_Constraint_StringMatches","PHPUnit_Framework_Constraint_StringStartsWith","PHPUnit_Framework_Constraint_TraversableContains","PHPUnit_Framework_Constraint_TraversableContainsOnly","PHPUnit_Framework_Constraint_Xor","PHPUnit_Framework_CoveredCodeNotExecutedException","PHPUnit_Framework_Error","PHPUnit_Framework_Error_Deprecated","PHPUnit_Framework_Error_Notice","PHPUnit_Framework_Error_Warning","PHPUnit_Framework_Exception","PHPUnit_Framework_ExceptionWrapper","PHPUnit_Framework_ExpectationFailedException","PHPUnit_Framework_IncompleteTest","PHPUnit_Framework_IncompleteTestCase","PHPUnit_Framework_IncompleteTestError","PHPUnit_Framework_InvalidCoversTargetException","PHPUnit_Framework_MissingCoversAnnotationException","PHPUnit_Framework_MockObject_BadMethodCallException","PHPUnit_Framework_MockObject_Builder_Identity","PHPUnit_Framework_MockObject_Builder_InvocationMocker","PHPUnit_Framework_MockObject_Builder_Match","PHPUnit_Framework_MockObject_Builder_MethodNameMatch","PHPUnit_Framework_MockObject_Builder_Namespace","PHPUnit_Framework_MockObject_Builder_ParametersMatch","PHPUnit_Framework_MockObject_Builder_Stub","PHPUnit_Framework_MockObject_Exception","PHPUnit_Framework_MockObject_Generator","PHPUnit_Framework_MockObject_Invocation","PHPUnit_Framework_MockObject_InvocationMocker","PHPUnit_Framework_MockObject_Invocation_Object","PHPUnit_Framework_MockObject_Invocation_Static","PHPUnit_Framework_MockObject_Invokable","PHPUnit_Framework_MockObject_Matcher","PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount","PHPUnit_Framework_MockObject_Matcher_AnyParameters","PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters","PHPUnit_Framework_MockObject_Matcher_Invocation","PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex","PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount","PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce","PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount","PHPUnit_Framework_MockObject_Matcher_InvokedCount","PHPUnit_Framework_MockObject_Matcher_InvokedRecorder","PHPUnit_Framework_MockObject_Matcher_MethodName","PHPUnit_Framework_MockObject_Matcher_Parameters","PHPUnit_Framework_MockObject_Matcher_StatelessInvocation","PHPUnit_Framework_MockObject_MockBuilder","PHPUnit_Framework_MockObject_MockObject","PHPUnit_Framework_MockObject_RuntimeException","PHPUnit_Framework_MockObject_Stub","PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls","PHPUnit_Framework_MockObject_Stub_Exception","PHPUnit_Framework_MockObject_Stub_MatcherCollection","PHPUnit_Framework_MockObject_Stub_Return","PHPUnit_Framework_MockObject_Stub_ReturnArgument","PHPUnit_Framework_MockObject_Stub_ReturnCallback","PHPUnit_Framework_MockObject_Stub_ReturnReference","PHPUnit_Framework_MockObject_Stub_ReturnSelf","PHPUnit_Framework_MockObject_Stub_ReturnValueMap","PHPUnit_Framework_MockObject_Verifiable","PHPUnit_Framework_OutputError","PHPUnit_Framework_RiskyTest","PHPUnit_Framework_RiskyTestError","PHPUnit_Framework_SelfDescribing","PHPUnit_Framework_SkippedTest","PHPUnit_Framework_SkippedTestCase","PHPUnit_Framework_SkippedTestError","PHPUnit_Framework_SkippedTestSuiteError","PHPUnit_Framework_SyntheticError","PHPUnit_Framework_Test","PHPUnit_Framework_TestCase","PHPUnit_Framework_TestFailure","PHPUnit_Framework_TestListener","PHPUnit_Framework_TestResult","PHPUnit_Framework_TestSuite","PHPUnit_Framework_TestSuite_DataProvider","PHPUnit_Framework_UnintentionallyCoveredCodeError","PHPUnit_Framework_Warning","PHPUnit_Framework_WarningTestCase","PHPUnit_Runner_BaseTestRunner","PHPUnit_Runner_Exception","PHPUnit_Runner_Filter_Factory","PHPUnit_Runner_Filter_GroupFilterIterator","PHPUnit_Runner_Filter_Group_Exclude","PHPUnit_Runner_Filter_Group_Include","PHPUnit_Runner_Filter_Test","PHPUnit_Runner_StandardTestSuiteLoader","PHPUnit_Runner_TestSuiteLoader","PHPUnit_Runner_Version","PHPUnit_TextUI_Command","PHPUnit_TextUI_ResultPrinter","PHPUnit_TextUI_TestRunner","PHPUnit_Util_Blacklist","PHPUnit_Util_Configuration","PHPUnit_Util_ConfigurationGenerator","PHPUnit_Util_ErrorHandler","PHPUnit_Util_Fileloader","PHPUnit_Util_Filesystem","PHPUnit_Util_Filter","PHPUnit_Util_Getopt","PHPUnit_Util_GlobalState","PHPUnit_Util_InvalidArgumentHelper","PHPUnit_Util_Log_JSON","PHPUnit_Util_Log_JUnit","PHPUnit_Util_Log_TAP","PHPUnit_Util_Log_TeamCity","PHPUnit_Util_PHP","PHPUnit_Util_PHP_Default","PHPUnit_Util_PHP_Windows","PHPUnit_Util_Printer","PHPUnit_Util_Regex","PHPUnit_Util_String","PHPUnit_Util_Test","PHPUnit_Util_TestDox_NamePrettifier","PHPUnit_Util_TestDox_ResultPrinter","PHPUnit_Util_TestDox_ResultPrinter_HTML","PHPUnit_Util_TestDox_ResultPrinter_Text","PHPUnit_Util_TestDox_ResultPrinter_XML","PHPUnit_Util_TestSuiteIterator","PHPUnit_Util_Type","PHPUnit_Util_XML","PHP_Timer","PHP_Token","PHP_TokenWithScope","PHP_TokenWithScopeAndVisibility","PHP_Token_ABSTRACT","PHP_Token_AMPERSAND","PHP_Token_AND_EQUAL","PHP_Token_ARRAY","PHP_Token_ARRAY_CAST","PHP_Token_AS","PHP_Token_ASYNC","PHP_Token_AT","PHP_Token_AWAIT","PHP_Token_BACKTICK","PHP_Token_BAD_CHARACTER","PHP_Token_BOOLEAN_AND","PHP_Token_BOOLEAN_OR","PHP_Token_BOOL_CAST","PHP_Token_BREAK","PHP_Token_CALLABLE","PHP_Token_CARET","PHP_Token_CASE","PHP_Token_CATCH","PHP_Token_CHARACTER","PHP_Token_CLASS","PHP_Token_CLASS_C","PHP_Token_CLASS_NAME_CONSTANT","PHP_Token_CLONE","PHP_Token_CLOSE_BRACKET","PHP_Token_CLOSE_CURLY","PHP_Token_CLOSE_SQUARE","PHP_Token_CLOSE_TAG","PHP_Token_COALESCE","PHP_Token_COLON","PHP_Token_COMMA","PHP_Token_COMMENT","PHP_Token_COMPILER_HALT_OFFSET","PHP_Token_CONCAT_EQUAL","PHP_Token_CONST","PHP_Token_CONSTANT_ENCAPSED_STRING","PHP_Token_CONTINUE","PHP_Token_CURLY_OPEN","PHP_Token_DEC","PHP_Token_DECLARE","PHP_Token_DEFAULT","PHP_Token_DIR","PHP_Token_DIV","PHP_Token_DIV_EQUAL","PHP_Token_DNUMBER","PHP_Token_DO","PHP_Token_DOC_COMMENT","PHP_Token_DOLLAR","PHP_Token_DOLLAR_OPEN_CURLY_BRACES","PHP_Token_DOT","PHP_Token_DOUBLE_ARROW","PHP_Token_DOUBLE_CAST","PHP_Token_DOUBLE_COLON","PHP_Token_DOUBLE_QUOTES","PHP_Token_ECHO","PHP_Token_ELLIPSIS","PHP_Token_ELSE","PHP_Token_ELSEIF","PHP_Token_EMPTY","PHP_Token_ENCAPSED_AND_WHITESPACE","PHP_Token_ENDDECLARE","PHP_Token_ENDFOR","PHP_Token_ENDFOREACH","PHP_Token_ENDIF","PHP_Token_ENDSWITCH","PHP_Token_ENDWHILE","PHP_Token_END_HEREDOC","PHP_Token_ENUM","PHP_Token_EQUAL","PHP_Token_EQUALS","PHP_Token_EVAL","PHP_Token_EXCLAMATION_MARK","PHP_Token_EXIT","PHP_Token_EXTENDS","PHP_Token_FILE","PHP_Token_FINAL","PHP_Token_FINALLY","PHP_Token_FOR","PHP_Token_FOREACH","PHP_Token_FUNCTION","PHP_Token_FUNC_C","PHP_Token_GLOBAL","PHP_Token_GOTO","PHP_Token_GT","PHP_Token_HALT_COMPILER","PHP_Token_IF","PHP_Token_IMPLEMENTS","PHP_Token_IN","PHP_Token_INC","PHP_Token_INCLUDE","PHP_Token_INCLUDE_ONCE","PHP_Token_INLINE_HTML","PHP_Token_INSTANCEOF","PHP_Token_INSTEADOF","PHP_Token_INTERFACE","PHP_Token_INT_CAST","PHP_Token_ISSET","PHP_Token_IS_EQUAL","PHP_Token_IS_GREATER_OR_EQUAL","PHP_Token_IS_IDENTICAL","PHP_Token_IS_NOT_EQUAL","PHP_Token_IS_NOT_IDENTICAL","PHP_Token_IS_SMALLER_OR_EQUAL","PHP_Token_Includes","PHP_Token_JOIN","PHP_Token_LAMBDA_ARROW","PHP_Token_LAMBDA_CP","PHP_Token_LAMBDA_OP","PHP_Token_LINE","PHP_Token_LIST","PHP_Token_LNUMBER","PHP_Token_LOGICAL_AND","PHP_Token_LOGICAL_OR","PHP_Token_LOGICAL_XOR","PHP_Token_LT","PHP_Token_METHOD_C","PHP_Token_MINUS","PHP_Token_MINUS_EQUAL","PHP_Token_MOD_EQUAL","PHP_Token_MULT","PHP_Token_MUL_EQUAL","PHP_Token_NAMESPACE","PHP_Token_NEW","PHP_Token_NS_C","PHP_Token_NS_SEPARATOR","PHP_Token_NULLSAFE_OBJECT_OPERATOR","PHP_Token_NUM_STRING","PHP_Token_OBJECT_CAST","PHP_Token_OBJECT_OPERATOR","PHP_Token_ONUMBER","PHP_Token_OPEN_BRACKET","PHP_Token_OPEN_CURLY","PHP_Token_OPEN_SQUARE","PHP_Token_OPEN_TAG","PHP_Token_OPEN_TAG_WITH_ECHO","PHP_Token_OR_EQUAL","PHP_Token_PAAMAYIM_NEKUDOTAYIM","PHP_Token_PERCENT","PHP_Token_PIPE","PHP_Token_PLUS","PHP_Token_PLUS_EQUAL","PHP_Token_POW","PHP_Token_POW_EQUAL","PHP_Token_PRINT","PHP_Token_PRIVATE","PHP_Token_PROTECTED","PHP_Token_PUBLIC","PHP_Token_QUESTION_MARK","PHP_Token_REQUIRE","PHP_Token_REQUIRE_ONCE","PHP_Token_RETURN","PHP_Token_SEMICOLON","PHP_Token_SHAPE","PHP_Token_SL","PHP_Token_SL_EQUAL","PHP_Token_SPACESHIP","PHP_Token_SR","PHP_Token_SR_EQUAL","PHP_Token_START_HEREDOC","PHP_Token_STATIC","PHP_Token_STRING","PHP_Token_STRING_CAST","PHP_Token_STRING_VARNAME","PHP_Token_SUPER","PHP_Token_SWITCH","PHP_Token_Stream","PHP_Token_Stream_CachingFactory","PHP_Token_THROW","PHP_Token_TILDE","PHP_Token_TRAIT","PHP_Token_TRAIT_C","PHP_Token_TRY","PHP_Token_TYPE","PHP_Token_TYPELIST_GT","PHP_Token_TYPELIST_LT","PHP_Token_UNSET","PHP_Token_UNSET_CAST","PHP_Token_USE","PHP_Token_USE_FUNCTION","PHP_Token_VAR","PHP_Token_VARIABLE","PHP_Token_WHERE","PHP_Token_WHILE","PHP_Token_WHITESPACE","PHP_Token_XHP_ATTRIBUTE","PHP_Token_XHP_CATEGORY","PHP_Token_XHP_CATEGORY_LABEL","PHP_Token_XHP_CHILDREN","PHP_Token_XHP_LABEL","PHP_Token_XHP_REQUIRED","PHP_Token_XHP_TAG_GT","PHP_Token_XHP_TAG_LT","PHP_Token_XHP_TEXT","PHP_Token_XOR_EQUAL","PHP_Token_YIELD","PHP_Token_YIELD_FROM","PhpAmqpLib\\Channel\\AMQPChannel","PhpAmqpLib\\Channel\\AbstractChannel","PhpAmqpLib\\Connection\\AMQPConnection","PhpAmqpLib\\Connection\\AMQPLazyConnection","PhpAmqpLib\\Connection\\AMQPLazySocketConnection","PhpAmqpLib\\Connection\\AMQPSSLConnection","PhpAmqpLib\\Connection\\AMQPSocketConnection","PhpAmqpLib\\Connection\\AMQPStreamConnection","PhpAmqpLib\\Connection\\AbstractConnection","PhpAmqpLib\\Exception\\AMQPBasicCancelException","PhpAmqpLib\\Exception\\AMQPChannelException","PhpAmqpLib\\Exception\\AMQPConnectionException","PhpAmqpLib\\Exception\\AMQPException","PhpAmqpLib\\Exception\\AMQPExceptionInterface","PhpAmqpLib\\Exception\\AMQPIOException","PhpAmqpLib\\Exception\\AMQPIOWaitException","PhpAmqpLib\\Exception\\AMQPInvalidArgumentException","PhpAmqpLib\\Exception\\AMQPLogicException","PhpAmqpLib\\Exception\\AMQPOutOfBoundsException","PhpAmqpLib\\Exception\\AMQPOutOfRangeException","PhpAmqpLib\\Exception\\AMQPProtocolChannelException","PhpAmqpLib\\Exception\\AMQPProtocolConnectionException","PhpAmqpLib\\Exception\\AMQPProtocolException","PhpAmqpLib\\Exception\\AMQPRuntimeException","PhpAmqpLib\\Exception\\AMQPTimeoutException","PhpAmqpLib\\Helper\\DebugHelper","PhpAmqpLib\\Helper\\MiscHelper","PhpAmqpLib\\Helper\\Protocol\\MethodMap080","PhpAmqpLib\\Helper\\Protocol\\MethodMap091","PhpAmqpLib\\Helper\\Protocol\\Protocol080","PhpAmqpLib\\Helper\\Protocol\\Protocol091","PhpAmqpLib\\Helper\\Protocol\\Wait080","PhpAmqpLib\\Helper\\Protocol\\Wait091","PhpAmqpLib\\Message\\AMQPMessage","PhpAmqpLib\\Wire\\AMQPAbstractCollection","PhpAmqpLib\\Wire\\AMQPArray","PhpAmqpLib\\Wire\\AMQPDecimal","PhpAmqpLib\\Wire\\AMQPReader","PhpAmqpLib\\Wire\\AMQPTable","PhpAmqpLib\\Wire\\AMQPWriter","PhpAmqpLib\\Wire\\AbstractClient","PhpAmqpLib\\Wire\\Constants080","PhpAmqpLib\\Wire\\Constants091","PhpAmqpLib\\Wire\\GenericContent","PhpAmqpLib\\Wire\\IO\\AbstractIO","PhpAmqpLib\\Wire\\IO\\SocketIO","PhpAmqpLib\\Wire\\IO\\StreamIO","PhpCss\\Ast","PhpCss\\Ast\\Selector","PhpCss\\Ast\\Selector\\Combinator","PhpCss\\Ast\\Selector\\Combinator\\Child","PhpCss\\Ast\\Selector\\Combinator\\Descendant","PhpCss\\Ast\\Selector\\Combinator\\Follower","PhpCss\\Ast\\Selector\\Combinator\\Next","PhpCss\\Ast\\Selector\\Group","PhpCss\\Ast\\Selector\\Sequence","PhpCss\\Ast\\Selector\\Simple","PhpCss\\Ast\\Selector\\Simple\\Attribute","PhpCss\\Ast\\Selector\\Simple\\ClassName","PhpCss\\Ast\\Selector\\Simple\\Id","PhpCss\\Ast\\Selector\\Simple\\PseudoClass","PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Language","PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Position","PhpCss\\Ast\\Selector\\Simple\\PseudoElement","PhpCss\\Ast\\Selector\\Simple\\Type","PhpCss\\Ast\\Selector\\Simple\\Universal","PhpCss\\Ast\\Visitor","PhpCss\\Ast\\Visitor\\Css","PhpCss\\Ast\\Visitor\\Explain","PhpCss\\Ast\\Visitor\\Overload","PhpCss\\Ast\\Visitor\\Xpath","PhpCss\\Exception","PhpCss\\Exception\\InvalidCharacter","PhpCss\\Exception\\NotConvertable","PhpCss\\Exception\\Parser","PhpCss\\Exception\\Token","PhpCss\\Exception\\TokenMismatch","PhpCss\\Exception\\UnexpectedEndOfFile","PhpCss\\Exception\\UnknownPseudoClass","PhpCss\\Exception\\UnknownPseudoElement","PhpCss\\Parser","PhpCss\\Parser\\Attribute","PhpCss\\Parser\\PseudoClass","PhpCss\\Parser\\Sequence","PhpCss\\Parser\\Standard","PhpCss\\Parser\\Text","PhpCss\\Scanner","PhpCss\\Scanner\\Patterns","PhpCss\\Scanner\\Status","PhpCss\\Scanner\\Status\\Selector","PhpCss\\Scanner\\Status\\Selector\\Attribute","PhpCss\\Scanner\\Status\\Text\\Double","PhpCss\\Scanner\\Status\\Text\\Single","PhpCss\\Scanner\\Token","Prophecy\\Argument","Prophecy\\Argument\\ArgumentsWildcard","Prophecy\\Argument\\Token\\AnyValueToken","Prophecy\\Argument\\Token\\AnyValuesToken","Prophecy\\Argument\\Token\\ApproximateValueToken","Prophecy\\Argument\\Token\\ArrayCountToken","Prophecy\\Argument\\Token\\ArrayEntryToken","Prophecy\\Argument\\Token\\ArrayEveryEntryToken","Prophecy\\Argument\\Token\\CallbackToken","Prophecy\\Argument\\Token\\ExactValueToken","Prophecy\\Argument\\Token\\IdenticalValueToken","Prophecy\\Argument\\Token\\LogicalAndToken","Prophecy\\Argument\\Token\\LogicalNotToken","Prophecy\\Argument\\Token\\ObjectStateToken","Prophecy\\Argument\\Token\\StringContainsToken","Prophecy\\Argument\\Token\\TokenInterface","Prophecy\\Argument\\Token\\TypeToken","Prophecy\\Call\\Call","Prophecy\\Call\\CallCenter","Prophecy\\Comparator\\ClosureComparator","Prophecy\\Comparator\\Factory","Prophecy\\Comparator\\ProphecyComparator","Prophecy\\Doubler\\CachedDoubler","Prophecy\\Doubler\\ClassPatch\\ClassPatchInterface","Prophecy\\Doubler\\ClassPatch\\DisableConstructorPatch","Prophecy\\Doubler\\ClassPatch\\HhvmExceptionPatch","Prophecy\\Doubler\\ClassPatch\\KeywordPatch","Prophecy\\Doubler\\ClassPatch\\MagicCallPatch","Prophecy\\Doubler\\ClassPatch\\ProphecySubjectPatch","Prophecy\\Doubler\\ClassPatch\\ReflectionClassNewInstancePatch","Prophecy\\Doubler\\ClassPatch\\SplFileInfoPatch","Prophecy\\Doubler\\ClassPatch\\TraversablePatch","Prophecy\\Doubler\\DoubleInterface","Prophecy\\Doubler\\Doubler","Prophecy\\Doubler\\Generator\\ClassCodeGenerator","Prophecy\\Doubler\\Generator\\ClassCreator","Prophecy\\Doubler\\Generator\\ClassMirror","Prophecy\\Doubler\\Generator\\Node\\ArgumentNode","Prophecy\\Doubler\\Generator\\Node\\ClassNode","Prophecy\\Doubler\\Generator\\Node\\MethodNode","Prophecy\\Doubler\\Generator\\ReflectionInterface","Prophecy\\Doubler\\LazyDouble","Prophecy\\Doubler\\NameGenerator","Prophecy\\Exception\\Call\\UnexpectedCallException","Prophecy\\Exception\\Doubler\\ClassCreatorException","Prophecy\\Exception\\Doubler\\ClassMirrorException","Prophecy\\Exception\\Doubler\\ClassNotFoundException","Prophecy\\Exception\\Doubler\\DoubleException","Prophecy\\Exception\\Doubler\\DoublerException","Prophecy\\Exception\\Doubler\\InterfaceNotFoundException","Prophecy\\Exception\\Doubler\\MethodNotExtendableException","Prophecy\\Exception\\Doubler\\MethodNotFoundException","Prophecy\\Exception\\Doubler\\ReturnByReferenceException","Prophecy\\Exception\\Exception","Prophecy\\Exception\\InvalidArgumentException","Prophecy\\Exception\\Prediction\\AggregateException","Prophecy\\Exception\\Prediction\\FailedPredictionException","Prophecy\\Exception\\Prediction\\NoCallsException","Prophecy\\Exception\\Prediction\\PredictionException","Prophecy\\Exception\\Prediction\\UnexpectedCallsCountException","Prophecy\\Exception\\Prediction\\UnexpectedCallsException","Prophecy\\Exception\\Prophecy\\MethodProphecyException","Prophecy\\Exception\\Prophecy\\ObjectProphecyException","Prophecy\\Exception\\Prophecy\\ProphecyException","Prophecy\\PhpDocumentor\\ClassAndInterfaceTagRetriever","Prophecy\\PhpDocumentor\\ClassTagRetriever","Prophecy\\PhpDocumentor\\LegacyClassTagRetriever","Prophecy\\PhpDocumentor\\MethodTagRetrieverInterface","Prophecy\\Prediction\\CallPrediction","Prophecy\\Prediction\\CallTimesPrediction","Prophecy\\Prediction\\CallbackPrediction","Prophecy\\Prediction\\NoCallsPrediction","Prophecy\\Prediction\\PredictionInterface","Prophecy\\Promise\\CallbackPromise","Prophecy\\Promise\\PromiseInterface","Prophecy\\Promise\\ReturnArgumentPromise","Prophecy\\Promise\\ReturnPromise","Prophecy\\Promise\\ThrowPromise","Prophecy\\Prophecy\\MethodProphecy","Prophecy\\Prophecy\\ObjectProphecy","Prophecy\\Prophecy\\ProphecyInterface","Prophecy\\Prophecy\\ProphecySubjectInterface","Prophecy\\Prophecy\\Revealer","Prophecy\\Prophecy\\RevealerInterface","Prophecy\\Prophet","Prophecy\\Util\\ExportUtil","Prophecy\\Util\\StringUtil","Psr\\Http\\Message\\MessageInterface","Psr\\Http\\Message\\RequestInterface","Psr\\Http\\Message\\ResponseInterface","Psr\\Http\\Message\\ServerRequestInterface","Psr\\Http\\Message\\StreamInterface","Psr\\Http\\Message\\UploadedFileInterface","Psr\\Http\\Message\\UriInterface","Psr\\Log\\AbstractLogger","Psr\\Log\\InvalidArgumentException","Psr\\Log\\LogLevel","Psr\\Log\\LoggerAwareInterface","Psr\\Log\\LoggerAwareTrait","Psr\\Log\\LoggerInterface","Psr\\Log\\LoggerTrait","Psr\\Log\\NullLogger","Psr\\Log\\Test\\DummyTest","Psr\\Log\\Test\\LoggerInterfaceTest","SebastianBergmann\\CodeCoverage\\CodeCoverage","SebastianBergmann\\CodeCoverage\\CoveredCodeNotExecutedException","SebastianBergmann\\CodeCoverage\\Driver\\Driver","SebastianBergmann\\CodeCoverage\\Driver\\HHVM","SebastianBergmann\\CodeCoverage\\Driver\\PHPDBG","SebastianBergmann\\CodeCoverage\\Driver\\Xdebug","SebastianBergmann\\CodeCoverage\\Exception","SebastianBergmann\\CodeCoverage\\Filter","SebastianBergmann\\CodeCoverage\\InvalidArgumentException","SebastianBergmann\\CodeCoverage\\MissingCoversAnnotationException","SebastianBergmann\\CodeCoverage\\Node\\AbstractNode","SebastianBergmann\\CodeCoverage\\Node\\Builder","SebastianBergmann\\CodeCoverage\\Node\\Directory","SebastianBergmann\\CodeCoverage\\Node\\File","SebastianBergmann\\CodeCoverage\\Node\\Iterator","SebastianBergmann\\CodeCoverage\\Report\\Clover","SebastianBergmann\\CodeCoverage\\Report\\Crap4j","SebastianBergmann\\CodeCoverage\\Report\\Html\\Dashboard","SebastianBergmann\\CodeCoverage\\Report\\Html\\Directory","SebastianBergmann\\CodeCoverage\\Report\\Html\\Facade","SebastianBergmann\\CodeCoverage\\Report\\Html\\File","SebastianBergmann\\CodeCoverage\\Report\\Html\\Renderer","SebastianBergmann\\CodeCoverage\\Report\\PHP","SebastianBergmann\\CodeCoverage\\Report\\Text","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Coverage","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Directory","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Facade","SebastianBergmann\\CodeCoverage\\Report\\Xml\\File","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Method","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Node","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Project","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Report","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Tests","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Totals","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Unit","SebastianBergmann\\CodeCoverage\\RuntimeException","SebastianBergmann\\CodeCoverage\\UnintentionallyCoveredCodeException","SebastianBergmann\\CodeCoverage\\Util","SebastianBergmann\\CodeUnitReverseLookup\\Wizard","SebastianBergmann\\Comparator\\ArrayComparator","SebastianBergmann\\Comparator\\Comparator","SebastianBergmann\\Comparator\\ComparisonFailure","SebastianBergmann\\Comparator\\DOMNodeComparator","SebastianBergmann\\Comparator\\DateTimeComparator","SebastianBergmann\\Comparator\\DoubleComparator","SebastianBergmann\\Comparator\\ExceptionComparator","SebastianBergmann\\Comparator\\Factory","SebastianBergmann\\Comparator\\MockObjectComparator","SebastianBergmann\\Comparator\\NumericComparator","SebastianBergmann\\Comparator\\ObjectComparator","SebastianBergmann\\Comparator\\ResourceComparator","SebastianBergmann\\Comparator\\ScalarComparator","SebastianBergmann\\Comparator\\SplObjectStorageComparator","SebastianBergmann\\Comparator\\TypeComparator","SebastianBergmann\\Diff\\Chunk","SebastianBergmann\\Diff\\Diff","SebastianBergmann\\Diff\\Differ","SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence","SebastianBergmann\\Diff\\LCS\\MemoryEfficientImplementation","SebastianBergmann\\Diff\\LCS\\TimeEfficientImplementation","SebastianBergmann\\Diff\\Line","SebastianBergmann\\Diff\\Parser","SebastianBergmann\\Environment\\Console","SebastianBergmann\\Environment\\Runtime","SebastianBergmann\\Exporter\\Exporter","SebastianBergmann\\GlobalState\\Blacklist","SebastianBergmann\\GlobalState\\CodeExporter","SebastianBergmann\\GlobalState\\Exception","SebastianBergmann\\GlobalState\\Restorer","SebastianBergmann\\GlobalState\\RuntimeException","SebastianBergmann\\GlobalState\\Snapshot","SebastianBergmann\\ObjectEnumerator\\Enumerator","SebastianBergmann\\ObjectEnumerator\\Exception","SebastianBergmann\\ObjectEnumerator\\InvalidArgumentException","SebastianBergmann\\RecursionContext\\Context","SebastianBergmann\\RecursionContext\\Exception","SebastianBergmann\\RecursionContext\\InvalidArgumentException","SebastianBergmann\\ResourceOperations\\ResourceOperations","SebastianBergmann\\Version","Swagger\\Analyser","Swagger\\Analysis","Swagger\\Annotations\\AbstractAnnotation","Swagger\\Annotations\\Contact","Swagger\\Annotations\\Definition","Swagger\\Annotations\\Delete","Swagger\\Annotations\\ExternalDocumentation","Swagger\\Annotations\\Get","Swagger\\Annotations\\Head","Swagger\\Annotations\\Header","Swagger\\Annotations\\Info","Swagger\\Annotations\\Items","Swagger\\Annotations\\License","Swagger\\Annotations\\Operation","Swagger\\Annotations\\Options","Swagger\\Annotations\\Parameter","Swagger\\Annotations\\Patch","Swagger\\Annotations\\Path","Swagger\\Annotations\\Post","Swagger\\Annotations\\Property","Swagger\\Annotations\\Put","Swagger\\Annotations\\Response","Swagger\\Annotations\\Schema","Swagger\\Annotations\\SecurityScheme","Swagger\\Annotations\\Swagger","Swagger\\Annotations\\Tag","Swagger\\Annotations\\Xml","Swagger\\Context","Swagger\\Logger","Swagger\\Processors\\AugmentDefinitions","Swagger\\Processors\\AugmentOperations","Swagger\\Processors\\AugmentParameters","Swagger\\Processors\\AugmentProperties","Swagger\\Processors\\BuildPaths","Swagger\\Processors\\CleanUnmerged","Swagger\\Processors\\HandleReferences","Swagger\\Processors\\InheritProperties","Swagger\\Processors\\MergeIntoSwagger","Swagger\\Serializer","Swagger\\StaticAnalyser","Swagger\\Util","Symfony\\Component\\Finder\\Comparator\\Comparator","Symfony\\Component\\Finder\\Comparator\\DateComparator","Symfony\\Component\\Finder\\Comparator\\NumberComparator","Symfony\\Component\\Finder\\Exception\\AccessDeniedException","Symfony\\Component\\Finder\\Exception\\ExceptionInterface","Symfony\\Component\\Finder\\Finder","Symfony\\Component\\Finder\\Glob","Symfony\\Component\\Finder\\Iterator\\CustomFilterIterator","Symfony\\Component\\Finder\\Iterator\\DateRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\DepthRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\ExcludeDirectoryFilterIterator","Symfony\\Component\\Finder\\Iterator\\FileTypeFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilecontentFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilenameFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilterIterator","Symfony\\Component\\Finder\\Iterator\\MultiplePcreFilterIterator","Symfony\\Component\\Finder\\Iterator\\PathFilterIterator","Symfony\\Component\\Finder\\Iterator\\RecursiveDirectoryIterator","Symfony\\Component\\Finder\\Iterator\\SizeRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\SortableIterator","Symfony\\Component\\Finder\\SplFileInfo","Symfony\\Component\\Yaml\\Dumper","Symfony\\Component\\Yaml\\Escaper","Symfony\\Component\\Yaml\\Exception\\DumpException","Symfony\\Component\\Yaml\\Exception\\ExceptionInterface","Symfony\\Component\\Yaml\\Exception\\ParseException","Symfony\\Component\\Yaml\\Exception\\RuntimeException","Symfony\\Component\\Yaml\\Inline","Symfony\\Component\\Yaml\\Parser","Symfony\\Component\\Yaml\\Tag\\TaggedValue","Symfony\\Component\\Yaml\\Unescaper","Symfony\\Component\\Yaml\\Yaml","Text_Template","WP_Mock","WP_Mock\\Action","WP_Mock\\Action_Responder","WP_Mock\\EventManager","WP_Mock\\Filter","WP_Mock\\Filter_Responder","WP_Mock\\Functions","WP_Mock\\Handler","WP_Mock\\Hook","WP_Mock\\HookedCallback","WP_Mock\\HookedCallbackResponder","WP_Mock\\Loader","WP_Mock\\Matcher\\FuzzyObject","WP_Mock\\ReturnSequence","WP_Mock\\Tools\\Constraints\\ExpectationsMet","WP_Mock\\Tools\\Constraints\\IsEqualHtml","WP_Mock\\Tools\\TestCase","Webmozart\\Assert\\Assert","phpDocumentor\\Reflection\\DocBlock","phpDocumentor\\Reflection\\DocBlockFactory","phpDocumentor\\Reflection\\DocBlockFactoryInterface","phpDocumentor\\Reflection\\DocBlock\\Description","phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","phpDocumentor\\Reflection\\DocBlock\\Serializer","phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","phpDocumentor\\Reflection\\DocBlock\\Tag","phpDocumentor\\Reflection\\DocBlock\\TagFactory","phpDocumentor\\Reflection\\DocBlock\\Tags\\Author","phpDocumentor\\Reflection\\DocBlock\\Tags\\BaseTag","phpDocumentor\\Reflection\\DocBlock\\Tags\\Covers","phpDocumentor\\Reflection\\DocBlock\\Tags\\Deprecated","phpDocumentor\\Reflection\\DocBlock\\Tags\\Example","phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod","phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\Strategy","phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter","phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter\\PassthroughFormatter","phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic","phpDocumentor\\Reflection\\DocBlock\\Tags\\Link","phpDocumentor\\Reflection\\DocBlock\\Tags\\Method","phpDocumentor\\Reflection\\DocBlock\\Tags\\Param","phpDocumentor\\Reflection\\DocBlock\\Tags\\Property","phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyRead","phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyWrite","phpDocumentor\\Reflection\\DocBlock\\Tags\\Return_","phpDocumentor\\Reflection\\DocBlock\\Tags\\See","phpDocumentor\\Reflection\\DocBlock\\Tags\\Since","phpDocumentor\\Reflection\\DocBlock\\Tags\\Source","phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws","phpDocumentor\\Reflection\\DocBlock\\Tags\\Uses","phpDocumentor\\Reflection\\DocBlock\\Tags\\Var_","phpDocumentor\\Reflection\\DocBlock\\Tags\\Version","phpDocumentor\\Reflection\\Element","phpDocumentor\\Reflection\\ExampleFinder","phpDocumentor\\Reflection\\File","phpDocumentor\\Reflection\\Fqsen","phpDocumentor\\Reflection\\FqsenResolver","phpDocumentor\\Reflection\\Location","phpDocumentor\\Reflection\\Project","phpDocumentor\\Reflection\\ProjectFactory","phpDocumentor\\Reflection\\Type","phpDocumentor\\Reflection\\TypeResolver","phpDocumentor\\Reflection\\Types\\Array_","phpDocumentor\\Reflection\\Types\\Boolean","phpDocumentor\\Reflection\\Types\\Callable_","phpDocumentor\\Reflection\\Types\\Compound","phpDocumentor\\Reflection\\Types\\Context","phpDocumentor\\Reflection\\Types\\ContextFactory","phpDocumentor\\Reflection\\Types\\Float_","phpDocumentor\\Reflection\\Types\\Integer","phpDocumentor\\Reflection\\Types\\Mixed","phpDocumentor\\Reflection\\Types\\Null_","phpDocumentor\\Reflection\\Types\\Object_","phpDocumentor\\Reflection\\Types\\Resource","phpDocumentor\\Reflection\\Types\\Scalar","phpDocumentor\\Reflection\\Types\\Self_","phpDocumentor\\Reflection\\Types\\Static_","phpDocumentor\\Reflection\\Types\\String_","phpDocumentor\\Reflection\\Types\\This","phpDocumentor\\Reflection\\Types\\Void_","stdClass","Exception","ErrorException","Closure","Generator","DateTime","DateTimeImmutable","DateTimeZone","DateInterval","DatePeriod","LibXMLError","SQLite3","SQLite3Stmt","SQLite3Result","CURLFile","DOMException","DOMStringList","DOMNameList","DOMImplementationList","DOMImplementationSource","DOMImplementation","DOMNode","DOMNameSpaceNode","DOMDocumentFragment","DOMDocument","DOMNodeList","DOMNamedNodeMap","DOMCharacterData","DOMAttr","DOMElement","DOMText","DOMComment","DOMTypeinfo","DOMUserDataHandler","DOMDomError","DOMErrorHandler","DOMLocator","DOMConfiguration","DOMCdataSection","DOMDocumentType","DOMNotation","DOMEntity","DOMEntityReference","DOMProcessingInstruction","DOMStringExtend","DOMXPath","finfo","LogicException","BadFunctionCallException","BadMethodCallException","DomainException","InvalidArgumentException","LengthException","OutOfRangeException","RuntimeException","OutOfBoundsException","OverflowException","RangeException","UnderflowException","UnexpectedValueException","RecursiveIteratorIterator","IteratorIterator","FilterIterator","RecursiveFilterIterator","CallbackFilterIterator","RecursiveCallbackFilterIterator","ParentIterator","LimitIterator","CachingIterator","RecursiveCachingIterator","NoRewindIterator","AppendIterator","InfiniteIterator","RegexIterator","RecursiveRegexIterator","EmptyIterator","RecursiveTreeIterator","ArrayObject","ArrayIterator","RecursiveArrayIterator","SplFileInfo","DirectoryIterator","FilesystemIterator","RecursiveDirectoryIterator","GlobIterator","SplFileObject","SplTempFileObject","SplDoublyLinkedList","SplQueue","SplStack","SplHeap","SplMinHeap","SplMaxHeap","SplPriorityQueue","SplFixedArray","SplObjectStorage","MultipleIterator","SessionHandler","__PHP_Incomplete_Class","php_user_filter","Directory","mysqli_sql_exception","mysqli_driver","mysqli","mysqli_warning","mysqli_result","mysqli_stmt","PDOException","PDO","PDOStatement","PDORow","PharException","Phar","PharData","PharFileInfo","ReflectionException","Reflection","ReflectionFunctionAbstract","ReflectionFunction","ReflectionParameter","ReflectionMethod","ReflectionClass","ReflectionObject","ReflectionProperty","ReflectionExtension","ReflectionZendExtension","SimpleXMLElement","SimpleXMLIterator","SNMP","SNMPException","SoapClient","SoapVar","SoapServer","SoapFault","SoapParam","SoapHeader","tidy","tidyNode","XMLReader","XMLWriter","XSLTProcessor","ZipArchive"]}