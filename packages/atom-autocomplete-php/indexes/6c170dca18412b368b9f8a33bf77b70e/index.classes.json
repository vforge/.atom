{"mapping":{"Doctrine\\Common\\Annotations\\Annotation":{"class":{"descriptions":{"short":"Annotations class.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":[],"docParameters":{"$data":{"type":"array","description":"Key-value for properties to be defined in this class."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationException":{"class":{"descriptions":{"short":"Description of AnnotationException","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationReader":{"class":{"descriptions":{"short":"A reader for docblock annotations.","long":"@author  Benjamin Eberlei <kontakt@beberlei.de>\n@author  Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author  Jonathan Wage <jonwage@gmail.com>\n@author  Roman Borschel <roman@code-factory.org>\n@author  Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$parser"],"docParameters":{"$parser":{"type":"DocParser","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":"Initializes a new AnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationRegistry":{"class":{"descriptions":{"short":"AnnotationRegistry.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attribute":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the attribute type during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attributes":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the types of all declared attributes during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Enum":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the available values during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser to ignore specific\nannotations during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\Required":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check if that attribute is required during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Target":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the annotation target during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\CachedReader":{"class":{"descriptions":{"short":"A cache aware annotation reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cache"],"optionals":["$debug"],"docParameters":{"$reader":{"type":"Reader","description":""},"$cache":{"type":"Cache","description":""},"$debug":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\DocLexer":{"class":{"descriptions":{"short":"Simple lexer for docblock annotations.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\DocParser":{"class":{"descriptions":{"short":"A parser for docblock annotations.","long":"It is strongly discouraged to change the default annotation parsing process.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a new DocParser.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\FileCacheReader":{"class":{"descriptions":{"short":"File cache reader for annotations.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cacheDir"],"optionals":["$debug","$umask"],"docParameters":{"$reader":{"type":"Reader","description":""},"$cacheDir":{"type":"string","description":""},"$debug":{"type":"boolean","description":""}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\IndexedReader":{"class":{"descriptions":{"short":"Allows the reader to be used in-place of Doctrine's reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader"],"optionals":[],"docParameters":{"$reader":{"type":"Reader","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\PhpParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Reader":{"class":{"descriptions":{"short":"Interface for annotation readers.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\SimpleAnnotationReader":{"class":{"descriptions":{"short":"Simple Annotation Reader.","long":"This annotation reader is intended to be used in projects where you have\nfull-control over all annotations that are available."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":"Initializes a new SimpleAnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\TokenParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contents"],"optionals":[],"docParameters":{"$contents":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Lexer\\AbstractLexer":{"class":{"descriptions":{"short":"Base class for writing simple lexers, i.e. for creating small DSLs.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\AbstractUpdateAction":{"class":{"descriptions":{"short":"Base class for things that can be sent to the update api (Document and\nScript).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Aggregation\\AbstractAggregation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\AbstractSimpleAggregation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Avg":{"class":{"descriptions":{"short":"Class Avg","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Cardinality":{"class":{"descriptions":{"short":"Class Cardinality","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\DateHistogram":{"class":{"descriptions":{"short":"Class DateHistogram","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$interval"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the name of the field on which to perform the aggregation"},"$interval":{"type":"int","description":"the interval by which documents will be bucketed"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\DateRange":{"class":{"descriptions":{"short":"Class DateRange","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ExtendedStats":{"class":{"descriptions":{"short":"Class ExtendedStats","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Filter":{"class":{"descriptions":{"short":"Class Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Filters":{"class":{"descriptions":{"short":"Class Filters","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GeoDistance":{"class":{"descriptions":{"short":"Class GeoDistance","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$origin"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name if this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"},"$origin":{"type":"string|array","description":"the point from which distances will be calculated"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GeohashGrid":{"class":{"descriptions":{"short":"Class GeohashGrid","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\GlobalAggregation":{"class":{"descriptions":{"short":"Class GlobalAggregation","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Histogram":{"class":{"descriptions":{"short":"Class Histogram","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field","$interval"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the name of the field on which to perform the aggregation"},"$interval":{"type":"int","description":"the interval by which documents will be bucketed"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\IpRange":{"class":{"descriptions":{"short":"Class IpRange","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Max":{"class":{"descriptions":{"short":"Class Max","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Min":{"class":{"descriptions":{"short":"Class Min","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Missing":{"class":{"descriptions":{"short":"Class Missing","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Nested":{"class":{"descriptions":{"short":"Class Nested","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$path"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$path":{"type":"string","description":"the nested path for this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Range":{"class":{"descriptions":{"short":"Class Range","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ReverseNested":{"class":{"descriptions":{"short":"Reversed Nested Aggregation","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$path"],"docParameters":{"$name":{"type":"string","description":"The name of this aggregation"},"$path":{"type":"string","description":"Optional path to the nested object for this aggregation. Defaults to the root of the main document."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ScriptedMetric":{"class":{"descriptions":{"short":"Class ScriptedMetric","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$initScript","$mapScript","$combineScript","$reduceScript"],"docParameters":{"$name":{"type":"string","description":"the name if this aggregation"},"$initScript":{"type":"string|null","description":"Executed prior to any collection of documents"},"$mapScript":{"type":"string|null","description":"Executed once per document collected"},"$combineScript":{"type":"string|null","description":"Executed once on each shard after document collection is complete"},"$reduceScript":{"type":"string|null","description":"Executed once on the coordinating node after all shards have returned their results"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Stats":{"class":{"descriptions":{"short":"Class Stats","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Sum":{"class":{"descriptions":{"short":"Class Sum","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\Terms":{"class":{"descriptions":{"short":"Class Terms","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\TopHits":{"class":{"descriptions":{"short":"Class TopHits","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Aggregation\\ValueCount":{"class":{"descriptions":{"short":"Class ValueCount","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"the name of this aggregation"},"$field":{"type":"string","description":"the field on which to perform this aggregation"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$opType","$metadata","$source"],"docParameters":{"$opType":{"type":"string","description":""},"$metadata":{"type":"array","description":""},"$source":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\AbstractDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\CreateDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\DeleteDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\IndexDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Action\\UpdateDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\Elastica\\Document|\\Elastica\\Script","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\Response":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseData","$action","$opType"],"optionals":[],"docParameters":{"$responseData":{"type":"array|string","description":""},"$action":{"type":"\\Elastica\\Bulk\\Action","description":""},"$opType":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Bulk\\ResponseSet":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$bulkResponses"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":""},"$bulkResponses":{"type":"\\Elastica\\Bulk\\Response[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Client":{"class":{"descriptions":{"short":"Client to connect the the elasticsearch server","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config","$callback"],"docParameters":{"$config":{"type":"array","description":"OPTIONAL Additional config options"},"$callback":{"type":"callback","description":"OPTIONAL Callback function which can be used to be notified about errors (for example connection down)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new Elastica client","long":""},"deprecated":false}}}},"Elastica\\Cluster":{"class":{"descriptions":{"short":"Cluster informations for elasticsearch","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Connection client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a cluster object","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health":{"class":{"descriptions":{"short":"Elastic cluster health.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"The Elastica client."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health\\Index":{"class":{"descriptions":{"short":"Wraps status information for an index.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$data"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the index."},"$data":{"type":"array","description":"The index health data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Health\\Shard":{"class":{"descriptions":{"short":"Wraps status information for a shard.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$shardNumber","$data"],"optionals":[],"docParameters":{"$shardNumber":{"type":"int","description":"The shard index\/number."},"$data":{"type":"array","description":"The shard health data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Cluster\\Settings":{"class":{"descriptions":{"short":"Cluster settings","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Connection client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a cluster object","long":""},"deprecated":false}}}},"Elastica\\Connection":{"class":{"descriptions":{"short":"Elastica connection instance to an elasticasearch node","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$params"],"docParameters":{"$params":{"type":"array","description":"OPTIONAL Connection params: host, port, transport, timeout. All are optional"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new connection object. A connection is enabled by default","long":""},"deprecated":false}}}},"Elastica\\Connection\\ConnectionPool":{"class":{"descriptions":{"short":"Description of ConnectionPool","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connections","$strategy"],"optionals":["$callback"],"docParameters":{"$connections":{"type":"array","description":""},"$strategy":{"type":"\\Elastica\\Connection\\Strategy\\StrategyInterface","description":""},"$callback":{"type":"callback","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Connection\\Strategy\\CallbackStrategy":{"class":{"descriptions":{"short":"Description of CallbackStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"Closure","description":""}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Connection\\Strategy\\RoundRobin":{"class":{"descriptions":{"short":"Description of RoundRobin","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\Simple":{"class":{"descriptions":{"short":"Description of SimpleStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\StrategyFactory":{"class":{"descriptions":{"short":"Description of StrategyFactory","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Connection\\Strategy\\StrategyInterface":{"class":{"descriptions":{"short":"Description of AbstractStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Exception\\BulkException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\ResponseException":{"class":{"descriptions":{"short":"Bulk Response exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseSet"],"optionals":[],"docParameters":{"$responseSet":{"type":"\\Elastica\\Bulk\\ResponseSet","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\Response\\ActionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Bulk\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Bulk\\UdpException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ClientException":{"class":{"descriptions":{"short":"Client exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ConnectionException":{"class":{"descriptions":{"short":"Connection exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$request","$response"],"docParameters":{"$message":{"type":"string","description":"Message"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\GuzzleException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$guzzleException"],"optionals":["$request","$response"],"docParameters":{"$guzzleException":{"type":"\\GuzzleHttp\\Exception\\TransferException","description":""},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\HttpException":{"class":{"descriptions":{"short":"Connection exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$error"],"optionals":["$request","$response"],"docParameters":{"$error":{"type":"string","description":"Error"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\MemcacheException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$request","$response"],"docParameters":{"$message":{"type":"string","description":"Message"},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\Connection\\ThriftException":{"class":{"descriptions":{"short":"Transport exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$thriftException"],"optionals":["$request","$response"],"docParameters":{"$thriftException":{"type":"\\Thrift\\Exception\\TException","description":""},"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ElasticsearchException":{"class":{"descriptions":{"short":"Elasticsearch exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$code","$error"],"optionals":[],"docParameters":{"$code":{"type":"int","description":"Error code"},"$error":{"type":"string","description":"Error message from elasticsearch"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs elasticsearch exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"General Elastica exception interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Exception\\InvalidException":{"class":{"descriptions":{"short":"Invalid exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\JSONParseException":{"class":{"descriptions":{"short":"JSON Parse exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\NotFoundException":{"class":{"descriptions":{"short":"Not found exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\NotImplementedException":{"class":{"descriptions":{"short":"Not implemented exception","long":"Is thrown if a function or feature is not implemented yet"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\PartialShardFailureException":{"class":{"descriptions":{"short":"Partial shard failure exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$response"],"optionals":[],"docParameters":{"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\QueryBuilderException":{"class":{"descriptions":{"short":"QueryBuilder exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Exception\\ResponseException":{"class":{"descriptions":{"short":"Response exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$response"],"optionals":[],"docParameters":{"$request":{"type":"\\Elastica\\Request","description":""},"$response":{"type":"\\Elastica\\Response","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Exception","long":""},"deprecated":false}}}},"Elastica\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"Client exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Facet\\AbstractFacet":{"class":{"descriptions":{"short":"Abstract facet object. Should be extended by all facet types","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\DateHistogram":{"class":{"descriptions":{"short":"Implements the Date Histogram facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Filter":{"class":{"descriptions":{"short":"Filter facet","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\GeoCluster":{"class":{"descriptions":{"short":"Implements the Geo Cluster facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\GeoDistance":{"class":{"descriptions":{"short":"Implements the Geo Distance facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Histogram":{"class":{"descriptions":{"short":"Implements the Histogram facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Query":{"class":{"descriptions":{"short":"Query facet","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Range":{"class":{"descriptions":{"short":"Implements the range facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Statistical":{"class":{"descriptions":{"short":"Implements the statistical facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\Terms":{"class":{"descriptions":{"short":"Implements the terms facet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Facet\\TermsStats":{"class":{"descriptions":{"short":"Implements the statistical facet on a per term basis.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"The name of the facet."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a Facet object.","long":""},"deprecated":false}}}},"Elastica\\Filter\\AbstractFilter":{"class":{"descriptions":{"short":"Abstract filter object. Should be extended by all filter types","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\AbstractGeoDistance":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$location":{"type":"array|string","description":"Location as array or geohash: array('lat' => 48.86, 'lon' => 2.35) OR 'drm3btev3e86'"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create GeoDistance object","long":""},"deprecated":false}}}},"Elastica\\Filter\\AbstractGeoShape":{"class":{"descriptions":{"short":"geo_shape filter","long":"Filter pre-indexed shape definitions"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\AbstractMulti":{"class":{"descriptions":{"short":"Multi Abstract filter object. Should be extended by filter types composed of an array of sub filters","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\BoolAnd":{"class":{"descriptions":{"short":"And Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\BoolNot":{"class":{"descriptions":{"short":"Not Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filter"],"optionals":[],"docParameters":{"$filter":{"type":"\\Elastica\\Filter\\AbstractFilter","description":"Filter object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates Not filter query","long":""},"deprecated":false}}}},"Elastica\\Filter\\BoolOr":{"class":{"descriptions":{"short":"Or Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\Exists":{"class":{"descriptions":{"short":"Exists query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field"],"optionals":[],"docParameters":{"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct exists filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoBoundingBox":{"class":{"descriptions":{"short":"Geo bounding box filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$coordinates"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$coordinates":{"type":"array","description":"Array with top left coordinate as first and bottom right coordinate as second element"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct BoundingBoxFilter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoDistance":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location","$distance"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$location":{"type":"array|string","description":"Location as array or geohash: array('lat' => 48.86, 'lon' => 2.35) OR 'drm3btev3e86'"},"$distance":{"type":"string","description":"Distance"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Create GeoDistance object","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoDistanceRange":{"class":{"descriptions":{"short":"Geo distance filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":["$ranges"],"docParameters":{"$key":{"type":"string","description":""},"$location":{"type":"array|string","description":""},"$ranges":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoPolygon":{"class":{"descriptions":{"short":"Geo polygon filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$points"],"optionals":[],"docParameters":{"$key":{"type":"string","description":"Key"},"$points":{"type":"array","description":"Points making up polygon"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct polygon filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoShapePreIndexed":{"class":{"descriptions":{"short":"geo_shape filter for pre-indexed shapes","long":"Filter pre-indexed shape definitions"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$indexedId","$indexedType","$indexedIndex","$indexedPath"],"optionals":[],"docParameters":{"$path":{"type":"string","description":"The path\/field of the shape searched"},"$indexedId":{"type":"string","description":"Id of the pre-indexed shape"},"$indexedType":{"type":"string","description":"Type of the pre-indexed shape"},"$indexedIndex":{"type":"string","description":"Index of the pre-indexed shape"},"$indexedPath":{"type":"string","description":"Path of the pre-indexed shape"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct geo_shape filter with a pre-indexed shape","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeoShapeProvided":{"class":{"descriptions":{"short":"geo_shape filter or provided shapes","long":"Filter provided shape definitions"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$coordinates"],"optionals":["$shapeType"],"docParameters":{"$path":{"type":"string","description":"The path\/field of the shape searched"},"$coordinates":{"type":"array","description":"Points making up the shape"},"$shapeType":{"type":"string","description":"Type of the geo_shape: point, envelope, linestring, polygon, multipoint or multipolygon"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct geo_shape filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\GeohashCell":{"class":{"descriptions":{"short":"Class GeohashCell","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$location"],"optionals":["$precision","$neighbors"],"docParameters":{"$key":{"type":"string","description":"The field on which to filter"},"$location":{"type":"array|string","description":"Location as coordinates array or geohash string ['lat' => 40.3, 'lon' => 45.2]"},"Integer":{"type":"$precision","description":"length of geohash prefix or distance (3, or \"50m\")"},"$neighbors":{"type":"bool","description":"If true, filters cells next to the given cell."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\HasChild":{"class":{"descriptions":{"short":"Returns parent documents having child docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Filter\\AbstractFilter","description":"Query string or a Elastica\\Query object or a filter"},"$type":{"type":"string|\\Elastica\\Type","description":"Child document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\HasParent":{"class":{"descriptions":{"short":"Returns child documents having parent docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$type"],"optionals":[],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Filter\\AbstractFilter","description":"Query string or a Query object or a filter"},"$type":{"type":"string|\\Elastica\\Type","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasParent filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Ids":{"class":{"descriptions":{"short":"Ids Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$ids"],"docParameters":{"$type":{"type":"string|\\Elastica\\Type","description":"Type to filter on"},"$ids":{"type":"array","description":"List of ids"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates filter object","long":""},"deprecated":false}}}},"Elastica\\Filter\\Indices":{"class":{"descriptions":{"short":"Class Indices","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filter","$indices"],"optionals":[],"docParameters":{"$filter":{"type":"AbstractFilter","description":"filter which will be applied to docs in the specified indices"},"$indices":{"type":"mixed[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Filter\\Limit":{"class":{"descriptions":{"short":"Limit Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$limit"],"optionals":[],"docParameters":{"$limit":{"type":"int","description":"Limit"}},"throws":[],"return":{"type":"\\Elastica\\Filter\\Limit","description":""},"descriptions":{"short":"Construct limit filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\MatchAll":{"class":{"descriptions":{"short":"Match all filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates match all filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Missing":{"class":{"descriptions":{"short":"Missing Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field"],"docParameters":{"$field":{"type":"string","description":"OPTIONAL"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct missing filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Nested":{"class":{"descriptions":{"short":"Nested filter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Filter\\NumericRange":{"class":{"descriptions":{"short":"Numeric Range Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct range filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Prefix":{"class":{"descriptions":{"short":"Prefix filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field","$prefix"],"docParameters":{"$field":{"type":"string","description":"Field name"},"$prefix":{"type":"string","description":"Prefix string"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates prefix filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Query":{"class":{"descriptions":{"short":"Query filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$query":{"type":"array|\\Elastica\\Query\\AbstractQuery","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct query filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Range":{"class":{"descriptions":{"short":"Range Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct range filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Regexp":{"class":{"descriptions":{"short":"Regexp filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$field","$regexp","$options"],"docParameters":{"$field":{"type":"string","description":"Field name"},"$regexp":{"type":"string","description":"Regular expression"},"$options":{"type":"array","description":"Regular expression options"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Create Regexp object","long":""},"deprecated":false}}}},"Elastica\\Filter\\Script":{"class":{"descriptions":{"short":"Script filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$script"],"docParameters":{"$script":{"type":"array|string|\\Elastica\\Script","description":"OPTIONAL Script"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct script filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Term":{"class":{"descriptions":{"short":"Term query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$term"],"docParameters":{"$term":{"type":"array","description":"Term array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct term filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Terms":{"class":{"descriptions":{"short":"Terms filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$terms"],"docParameters":{"$key":{"type":"string","description":"Terms key"},"$terms":{"type":"array","description":"Terms values"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates terms filter","long":""},"deprecated":false}}}},"Elastica\\Filter\\Type":{"class":{"descriptions":{"short":"Type Filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$typeName"],"docParameters":{"$typeName":{"type":"string","description":"Type name"}},"throws":[],"return":{"type":"\\Elastica\\Filter\\Type","description":""},"descriptions":{"short":"Construct Type Filter","long":""},"deprecated":false}}}},"Elastica\\Index":{"class":{"descriptions":{"short":"Elastica index object","long":"Handles reads, deletes and configurations of an index"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$name"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"},"$name":{"type":"string","description":"Index name"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new index object","long":"All the communication to and from an index goes of this object"},"deprecated":false}}}},"Elastica\\Index\\Settings":{"class":{"descriptions":{"short":"Elastica index settings object","long":"All settings listed in the update settings API (http:\/\/www.elasticsearch.org\/guide\/reference\/api\/admin-indices-update-settings.html)\ncan be changed on a running indices. To make changes like the merge policy (http:\/\/www.elasticsearch.org\/guide\/reference\/index-modules\/merge.html)\nthe index has to be closed first and reopened after the call"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Index\\Stats":{"class":{"descriptions":{"short":"Elastica index stats object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Index\\Status":{"class":{"descriptions":{"short":"Elastica index status object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\JSON":{"class":{"descriptions":{"short":"Elastica JSON tools","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Log":{"class":{"descriptions":{"short":"Elastica log object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$log"],"docParameters":{"String":{"type":"string|bool","description":"to set a specific file for logging"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Inits log object","long":""},"deprecated":false}}}},"Elastica\\Multi\\ResultSet":{"class":{"descriptions":{"short":"Elastica multi search result set\nList of result sets for each search request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$searches"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":""},"$searches":{"type":"array|\\Elastica\\Search[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs ResultSet object","long":""},"deprecated":false}}}},"Elastica\\Multi\\Search":{"class":{"descriptions":{"short":"Elastica multi search","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs search object","long":""},"deprecated":false}}}},"Elastica\\Node":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$client"],"optionals":[],"docParameters":{"$name":{"type":"string","description":"Node name"},"$client":{"type":"\\Elastica\\Client","description":"Node object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a new node object","long":""},"deprecated":false}}}},"Elastica\\Node\\Info":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$params"],"docParameters":{"$node":{"type":"\\Elastica\\Node","description":"Node object"},"$params":{"type":"array","description":"List of params to return. Can be: settings, os, process, jvm, thread_pool, network, transport, http"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create new info object for node","long":""},"deprecated":false}}}},"Elastica\\Node\\Stats":{"class":{"descriptions":{"short":"Elastica cluster node object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\Elastica\\Node","description":"Elastica node object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create new stats for node","long":""},"deprecated":false}}}},"Elastica\\Param":{"class":{"descriptions":{"short":"Class to handle params","long":"This function can be used to handle params for queries, filter, facets"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Percolator":{"class":{"descriptions":{"short":"Percolator class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct new percolator","long":""},"deprecated":false}}}},"Elastica\\Query":{"class":{"descriptions":{"short":"Elastica query object","long":"Creates different types of queries"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$query":{"type":"array|\\Elastica\\Query\\AbstractQuery","description":"OPTIONAL Query object (default = null)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a query object","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder":{"class":{"descriptions":{"short":"Query Builder","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version"],"docParameters":{"$version":{"type":"Version","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder\\DSL":{"class":{"descriptions":{"short":"DSL Interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Aggregation":{"class":{"descriptions":{"short":"elasticsearch aggregation DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\DSL\\Suggest":{"class":{"descriptions":{"short":"elasticsearch suggesters DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Facade":{"class":{"descriptions":{"short":"Facade for a specific DSL object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsl","$version"],"optionals":[],"docParameters":{"$dsl":{"type":"DSL","description":""},"$version":{"type":"Version","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\QueryBuilder\\Version":{"class":{"descriptions":{"short":"Abstract Version class","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version090":{"class":{"descriptions":{"short":"elasticsearch 0.9 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version100":{"class":{"descriptions":{"short":"elasticsearch 1.0 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version110":{"class":{"descriptions":{"short":"elasticsearch 1.1 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version120":{"class":{"descriptions":{"short":"elasticsearch 1.2 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version130":{"class":{"descriptions":{"short":"elasticsearch 1.3 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\QueryBuilder\\Version\\Version140":{"class":{"descriptions":{"short":"elasticsearch 1.4 DSL","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\AbstractQuery":{"class":{"descriptions":{"short":"Abstract query object. Should be extended by all query types.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Boosting":{"class":{"descriptions":{"short":"Class Boosting","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Builder":{"class":{"descriptions":{"short":"Query Builder.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$string"],"docParameters":{"$string":{"type":"string","description":"JSON encoded string to use as query."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Query\\Common":{"class":{"descriptions":{"short":"Class Common","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$query","$cutoffFrequency"],"optionals":[],"docParameters":{"$field":{"type":"string","description":"the field on which to query"},"$query":{"type":"string","description":"the query string"},"$cutoffFrequency":{"type":"float","description":"percentage in decimal form (.001 == 0.1%)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Query\\ConstantScore":{"class":{"descriptions":{"short":"Constant score query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$filter"],"docParameters":{"$filter":{"type":"null|\\Elastica\\Filter\\AbstractFilter|array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct constant score query","long":""},"deprecated":false}}}},"Elastica\\Query\\DisMax":{"class":{"descriptions":{"short":"DisMax query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Filtered":{"class":{"descriptions":{"short":"Filtered query. Needs a query and a filter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query","$filter"],"docParameters":{"$query":{"type":"\\Elastica\\Query\\AbstractQuery","description":"OPTIONAL Query object"},"$filter":{"type":"\\Elastica\\Filter\\AbstractFilter","description":"OPTIONAL Filter object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a filtered query","long":""},"deprecated":false}}}},"Elastica\\Query\\FunctionScore":{"class":{"descriptions":{"short":"Class FunctionScore","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Fuzzy":{"class":{"descriptions":{"short":"Fuzzy query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$value"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$value":{"type":"string","description":"String to search for"}},"throws":[],"return":{"type":"\\Elastica\\Query\\Fuzzy","description":"Current object"},"descriptions":{"short":"Construct a fuzzy query","long":""},"deprecated":false}}}},"Elastica\\Query\\FuzzyLikeThis":{"class":{"descriptions":{"short":"Fuzzy Like This query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\HasChild":{"class":{"descriptions":{"short":"Returns parent documents having child docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild Query","long":""},"deprecated":false}}}},"Elastica\\Query\\HasParent":{"class":{"descriptions":{"short":"Returns child documents having parent docs matching the query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$type"],"optionals":[],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct HasChild Query","long":""},"deprecated":false}}}},"Elastica\\Query\\Ids":{"class":{"descriptions":{"short":"Ids Query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$ids"],"docParameters":{"$type":{"type":"string|\\Elastica\\Type","description":"Type to filter on"},"$ids":{"type":"array","description":"List of ids"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates filter object","long":""},"deprecated":false}}}},"Elastica\\Query\\Match":{"class":{"descriptions":{"short":"Match query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MatchAll":{"class":{"descriptions":{"short":"Match all query. Returns all results","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates match all query","long":""},"deprecated":false}}}},"Elastica\\Query\\MatchPhrase":{"class":{"descriptions":{"short":"Match Phrase query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MatchPhrasePrefix":{"class":{"descriptions":{"short":"Match Phrase Prefix query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MoreLikeThis":{"class":{"descriptions":{"short":"More Like This query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\MultiMatch":{"class":{"descriptions":{"short":"Multi Match","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Nested":{"class":{"descriptions":{"short":"Nested query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Query\\Prefix":{"class":{"descriptions":{"short":"Prefix query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$prefix"],"docParameters":{"$prefix":{"type":"array","description":"OPTIONAL Calls setRawPrefix with the given $prefix array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs the Prefix query object","long":""},"deprecated":false}}}},"Elastica\\Query\\QueryString":{"class":{"descriptions":{"short":"QueryString query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$queryString"],"docParameters":{"$queryString":{"type":"string","description":"OPTIONAL Query string for object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates query string object. Calls setQuery with argument","long":""},"deprecated":false}}}},"Elastica\\Query\\Range":{"class":{"descriptions":{"short":"Range query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fieldName","$args"],"docParameters":{"$fieldName":{"type":"string","description":"Field name"},"$args":{"type":"array","description":"Field arguments"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Query\\Regexp":{"class":{"descriptions":{"short":"Regexp query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$value","$boost"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Regexp key"},"$value":{"type":"string","description":"OPTIONAL Regexp value"},"$boost":{"type":"float","description":"OPTIONAL Boost value (default = 1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct regexp query","long":""},"deprecated":false}}}},"Elastica\\Query\\Simple":{"class":{"descriptions":{"short":"Simple query\nPure php array query. Can be used to create any not existing type of query.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":[],"docParameters":{"$query":{"type":"array","description":"Query array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a query based on an array","long":""},"deprecated":false}}}},"Elastica\\Query\\SimpleQueryString":{"class":{"descriptions":{"short":"Class SimpleQueryString","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$fields"],"docParameters":{"$query":{"type":"string","description":""},"$fields":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Query\\Term":{"class":{"descriptions":{"short":"Term query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$term"],"docParameters":{"$term":{"type":"array","description":"OPTIONAL Calls setTerm with the given $term array"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs the Term query object","long":""},"deprecated":false}}}},"Elastica\\Query\\Terms":{"class":{"descriptions":{"short":"Terms query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$terms"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Terms key"},"$terms":{"type":"array","description":"OPTIONAL Terms list"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct terms query","long":""},"deprecated":false}}}},"Elastica\\Query\\TopChildren":{"class":{"descriptions":{"short":"Runs the child query with an estimated hits size, and out of the hit docs, aggregates it into parent docs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$type"],"docParameters":{"$query":{"type":"string|\\Elastica\\Query|\\Elastica\\Query\\AbstractQuery","description":""},"$type":{"type":"string","description":"Parent document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct topChildren query","long":""},"deprecated":false}}}},"Elastica\\Query\\Wildcard":{"class":{"descriptions":{"short":"Wildcard query","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$key","$value","$boost"],"docParameters":{"$key":{"type":"string","description":"OPTIONAL Wildcard key"},"$value":{"type":"string","description":"OPTIONAL Wildcard value"},"$boost":{"type":"float","description":"OPTIONAL Boost value (default = 1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct wildcard query","long":""},"deprecated":false}}}},"Elastica\\Request":{"class":{"descriptions":{"short":"Elastica Request object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$method","$data","$query","$connection"],"docParameters":{"$path":{"type":"string","description":"Request path"},"$method":{"type":"string","description":"OPTIONAL Request method (use const's) (default = self::GET)"},"$data":{"type":"array","description":"OPTIONAL Data array"},"$query":{"type":"array","description":"OPTIONAL Query params"},"$connection":{"type":"Connection","description":""}},"throws":[],"return":{"type":"\\Elastica\\Request","description":"OPTIONAL Connection object"},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Rescore\\AbstractRescore":{"class":{"descriptions":{"short":"Abstract rescore object. Should be extended by all rescorers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Rescore\\Query":{"class":{"descriptions":{"short":"Query Rescore","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$query"],"docParameters":{"$rescoreQuery":{"type":"string|\\Elastica\\Query\\AbstractQuery","description":""},"$query":{"type":"string|\\Elastica\\Query\\AbstractQuery","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Elastica\\Response":{"class":{"descriptions":{"short":"Elastica Response object","long":"Stores query time, and result array -> is given to result set, returned by ..."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$responseString"],"optionals":["$responseStatus"],"docParameters":{"$responseString":{"type":"string|array","description":"Response string (json)"},"$responseStatus":{"type":"int","description":"http status code"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Elastica\\Result":{"class":{"descriptions":{"short":"Elastica result item","long":"Stores all information from a result"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$hit"],"optionals":[],"docParameters":{"$hit":{"type":"array","description":"Hit data"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs a single results object","long":""},"deprecated":false}}}},"Elastica\\ResultSet":{"class":{"descriptions":{"short":"Elastica result set","long":"List of all hits that are returned for a search on elasticsearch\nResult set implements iterator"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$query"],"optionals":[],"docParameters":{"$response":{"type":"\\Elastica\\Response","description":"Response object"},"$query":{"type":"\\Elastica\\Query","description":"Query object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs ResultSet object","long":""},"deprecated":false}}}},"Elastica\\ScanAndScroll":{"class":{"descriptions":{"short":"scan and scroll object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$search"],"optionals":["$expiryTime","$sizePerShard"],"docParameters":{"$search":{"type":"Search","description":""},"$expiryTime":{"type":"string","description":""},"$sizePerShard":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs scroll iterator object","long":""},"deprecated":false}}}},"Elastica\\Script":{"class":{"descriptions":{"short":"Script objects, containing script internals","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$script"],"optionals":["$params","$lang","$id"],"docParameters":{"$script":{"type":"string","description":""},"$params":{"type":"array|null","description":""},"$lang":{"type":"string|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\ScriptFields":{"class":{"descriptions":{"short":"Container for scripts as fields","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$scripts"],"docParameters":{"$scripts":{"type":"\\Elastica\\Script[]|array","description":"OPTIONAL"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Search":{"class":{"descriptions":{"short":"Elastica search object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs search object","long":""},"deprecated":false}}}},"Elastica\\SearchableInterface":{"class":{"descriptions":{"short":"Elastica searchable interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Snapshot":{"class":{"descriptions":{"short":"Class Snapshot","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"Client","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Status":{"class":{"descriptions":{"short":"Elastica general status","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"Client object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructs Status object","long":""},"deprecated":false}}}},"Elastica\\Suggest":{"class":{"descriptions":{"short":"Class Suggest","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$suggestion"],"docParameters":{"$suggestion":{"type":"AbstractSuggest","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\AbstractSuggest":{"class":{"descriptions":{"short":"Class AbstractSuggestion","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\CandidateGenerator\\AbstractCandidateGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Elastica\\Suggest\\CandidateGenerator\\DirectGenerator":{"class":{"descriptions":{"short":"Class DirectGenerator","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field"],"optionals":[],"docParameters":{"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\Phrase":{"class":{"descriptions":{"short":"Class Phrase","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Suggest\\Term":{"class":{"descriptions":{"short":"Class Term","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$field"],"optionals":[],"docParameters":{"$name":{"type":"string","description":""},"$field":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Elastica\\Transport\\AbstractTransport":{"class":{"descriptions":{"short":"Elastica Abstract Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Guzzle":{"class":{"descriptions":{"short":"Elastica Guzzle Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Http":{"class":{"descriptions":{"short":"Elastica Http Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\HttpAdapter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection","$httpAdapter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Https":{"class":{"descriptions":{"short":"Elastica Http Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Memcache":{"class":{"descriptions":{"short":"Elastica Memcache Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Transport\\Thrift":{"class":{"descriptions":{"short":"Elastica Thrift Transport object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$connection"],"docParameters":{"$connection":{"type":"\\Elastica\\Connection","description":"Connection object"}},"throws":{"\\Elastica\\Exception\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct transport","long":""},"deprecated":false}}}},"Elastica\\Type":{"class":{"descriptions":{"short":"Elastica type object","long":"elasticsearch has for every types as a substructure. This object\nrepresents a type inside a context\nThe hierarchy is as following: client -> index -> type -> document"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index","$name"],"optionals":[],"docParameters":{"$index":{"type":"\\Elastica\\Index","description":"Index Object"},"$name":{"type":"string","description":"Type name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Creates a new type object inside the given index","long":""},"deprecated":false}}}},"Elastica\\Type\\AbstractType":{"class":{"descriptions":{"short":"Abstract helper class to implement search indices based on models.","long":"This abstract model should help creating search index and a subtype\nwith some easy config entries that are overloaded.\n\nThe following variables have to be set:\n- $_indexName\n- $_typeName\n\nThe following variables can be set for additional configuration\n- $_mapping: Value type mapping for the given type\n- $_indexParams: Parameters for the index"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$client"],"docParameters":{"$client":{"type":"\\Elastica\\Client","description":"OPTIONAL Client object"}},"throws":{"\\Elastica\\Exception\\InvalidException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Creates index object with client connection","long":"Reads index and type name from protected vars _indexName and _typeName.\nHas to be set in child class"},"deprecated":false}}}},"Elastica\\Type\\Mapping":{"class":{"descriptions":{"short":"Elastica Mapping object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$properties"],"docParameters":{"$type":{"type":"\\Elastica\\Type","description":"OPTIONAL Type object"},"$properties":{"type":"array","description":"OPTIONAL Properties"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct Mapping","long":""},"deprecated":false}}}},"Elastica\\Util":{"class":{"descriptions":{"short":"Elastica tools","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Appendable":{"class":{"descriptions":{"short":"Allow an object to be appendable to a FluentDOM\\Element","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Attribute":{"class":{"descriptions":{"short":"FluentDOM\\Attribute extends PHPs DOMAttr class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\CdataSection":{"class":{"descriptions":{"short":"FluentDOM\\CdataSection extends PHPs DOMCdataSection class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Comment":{"class":{"descriptions":{"short":"FluentDOM\\Comment extends PHPs DOMComment class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Constraints":{"class":{"descriptions":{"short":"Abstract utility class that provides several constraints\/validations","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Document":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":{"$version":{"type":"string","description":""},"$encoding":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\DocumentFragment":{"class":{"descriptions":{"short":"FluentDOM\\DocumentFrag,ent extends PHPs DOMDocumentFragment class. It adds some namespace handling and\nsome standard interfaces for convenience.","long":"Be aware that a fragment is empty after it was appended."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Element":{"class":{"descriptions":{"short":"FluentDOM\\Element extends PHPs DOMDocument class. It adds some generic namespace handling on\nthe document level and registers extended Node classes for convenience.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exception":{"class":{"descriptions":{"short":"FluentDOM\\Exception is an interface implemented by FluentDOM specific exceptions.","long":"This allow to catch them without handling each specifically."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\InvalidArgument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argumentName"],"optionals":["$expectedTypes"],"docParameters":{"$argumentName":{"type":"string","description":""},"$expectedTypes":{"type":"string|string[]","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidFragmentLoader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSerializer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contentType","$class"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\InvalidSource\\TypeFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource\\TypeString":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\InvalidSource\\Variable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source","$contentType"],"optionals":[],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Exceptions\\LoadingError\\EmptyResult":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\EmptySource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\Json":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$code"],"optionals":[],"docParameters":{"$code":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\LoadingError\\Libxml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$error"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Exceptions\\NoSerializer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contentType"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\HHVM\\Properties":{"class":{"descriptions":{"short":"This trait is a workaround for the current implementation of DOMNode properties in\nHHVM","long":"https:\/\/github.com\/facebook\/hhvm\/issues\/4100"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Iterators\\ElementIterator":{"class":{"descriptions":{"short":"Iterator class for FluentDOM\\Element objects","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\IndexIterator":{"class":{"descriptions":{"short":"A abstract superclass for index based iterators. The object\nusing this iterator needs to implement \\Countable and\nallow to get the current item by an zero based index position.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\MapIterator":{"class":{"descriptions":{"short":"An iterator that calls a map function for the current value before returning it.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$traversable","$callback"],"optionals":[],"docParameters":{"$traversable":{"type":"\\Traversable","description":""},"$callback":{"type":"callable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Iterators\\NodesIterator":{"class":{"descriptions":{"short":"FluentDOM\\Query\\Iterator is the Iterator class for FluentDOM\\Query objects","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$owner"],"optionals":[],"docParameters":{"$owner":{"type":"\\Countable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loadable":{"class":{"descriptions":{"short":"FluentDOM\\Loadable describes an interface for loader objects that can be used to load\na data source into a DOM document.","long":"The class can be attached to a FluentDOM\\Query objects using the FluentDOM\\Loaders class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Html":{"class":{"descriptions":{"short":"Load a DOM document from a xml string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\JSONx":{"class":{"descriptions":{"short":"A lazy load group for php class loaders","long":"This defines loaders for PHP classes like SimpleXML"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json":{"class":{"descriptions":{"short":"Index for json format loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Json\\BadgerFish":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\JsonDOM":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$depth"],"docParameters":{"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the loader for a json string.","long":"The string will be decoded into a php variable structure and convert into a DOM document\nIf options contains is self::OPTION_VERBOSE, the DOMNodes will all have\njson:type and json:name attributes. Even if the information could be read from the structure."},"deprecated":false}}}},"FluentDOM\\Loader\\Json\\JsonML":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\Rayfish":{"class":{"descriptions":{"short":"Load a DOM document from a json string or file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Json\\SimpleXML":{"class":{"descriptions":{"short":"Load a DOM document from a string or file that was the result of a\nSimpleXMLElement encoded as JSON.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Lazy":{"class":{"descriptions":{"short":"A list of lazy initialized loaders.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$loaders"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Libxml\\Errors":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Options":{"class":{"descriptions":{"short":"Generalized option handling for loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$callbacks"],"docParameters":{"$options":{"type":"array|\\Traversable|Options","description":""},"$callbacks":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\PHP":{"class":{"descriptions":{"short":"A lazy load group for php class loaders","long":"This defines loaders for PHP classes like SimpleXML"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\PHP\\PDO":{"class":{"descriptions":{"short":"Load a PDO result","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$depth"],"docParameters":{"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the loader for a json string.","long":"The string will be decoded into a php variable structure and convert into a DOM document\nIf options contains is self::OPTION_VERBOSE, the DOMNodes will all have\njson:type and json:name attributes. Even if the information could be read from the structure."},"deprecated":false}}}},"FluentDOM\\Loader\\PHP\\SimpleXml":{"class":{"descriptions":{"short":"Load a DOM document from a SimpleXML element","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$contentType"],"optionals":["$selection"],"docParameters":{"$document":{"type":"\\DOMDocument","description":""},"$contentType":{"type":"string","description":""},"$selection":{"type":"\\DOMNode|\\Traversable|array|NULL","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Standard":{"class":{"descriptions":{"short":"Encapsulates the standard loaders (html, xml, json)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$list"],"docParameters":{"$list":{"type":"array|\\Traversable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the a list of loaders if provided.","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Supports":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Supports\\Json":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Supports\\Libxml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Text":{"class":{"descriptions":{"short":"Index for text format loaders","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Loader\\Text\\CSV":{"class":{"descriptions":{"short":"Load a CSV file","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loader\\Xml":{"class":{"descriptions":{"short":"Load a DOM document from a xml file or string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Loaders":{"class":{"descriptions":{"short":"FluentDOM\\Loaders is a list of loaders that allow to import data sources into\na DOM document.","long":"The list is iterated until a valid document is returned by the loader"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$list"],"docParameters":{"$list":{"type":"array|\\Traversable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the a list of loaders if provided.","long":""},"deprecated":false}}}},"FluentDOM\\Node\\ChildNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ChildNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\MutationMacro":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode":{"class":{"descriptions":{"short":"Interface NonDocumentTypeChildNode","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\NonDocumentTypeChildNode\\Properties":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode":{"class":{"descriptions":{"short":"Interface ParentNode","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\ParentNode\\Properties":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\QuerySelector":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\QuerySelector\\Implementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\StringCast":{"class":{"descriptions":{"short":"Cast a DOMNode into a string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\WholeText":{"class":{"descriptions":{"short":"Add the `replaceWholeText()` method. To the text node classes.","long":"https:\/\/www.w3.org\/TR\/DOM-Level-3-Core\/core.html#Text3-replaceWholeText"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Node\\Xpath":{"class":{"descriptions":{"short":"Add a `evaluate()` method to execute an Xpath expression in the context of the node and\nmake the node a functor.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Nodes":{"class":{"descriptions":{"short":"Implements an extended replacement for DOMNodeList.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$source","$contentType"],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"null|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Builder":{"class":{"descriptions":{"short":"Create list of nodes for a FluentDOM\\Nodes object from different values","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nodes"],"optionals":[],"docParameters":{"$nodes":{"type":"Nodes","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Compare":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$xpath"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":{"$version":{"type":"string","description":""},"$encoding":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator\\Node":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$node"],"optionals":[],"docParameters":{"$document":{"type":"Document","description":""},"$node":{"type":"\\DOMElement","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Creator\\Nodes":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$traversable"],"optionals":["$map"],"docParameters":{"$traversable":{"type":"array|\\Traversable","description":""},"$map":{"type":"callable","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Fetcher":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nodes"],"optionals":[],"docParameters":{"$nodes":{"type":"Nodes","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Nodes\\Modifier":{"class":{"descriptions":{"short":"Provides several extended manipulation functions for a DOMNode\/DOMElement.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\ProcessingInstruction":{"class":{"descriptions":{"short":"FluentDOM\\ProcessingInstruction extends PHPs DOMProcessingInstruction class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\QualifiedName":{"class":{"descriptions":{"short":"Create an object from a string that contains a valid Qualified XML name.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query":{"class":{"descriptions":{"short":"FluentDOM\\Query implements a jQuery like replacement for DOMNodeList","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$source","$contentType"],"docParameters":{"$source":{"type":"mixed","description":""},"$contentType":{"type":"null|string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Attributes":{"class":{"descriptions":{"short":"FluentDOM\\Query\\Attributes is used for the FluentDOM\\Query:attr property, providing an array like interface\nto the attributes of the selected nodes(s)","long":"It acts like the FluentDOM\\Query::attr() method. If you read attributes it uses the first\nselected node. Write actions are applied to all matches element nodes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fd"],"optionals":[],"docParameters":{"$fd":{"type":"Query","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the FluentDOM instance for later use","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css":{"class":{"descriptions":{"short":"FluentDOMCss is used for the FluentDOM:css property, providing an array like interface\nto the css properties in the style attribute of the selected nodes(s)","long":"It acts like the FluentDOMStyle::css() method. If you read css properties it uses the first\nselected node. Write actions are applied to all matches element nodes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fd"],"optionals":[],"docParameters":{"$fd":{"type":"Query","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Store the FluentDOM instance for later use and decode the style string into an array","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css\\Properties":{"class":{"descriptions":{"short":"Provides an array access to a css style string. It is used to\nmodify the attribute values of style attributes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$styleString"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Query\\Css\\PropertyCompare":{"class":{"descriptions":{"short":"A functor that allows to compare two css property names.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Query\\Data":{"class":{"descriptions":{"short":"FluentDOM\\Data is used for the FluentDOM::data property and FluentDOM::data() method, providing an\ninterface html5 data properties of a node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMElement","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create object with attached element node.","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Factory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Serializer\\Factory\\Group":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$factories"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Html":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json":{"class":{"descriptions":{"short":"Serialize a DOM into a Json structure. This loader allows to save an imported Json back as JSON.","long":"Using this on a standard XML document will ignore a lot of data. Namespaces and Attributes\nare ignored, if here are two elements with the same name only the last will be in the output.\nIf an element has child elements, all text child nodes will be ignored.\n\nSee the other serializers, to keep this data.\n\nThis serializer recognizes attributes from the JsonDOM namespaces. If you import an JSON to a DOM\nin FluentDOM, the additional information is stored in these attributes (types, names, ...)\n\nHere is a example of an XML:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<json:json xmlns:json=\"urn:carica-json-dom.2013\">\n<boolean json:type=\"boolean\">true<\/boolean>\n<int json:type=\"number\">42<\/int>\n<null json:type=\"null\"\/>\n<string>Foo<\/string>\n<array json:type=\"array\">\n<_ json:type=\"number\">21<\/_>\n<\/array>\n<acomplexname json:type=\"object\" json:name=\"a complex name\"\/>\n<\/json:json>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\BadgerFish":{"class":{"descriptions":{"short":"Serialize a DOM to BadgerFish Json: http:\/\/badgerfish.ning.com\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\JsonML":{"class":{"descriptions":{"short":"Serialize a DOM to JsonML: http:\/\/www.jsonml.org\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\RabbitFish":{"class":{"descriptions":{"short":"Serialize a DOM to RabbitFish Json: http:\/\/www.bramstein.com\/projects\/xsltjson\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Json\\Rayfish":{"class":{"descriptions":{"short":"Serialize a DOM to Rayfish Json: http:\/\/www.bramstein.com\/projects\/xsltjson\/","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":["$options","$depth"],"docParameters":{"$node":{"type":"\\DOMNode","description":""},"$options":{"type":"int","description":""},"$depth":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Serializer\\Xml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"\\DOMNode","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Text":{"class":{"descriptions":{"short":"FluentDOM\\Text extends PHPs DOMText class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\Transformer\\JSONx":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":[],"docParameters":{"$document":{"type":"\\DOMDocument","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Import a DOM document and use the JsonDOM rules to convert it into JSONx.","long":""},"deprecated":false}}}},"FluentDOM\\Transformer\\Namespaces\\Optimize":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document"],"optionals":["$namespaces"],"docParameters":{"$document":{"type":"\\DOMDocument","description":""},"$namespaces":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a namespace optimizer for the provided document. The provided\ndocument will be copied.","long":"The second argument allows to provide namespaces and prefixes. The\nkeys of the array are the namespace uri, the values are the prefixes.\n\nIf a namespace is not provided it is read from the source node.\n\nYou can use the same prefix for multiple namespace uris. Empty prefixes\nare possible (default namespace for an element).\n\nIt is highly recommend that you always use a non-empty prefix if the\nhere are attributes in that namespace. Attributes always need a prefix\nto make use of the namespace."},"deprecated":false}}}},"FluentDOM\\Transformer\\Namespaces\\Replace":{"class":{"descriptions":{"short":"Replace namespaces in a document, prefixes are copied, but might be optimized by\nlibxml.","long":"Attributes and Elements without a namespace get their prefix removed.\nA change from no namespace to a namespace will not affect attributes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$document","$namespaces"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FluentDOM\\XmlSerializable":{"class":{"descriptions":{"short":"FluentDOM\\XmlSerializable describes an interface for objects that can be serialized to\nand XML fragment (without document element and declaration).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\XmlSerialize":{"class":{"descriptions":{"short":"Standard implementation for FluentDOM\\XmlSerializable","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"FluentDOM\\Xpath":{"class":{"descriptions":{"short":"FluentDOM\\Xpath extends PHPs DOMXpath class. It disables the\nautomatic namespace registration by default and, throws notices for the query method.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dom"],"optionals":[],"docParameters":{"$dom":{"type":"\\DOMDocument","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"HHVM and some old PHP versions do not have a $document property by default\nAdd it is added if it was not found after executing parent constructor.","long":""},"deprecated":false}}}},"FluentDOM\\Xpath\\Transformer":{"class":{"descriptions":{"short":"Interface for objects that convert a (css) selector string into an XPath expression for objects that provide an xpath expression when cast to string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Client":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Client configuration settings."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Clients accept an array of constructor parameters.","long":"Here's an example of creating a client using a base_uri and an array of\ndefault request options to apply to each request:\n\n$client = new Client([\n'base_uri'        => 'http:\/\/www.foo.com\/1.0\/',\n'timeout'         => 0,\n'allow_redirects' => false,\n'proxy'           => '192.168.16.1:10'\n]);\n\nClient configuration settings include the following options:\n\n- handler: (callable) Function that transfers HTTP requests over the\nwire. The function is called with a Psr7\\Http\\Message\\RequestInterface\nand array of transfer options, and must return a\nGuzzleHttp\\Promise\\PromiseInterface that is fulfilled with a\nPsr7\\Http\\Message\\ResponseInterface on success. \"handler\" is a\nconstructor only option that cannot be overridden in per\/request\noptions. If no handler is provided, a default handler will be created\nthat enables all of the request options below by attaching all of the\ndefault middleware to the handler.\n- base_uri: (string|UriInterface) Base URI of the client that is merged\ninto relative URIs. Can be a string or instance of UriInterface.\n- **: any request option"},"deprecated":false}}}},"GuzzleHttp\\ClientInterface":{"class":{"descriptions":{"short":"Client interface for sending HTTP requests.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Cookie\\CookieJar":{"class":{"descriptions":{"short":"Cookie jar that stores cookies as an array","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$strictMode","$cookieArray"],"docParameters":{"$strictMode":{"type":"bool","description":"Set to true to throw exceptions when invalid cookies are added to the cookie jar."},"$cookieArray":{"type":"array","description":"Array of SetCookie objects or a hash of arrays that can be used with the SetCookie constructor"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\CookieJarInterface":{"class":{"descriptions":{"short":"Stores HTTP cookies.","long":"It extracts cookies from HTTP requests, and returns them in HTTP responses.\nCookieJarInterface instances automatically expire contained cookies when\nnecessary. Subclasses are also responsible for storing and retrieving\ncookies from a file, database, etc."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Cookie\\FileCookieJar":{"class":{"descriptions":{"short":"Persists non-session cookies using a JSON formatted file","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$cookieFile"],"optionals":["$storeSessionCookies"],"docParameters":{"$cookieFile":{"type":"string","description":"File to store the cookie data"},"$storeSessionCookies":{"type":"bool","description":"Set to true to store session cookies in the cookie jar."}},"throws":{"\\RuntimeException":"if the file cannot be found or created"},"return":{"type":"self","description":""},"descriptions":{"short":"Create a new FileCookieJar object","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\SessionCookieJar":{"class":{"descriptions":{"short":"Persists cookies in the client session","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sessionKey"],"optionals":["$storeSessionCookies"],"docParameters":{"$sessionKey":{"type":"string","description":"Session key name to store the cookie data in session"},"$storeSessionCookies":{"type":"bool","description":"Set to true to store session cookies in the cookie jar."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create a new SessionCookieJar object","long":""},"deprecated":false}}}},"GuzzleHttp\\Cookie\\SetCookie":{"class":{"descriptions":{"short":"Set-Cookie object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":{"$data":{"type":"array","description":"Array of cookie data provided by a Cookie parser"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\BadResponseException":{"class":{"descriptions":{"short":"Exception when an HTTP error occurs (4xx or 5xx error)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ClientException":{"class":{"descriptions":{"short":"Exception when a client error is encountered (4xx codes)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ConnectException":{"class":{"descriptions":{"short":"Exception thrown when a connection cannot be established.","long":"Note that no response is present for a ConnectException"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\GuzzleException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Exception\\RequestException":{"class":{"descriptions":{"short":"HTTP Request exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\SeekException":{"class":{"descriptions":{"short":"Exception thrown when a seek fails on a stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$pos","$msg"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\ServerException":{"class":{"descriptions":{"short":"Exception when a server error is encountered (5xx codes)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\TooManyRedirectsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$request"],"optionals":["$response","$previous","$handlerContext"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Exception\\TransferException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\HandlerStack":{"class":{"descriptions":{"short":"Creates a composed Guzzle handler function by stacking middlewares on top of\nan HTTP handler function.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$handler"],"docParameters":{"$handler":{"type":"callable","description":"Underlying HTTP handler."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlFactory":{"class":{"descriptions":{"short":"Creates curl resources from a request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$maxHandles"],"optionals":[],"docParameters":{"$maxHandles":{"type":"int","description":"Maximum number of idle handles."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlFactoryInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\CurlHandler":{"class":{"descriptions":{"short":"HTTP handler that uses cURL easy handles as a transport layer.","long":"When using the CurlHandler, custom curl options can be specified as an\nassociative array of curl option constants mapping to values in the\n**curl** key of the \"client\" key of the request."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"Array of options to use with the handler"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Accepts an associative array of options:","long":"- factory: Optional curl factory used to create cURL handles."},"deprecated":false}}}},"GuzzleHttp\\Handler\\CurlMultiHandler":{"class":{"descriptions":{"short":"Returns an asynchronous response using curl_multi_* functions.","long":"When using the CurlMultiHandler, custom curl options can be specified as an\nassociative array of curl option constants mapping to values in the\n**curl** key of the provided request options."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"This handler accepts the following options:","long":"- handle_factory: An optional factory  used to create curl handles\n- select_timeout: Optional timeout (in seconds) to block before timing\nout while selecting curl handles. Defaults to 1 second."},"deprecated":false}}}},"GuzzleHttp\\Handler\\EasyHandle":{"class":{"descriptions":{"short":"Represents a cURL easy handle and the data it populates.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\MockHandler":{"class":{"descriptions":{"short":"Handler that returns responses or throw exceptions from a queue.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$queue","$onFulfilled","$onRejected"],"docParameters":{"$queue":{"type":"array","description":""},"$onFulfilled":{"type":"callable","description":"Callback to invoke when the return value is fulfilled."},"$onRejected":{"type":"callable","description":"Callback to invoke when the return value is rejected."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"The passed in value must be an array of\n{@see Psr7\\Http\\Message\\ResponseInterface} objects, Exceptions,\ncallables, or Promises.","long":""},"deprecated":false}}}},"GuzzleHttp\\Handler\\Proxy":{"class":{"descriptions":{"short":"Provides basic proxies for handlers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Handler\\StreamHandler":{"class":{"descriptions":{"short":"HTTP handler that uses PHP's HTTP stream wrapper.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\MessageFormatter":{"class":{"descriptions":{"short":"Formats log messages using variable substitutions for requests, responses,\nand other transactional data.","long":"The following variable substitutions are supported:\n\n- {request}:        Full HTTP request message\n- {response}:       Full HTTP response message\n- {ts}:             ISO 8601 date in GMT\n- {date_iso_8601}   ISO 8601 date in GMT\n- {date_common_log} Apache common log date using the configured timezone.\n- {host}:           Host of the request\n- {method}:         Method of the request\n- {uri}:            URI of the request\n- {host}:           Host of the request\n- {version}:        Protocol version\n- {target}:         Request target of the request (path + query + fragment)\n- {hostname}:       Hostname of the machine that sent the request\n- {code}:           Status code of the response (if available)\n- {phrase}:         Reason phrase of the response  (if available)\n- {error}:          Any error messages (if available)\n- {req_header_*}:   Replace `*` with the lowercased name of a request header to add to the message\n- {res_header_*}:   Replace `*` with the lowercased name of a response header to add to the message\n- {req_headers}:    Request headers\n- {res_headers}:    Response headers\n- {req_body}:       Request body\n- {res_body}:       Response body"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$template"],"docParameters":{"$template":{"type":"string","description":"Log message template"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Middleware":{"class":{"descriptions":{"short":"Functions used to create and wrap handlers with handler middleware.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Pool":{"class":{"descriptions":{"short":"Sends and iterator of requests concurrently using a capped pool size.","long":"The pool will read from an iterator until it is cancelled or until the\niterator is consumed. When a request is yielded, the request is sent after\napplying the \"request_options\" request options (if provided in the ctor).\n\nWhen a function is yielded by the iterator, the function is provided the\n\"request_options\" array that should be merged on top of any existing\noptions, and the function MUST then return a wait-able promise."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$requests"],"optionals":["$config"],"docParameters":{"$client":{"type":"ClientInterface","description":"Client used to send the requests."},"$requests":{"type":"array|\\Iterator","description":"Requests or functions that return requests to send concurrently."},"$config":{"type":"array","description":"Associative array of options - concurrency: (int) Maximum number of requests to send concurrently - options: Array of request options to apply to each request. - fulfilled: (callable) Function to invoke when a request completes. - rejected: (callable) Function to invoke when a request is rejected."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\PrepareBodyMiddleware":{"class":{"descriptions":{"short":"Prepares requests that contain a body, adding the Content-Length,\nContent-Type, and Expect headers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nextHandler"],"optionals":[],"docParameters":{"$nextHandler":{"type":"callable","description":"Next handler to invoke."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\AggregateException":{"class":{"descriptions":{"short":"Exception thrown when too many errors occur in the some() or any() methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\CancellationException":{"class":{"descriptions":{"short":"Exception that is set as the reason for a promise that has been cancelled.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\Coroutine":{"class":{"descriptions":{"short":"Creates a promise that is resolved using a generator that yields values or\npromises (somewhat similar to C#'s async keyword).","long":"When called, the coroutine function will start an instance of the generator\nand returns a promise that is fulfilled with its final yielded value.\n\nControl is returned back to the generator when the yielded promise settles.\nThis can lead to less verbose code when doing lots of sequential async calls\nwith minimal processing in between.\n\nuse GuzzleHttp\\Promise;\n\nfunction createPromise($value) {\nreturn new Promise\\FulfilledPromise($value);\n}\n\n$promise = Promise\\coroutine(function () {\n$value = (yield createPromise('a'));\ntry {\n$value = (yield createPromise($value . 'b'));\n} catch (\\Exception $e) {\n\/\/ The promise was rejected.\n}\nyield $value . 'c';\n});\n\n\/\/ Outputs \"abc\"\n$promise->then(function ($v) { echo $v; });"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$generatorFn"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\EachPromise":{"class":{"descriptions":{"short":"Represents a promise that iterates over many promises and invokes\nside-effect functions in the process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterable"],"optionals":["$config"],"docParameters":{"$iterable":{"type":"mixed","description":"Promises or values to iterate."},"$config":{"type":"array","description":"Configuration options"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Configuration hash can include the following key value pairs:","long":"- fulfilled: (callable) Invoked when a promise fulfills. The function\nis invoked with three arguments: the fulfillment value, the index\nposition from the iterable list of the promise, and the aggregate\npromise that manages all of the promises. The aggregate promise may\nbe resolved from within the callback to short-circuit the promise.\n- rejected: (callable) Invoked when a promise is rejected. The\nfunction is invoked with three arguments: the rejection reason, the\nindex position from the iterable list of the promise, and the\naggregate promise that manages all of the promises. The aggregate\npromise may be resolved from within the callback to short-circuit\nthe promise.\n- concurrency: (integer) Pass this configuration option to limit the\nallowed number of outstanding concurrently executing promises,\ncreating a capped pool of promises. There is no limit by default."},"deprecated":false}}}},"GuzzleHttp\\Promise\\FulfilledPromise":{"class":{"descriptions":{"short":"A promise that has been fulfilled.","long":"Thenning off of this promise will invoke the onFulfilled callback\nimmediately and ignore other callbacks."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\Promise":{"class":{"descriptions":{"short":"Promises\/A+ implementation that avoids recursion when possible.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$waitFn","$cancelFn"],"docParameters":{"$waitFn":{"type":"callable","description":"Fn that when invoked resolves the promise."},"$cancelFn":{"type":"callable","description":"Fn that when invoked cancels the promise."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\PromiseInterface":{"class":{"descriptions":{"short":"A promise represents the eventual result of an asynchronous operation.","long":"The primary way of interacting with a promise is through its then method,\nwhich registers callbacks to receive either a promise\u00e2\u0080\u0099s eventual value or\nthe reason why the promise cannot be fulfilled."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Promise\\PromisorInterface":{"class":{"descriptions":{"short":"Interface used with classes that return a promise.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Promise\\RejectedPromise":{"class":{"descriptions":{"short":"A promise that has been rejected.","long":"Thenning off of this promise will invoke the onRejected callback\nimmediately and ignore other callbacks."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\RejectionException":{"class":{"descriptions":{"short":"A special exception that is thrown when waiting on a rejected promise.","long":"The reason value is available via the getReason() method."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reason"],"optionals":["$description"],"docParameters":{"$reason":{"type":"mixed","description":"Rejection reason."},"$description":{"type":"string","description":"Optional description"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\TaskQueue":{"class":{"descriptions":{"short":"A task queue that executes tasks in a FIFO order.","long":"This task queue class is used to settle promises asynchronously and\nmaintains a constant stack size. You can use the task queue asynchronously\nby calling the `run()` function of the global task queue in an event loop.\n\nGuzzleHttp\\Promise\\queue()->run();"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$withShutdown"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Promise\\TaskQueueInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\AppendStream":{"class":{"descriptions":{"short":"Reads from multiple streams, one after the other.","long":"This is a read-only stream decorator."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$streams"],"docParameters":{"$streams":{"type":"StreamInterface[]","description":"Streams to decorate. Each stream must be readable."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\BufferStream":{"class":{"descriptions":{"short":"Provides a buffer stream that can be written to to fill a buffer, and read\nfrom to remove bytes from the buffer.","long":"This stream returns a \"hwm\" metadata value that tells upstream consumers\nwhat the configured high water mark of the stream is, or the maximum\npreferred size of the buffer."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$hwm"],"docParameters":{"$hwm":{"type":"int","description":"High water mark, representing the preferred maximum buffer size. If the size of the buffer exceeds the high water mark, then calls to write will continue to succeed but will return false to inform writers to slow down until the buffer has been drained by reading from it."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\CachingStream":{"class":{"descriptions":{"short":"Stream decorator that can cache previously read bytes from a sequentially\nread stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$target"],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to cache"},"$target":{"type":"StreamInterface","description":"Optionally specify where data is cached"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"We will treat the buffer object as the body of the stream","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\DroppingStream":{"class":{"descriptions":{"short":"Stream decorator that begins dropping data once the size of the underlying\nstream becomes too full.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream","$maxLength"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Underlying stream to decorate."},"$maxLength":{"type":"int","description":"Maximum size before dropping data."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\FnStream":{"class":{"descriptions":{"short":"Compose stream implementations based on a hash of functions.","long":"Allows for easy testing and extension of a provided stream without needing\nto create a concrete class for a simple extension point."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methods"],"optionals":[],"docParameters":{"$methods":{"type":"array","description":"Hash of method name to a callable."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\InflateStream":{"class":{"descriptions":{"short":"Uses PHP's zlib.inflate filter to inflate deflate or gzipped content.","long":"This stream decorator skips the first 10 bytes of the given stream to remove\nthe gzip header, converts the provided stream to a PHP stream resource,\nthen appends the zlib.inflate filter. The stream is then converted back\nto a Guzzle stream resource to be used as a Guzzle stream."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\LazyOpenStream":{"class":{"descriptions":{"short":"Lazily reads or writes to a file that is opened only after an IO operation\ntake place on the stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename","$mode"],"optionals":[],"docParameters":{"$filename":{"type":"string","description":"File to lazily open"},"$mode":{"type":"string","description":"fopen mode to use when opening the stream"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\LimitStream":{"class":{"descriptions":{"short":"Decorator used to return only a subset of a stream","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$limit","$offset"],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to wrap"},"$limit":{"type":"int","description":"Total number of bytes to allow to be read from the stream. Pass -1 for no limit."},"$offset":{"type":"int","description":"Position to seek to before reading (only works on seekable streams)."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\MessageTrait":{"class":{"descriptions":{"short":"Trait implementing functionality common to requests and responses.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\MultipartStream":{"class":{"descriptions":{"short":"Stream that when read returns bytes for a streaming multipart or\nmultipart\/form-data stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$elements","$boundary"],"docParameters":{"$elements":{"type":"array","description":"Array of associative arrays, each containing a required \"name\" key mapping to the form field, name, a required \"contents\" key mapping to a StreamInterface\/resource\/string, an optional \"headers\" associative array of custom headers, and an optional \"filename\" key mapping to a string to send as the filename in the part."},"$boundary":{"type":"string","description":"You can optionally provide a specific boundary"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\NoSeekStream":{"class":{"descriptions":{"short":"Stream decorator that prevents a stream from being seeked","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to decorate"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\PumpStream":{"class":{"descriptions":{"short":"Provides a read only stream that pumps data from a PHP callable.","long":"When invoking the provided callable, the PumpStream will pass the amount of\ndata requested to read to the callable. The callable can choose to ignore\nthis value and return fewer or more bytes than requested. Any extra data\nreturned by the provided callable is buffered internally until drained using\nthe read() function of the PumpStream. The provided callable MUST return\nfalse when there is no more data to read."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source"],"optionals":["$options"],"docParameters":{"$source":{"type":"callable","description":"Source of the stream data. The callable MAY accept an integer argument used to control the amount of data to return. The callable MUST return a string when called, or false on error or EOF."},"$options":{"type":"array","description":"Stream options: - metadata: Hash of metadata to use with stream. - size: Size of the stream, if known."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Request":{"class":{"descriptions":{"short":"PSR-7 request implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method","$uri"],"optionals":["$headers","$body","$version"],"docParameters":{"$method":{"type":"string","description":"HTTP method"},"$uri":{"type":"string|UriInterface","description":"URI"},"$headers":{"type":"array","description":"Request headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Request body"},"$version":{"type":"string","description":"Protocol version"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Response":{"class":{"descriptions":{"short":"PSR-7 response implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$status","$headers","$body","$version","$reason"],"docParameters":{"$status":{"type":"int","description":"Status code"},"$headers":{"type":"array","description":"Response headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Response body"},"$version":{"type":"string","description":"Protocol version"},"$reason":{"type":"string|null","description":"Reason phrase (when empty a default will be used based on the status code)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\ServerRequest":{"class":{"descriptions":{"short":"Server-side HTTP request","long":"Extends the Request definition to add methods for accessing incoming data,\nspecifically server parameters, cookies, matched path parameters, query\nstring arguments, body parameters, and upload file information.\n\n\"Attributes\" are discovered via decomposing the request (and usually\nspecifically the URI path), and typically will be injected by the application.\n\nRequests are considered immutable; all methods that might change state are\nimplemented such that they retain the internal state of the current\nmessage and return a new instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$method","$uri"],"optionals":["$headers","$body","$version","$serverParams"],"docParameters":{"$method":{"type":"string","description":"HTTP method"},"$uri":{"type":"string|UriInterface","description":"URI"},"$headers":{"type":"array","description":"Request headers"},"$body":{"type":"string|null|resource|StreamInterface","description":"Request body"},"$version":{"type":"string","description":"Protocol version"},"$serverParams":{"type":"array","description":"Typically the $_SERVER superglobal"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Stream":{"class":{"descriptions":{"short":"PHP stream implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$options"],"docParameters":{"$stream":{"type":"resource","description":"Stream resource to wrap."},"$options":{"type":"array","description":"Associative array of options."}},"throws":{"\\InvalidArgumentException":"if the stream is not a stream resource"},"return":{"type":"self","description":""},"descriptions":{"short":"This constructor accepts an associative array of options.","long":"- size: (int) If a read stream would otherwise have an indeterminate\nsize, but the size is known due to foreknowledge, then you can\nprovide that size, in bytes.\n- metadata: (array) Any additional metadata to return when the metadata\nof the stream is accessed."},"deprecated":false}}}},"GuzzleHttp\\Psr7\\StreamDecoratorTrait":{"class":{"descriptions":{"short":"Stream decorator trait","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":[],"docParameters":{"$stream":{"type":"StreamInterface","description":"Stream to decorate"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\StreamWrapper":{"class":{"descriptions":{"short":"Converts Guzzle streams into PHP stream resources.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\Psr7\\UploadedFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$streamOrFile","$size","$errorStatus"],"optionals":["$clientFilename","$clientMediaType"],"docParameters":{"$streamOrFile":{"type":"StreamInterface|string|resource","description":""},"$size":{"type":"int","description":""},"$errorStatus":{"type":"int","description":""},"$clientFilename":{"type":"string|null","description":""},"$clientMediaType":{"type":"string|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\Uri":{"class":{"descriptions":{"short":"PSR-7 URI implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$uri"],"docParameters":{"$uri":{"type":"string","description":"URI to parse"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\UriNormalizer":{"class":{"descriptions":{"short":"Provides methods to normalize and compare URIs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\Psr7\\UriResolver":{"class":{"descriptions":{"short":"Resolves a URI reference in the context of a base URI and the opposite way.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\RedirectMiddleware":{"class":{"descriptions":{"short":"Request redirect middleware.","long":"Apply this middleware like other middleware using\n{@see GuzzleHttp\\Middleware::redirect()}."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$nextHandler"],"optionals":[],"docParameters":{"$nextHandler":{"type":"callable","description":"Next handler to invoke."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\RequestOptions":{"class":{"descriptions":{"short":"This class contains a list of built-in Guzzle request options.","long":"More documentation for each option can be found at http:\/\/guzzlephp.org\/."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"GuzzleHttp\\RetryMiddleware":{"class":{"descriptions":{"short":"Middleware that retries requests based on the boolean result of\ninvoking the provided \"decider\" function.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$decider","$nextHandler"],"optionals":["$delay"],"docParameters":{"$decider":{"type":"callable","description":"Function that accepts the number of retries, a request, [response], and [exception] and returns true if the request is to be retried."},"$nextHandler":{"type":"callable","description":"Next handler to invoke."},"$delay":{"type":"callable","description":"Function that accepts the number of retries and [response] and returns the number of milliseconds to delay."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\TransferStats":{"class":{"descriptions":{"short":"Represents data at the point after it was transferred either successfully\nor after a network error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request"],"optionals":["$response","$transferTime","$handlerErrorData","$handlerStats"],"docParameters":{"$request":{"type":"RequestInterface","description":"Request that was sent."},"$response":{"type":"ResponseInterface","description":"Response received (if any)"},"$transferTime":{"type":"null","description":"Total handler transfer time."},"$handlerErrorData":{"type":"mixed","description":"Handler error data."},"$handlerStats":{"type":"array","description":"Handler specific stats."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GuzzleHttp\\UriTemplate":{"class":{"descriptions":{"short":"Expands URI templates. Userland implementation of PECL uri_template.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\ErrorHandler":{"class":{"descriptions":{"short":"Monolog error handler","long":"A facility to enable logging of runtime errors, exceptions and fatal errors.\n\nQuick setup: <code>ErrorHandler::register($logger);<\/code>\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$logger"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\ChromePHPFormatter":{"class":{"descriptions":{"short":"Formats a log message according to the ChromePHP array format","long":"@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Formatter\\ElasticaFormatter":{"class":{"descriptions":{"short":"Format a log message into an Elastica Document","long":"@author Jelle Vink <jelle.vink@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$index","$type"],"optionals":[],"docParameters":{"$index":{"type":"string","description":"Elastic Search index name"},"$type":{"type":"string","description":"Elastic Search document type"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FlowdockFormatter":{"class":{"descriptions":{"short":"formats the record to be used in the FlowdockHandler","long":"@author Dominik Liebler <liebler.dominik@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$source","$sourceEmail"],"optionals":[],"docParameters":{"$source":{"type":"string","description":""},"$sourceEmail":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FluentdFormatter":{"class":{"descriptions":{"short":"Class FluentdFormatter","long":"Serializes a log message to Fluentd unix socket protocol\n\nFluentd config:\n\n<source>\ntype unix\npath \/var\/run\/td-agent\/td-agent.sock\n<\/source>\n\nMonolog setup:\n\n$logger = new Monolog\\Logger('fluent.tag');\n$fluentHandler = new Monolog\\Handler\\SocketHandler('unix:\/\/\/var\/run\/td-agent\/td-agent.sock');\n$fluentHandler->setFormatter(new Monolog\\Formatter\\FluentdFormatter());\n$logger->pushHandler($fluentHandler);\n\n@author Andrius Putna <fordnox@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$levelTag"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\FormatterInterface":{"class":{"descriptions":{"short":"Interface for formatters","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Formatter\\GelfMessageFormatter":{"class":{"descriptions":{"short":"Serializes a log message to GELF","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\HtmlFormatter":{"class":{"descriptions":{"short":"Formats incoming records into an HTML table","long":"This is especially useful for html email logging\n\n@author Tiago Brito <tlfbrito@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\JsonFormatter":{"class":{"descriptions":{"short":"Encodes whatever record data is passed to it as json","long":"This can be useful to log to databases or remote APIs\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$batchMode","$appendNewline"],"docParameters":{"$batchMode":{"type":"int","description":""},"$appendNewline":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LineFormatter":{"class":{"descriptions":{"short":"Formats incoming records into a one-line string","long":"This is especially useful for logging to files\n\n@author Jordi Boggiano <j.boggiano@seld.be>\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$format","$dateFormat","$allowInlineLineBreaks","$ignoreEmptyContextAndExtra"],"docParameters":{"$format":{"type":"string","description":"The format of the message"},"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"},"$allowInlineLineBreaks":{"type":"bool","description":"Whether to allow inline line breaks in log entries"},"$ignoreEmptyContextAndExtra":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LogglyFormatter":{"class":{"descriptions":{"short":"Encodes message information into JSON in a format compatible with Loggly.","long":"@author Adam Pancutt <adam@pancutt.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$batchMode","$appendNewline"],"docParameters":{"$batchMode":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Overrides the default batch mode to new lines for compatibility with the\nLoggly bulk API.","long":""},"deprecated":false}}}},"Monolog\\Formatter\\LogstashFormatter":{"class":{"descriptions":{"short":"Serializes a log message to Logstash Event Format","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$applicationName"],"optionals":["$systemName","$extraPrefix","$contextPrefix","$version"],"docParameters":{"$applicationName":{"type":"string","description":"the application that sends the data, used as the \"type\" field of logstash"},"$systemName":{"type":"string","description":"the system\/machine name, used as the \"source\" field of logstash, defaults to the hostname of the machine"},"$extraPrefix":{"type":"string","description":"prefix for extra keys inside logstash \"fields\""},"$contextPrefix":{"type":"string","description":"prefix for context keys inside logstash \"fields\", defaults to ctxt_"},"$version":{"type":"int","description":"the logstash format version to use, defaults to 0"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\MongoDBFormatter":{"class":{"descriptions":{"short":"Formats a record for use with the MongoDBHandler.","long":"@author Florian Plattner <me@florianplattner.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$maxNestingLevel","$exceptionTraceAsString"],"docParameters":{"$maxNestingLevel":{"type":"int","description":"0 means infinite nesting, the $record itself is level 1, $record['context'] is 2"},"$exceptionTraceAsString":{"type":"bool","description":"set to false to log exception traces as a sub documents instead of strings"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\NormalizerFormatter":{"class":{"descriptions":{"short":"Normalizes incoming records to remove objects\/resources so it's easier to dump to various targets","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\ScalarFormatter":{"class":{"descriptions":{"short":"Formats data into an associative array of scalar values.\nObjects and arrays will be JSON encoded.","long":"@author Andrew Lawson <adlawson@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Formatter\\WildfireFormatter":{"class":{"descriptions":{"short":"Serializes a log message according to Wildfire's header requirements","long":"@author Eric Clemmons (@ericclemmons) <eric@uxdriven.com>\n@author Christophe Coevoet <stof@notk.org>\n@author Kirill chEbba Chebunin <iam@chebba.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dateFormat"],"docParameters":{"$dateFormat":{"type":"string","description":"The format of the timestamp: one supported by DateTime::format"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractHandler":{"class":{"descriptions":{"short":"Base Handler class providing the Handler structure","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractProcessingHandler":{"class":{"descriptions":{"short":"Base Handler class providing the Handler structure","long":"Classes extending it should (in most cases) only implement write($record)\n\n@author Jordi Boggiano <j.boggiano@seld.be>\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AbstractSyslogHandler":{"class":{"descriptions":{"short":"Common syslog functionality","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$facility","$level","$bubble"],"docParameters":{"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\AmqpHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exchange"],"optionals":["$exchangeName","$level","$bubble"],"docParameters":{"$exchange":{"type":"AMQPExchange|AMQPChannel","description":"AMQPExchange (php AMQP ext) or PHP AMQP lib channel, ready for use"},"$exchangeName":{"type":"string","description":""},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\BrowserConsoleHandler":{"class":{"descriptions":{"short":"Handler sending logs to browser's javascript console with no browser extension required","long":"@author Olivier Poitrey <rs@dailymotion.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\BufferHandler":{"class":{"descriptions":{"short":"Buffers all records until closing the handler and then pass them as batch.","long":"This is useful for a MailHandler to send only one mail per request instead of\nsending one per log message.\n\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$bufferLimit","$level","$bubble","$flushOnOverflow"],"docParameters":{"$handler":{"type":"HandlerInterface","description":"Handler."},"$bufferLimit":{"type":"int","description":"How many entries should be buffered at most, beyond that the oldest items are removed from the buffer."},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$flushOnOverflow":{"type":"Boolean","description":"If true, the buffer is flushed when the max size has been reached, by default oldest entries are discarded"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ChromePHPHandler":{"class":{"descriptions":{"short":"Handler sending logs to the ChromePHP extension (http:\/\/www.chromephp.com\/)","long":"This also works out of the box with Firefox 43+\n\n@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\CouchDBHandler":{"class":{"descriptions":{"short":"CouchDB handler","long":"@author Markus Bachmann <markus.bachmann@bachi.biz>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\CubeHandler":{"class":{"descriptions":{"short":"Logs to Cube.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$url"],"optionals":["$level","$bubble"],"docParameters":[],"throws":{"\\UnexpectedValueException":"when given url is not a valid url. A valid url must consist of three parts : protocol:\/\/host:port Only valid protocols used by Cube are http and udp"},"return":{"type":"self","description":""},"descriptions":{"short":"Create a Cube handler","long":""},"deprecated":false}}}},"Monolog\\Handler\\Curl\\Util":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\DeduplicationHandler":{"class":{"descriptions":{"short":"Simple handler wrapper that deduplicates log records across multiple requests","long":"It also includes the BufferHandler functionality and will buffer\nall messages until the end of the request or flush() is called.\n\nThis works by storing all log records' messages above $deduplicationLevel\nto the file specified by $deduplicationStore. When further logs come in at the end of the\nrequest (or when flush() is called), all those above $deduplicationLevel are checked\nagainst the existing stored logs. If they match and the timestamps in the stored log is\nnot older than $time seconds, the new log record is discarded. If no log record is new, the\nwhole data set is discarded.\n\nThis is mainly useful in combination with Mail handlers or things like Slack or HipChat handlers\nthat send messages to people, to avoid spamming with the same message over and over in case of\na major component failure like a database server being down which makes all requests fail in the\nsame way.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$deduplicationStore","$deduplicationLevel","$time","$bubble"],"docParameters":{"$handler":{"type":"HandlerInterface","description":"Handler."},"$deduplicationStore":{"type":"string","description":"The file\/path where the deduplication log should be kept"},"$deduplicationLevel":{"type":"int","description":"The minimum logging level for log records to be looked at for deduplication purposes"},"$time":{"type":"int","description":"The period (in seconds) during which duplicate entries should be suppressed after a given log is sent through"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\DoctrineCouchDBHandler":{"class":{"descriptions":{"short":"CouchDB handler for Doctrine CouchDB ODM","long":"@author Markus Bachmann <markus.bachmann@bachi.biz>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\DynamoDbHandler":{"class":{"descriptions":{"short":"Amazon DynamoDB handler (http:\/\/aws.amazon.com\/dynamodb\/)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client","$table"],"optionals":["$level","$bubble"],"docParameters":{"$client":{"type":"DynamoDbClient","description":""},"$table":{"type":"string","description":""},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ElasticSearchHandler":{"class":{"descriptions":{"short":"Elastic Search handler","long":"Usage example:\n\n$client = new \\Elastica\\Client();\n$options = array(\n'index' => 'elastic_index_name',\n'type' => 'elastic_doc_type',\n);\n$handler = new ElasticSearchHandler($client, $options);\n$log = new Logger('application');\n$log->pushHandler($handler);\n\n@author Jelle Vink <jelle.vink@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":["$options","$level","$bubble"],"docParameters":{"$client":{"type":"Client","description":"Elastica Client object"},"$options":{"type":"array","description":"Handler configuration"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ErrorLogHandler":{"class":{"descriptions":{"short":"Stores to PHP error_log() handler.","long":"@author Elan Ruusam\u00c3\u00a4e <glen@delfi.ee>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$messageType","$level","$bubble","$expandNewlines"],"docParameters":{"$messageType":{"type":"int","description":"Says where the error should go."},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$expandNewlines":{"type":"Boolean","description":"If set to true, newlines in the message will be expanded to be take multiple log entries"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FilterHandler":{"class":{"descriptions":{"short":"Simple handler wrapper that filters records based on a list of levels","long":"It can be configured with an exact list of levels to allow, or a min\/max level."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$minLevelOrList","$maxLevel","$bubble"],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $this)."},"$minLevelOrList":{"type":"int|array","description":"A list of levels to accept or a minimum level if maxLevel is provided"},"$maxLevel":{"type":"int","description":"Maximum level to accept, only used if $minLevelOrList is not an array"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossedHandler":{"class":{"descriptions":{"short":"Buffers all records until a certain level is reached","long":"The advantage of this approach is that you don't get any clutter in your log files.\nOnly requests which actually trigger an error (or whatever your actionLevel is) will be\nin the logs, but they will contain all records, not only those above the level threshold.\n\nYou can find the various activation strategies in the\nMonolog\\Handler\\FingersCrossed\\ namespace.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":["$activationStrategy","$bufferSize","$bubble","$stopBuffering","$passthruLevel"],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $fingersCrossedHandler)."},"$activationStrategy":{"type":"int|ActivationStrategyInterface","description":"Strategy which determines when this handler takes action"},"$bufferSize":{"type":"int","description":"How many entries should be buffered at most, beyond that the oldest items are removed from the buffer."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$stopBuffering":{"type":"Boolean","description":"Whether the handler should stop buffering after being triggered (default true)"},"$passthruLevel":{"type":"int","description":"Minimum level to always flush to handler on close, even if strategy not triggered"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossed\\ActivationStrategyInterface":{"class":{"descriptions":{"short":"Interface for activation strategies for the FingersCrossedHandler.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\FingersCrossed\\ChannelLevelActivationStrategy":{"class":{"descriptions":{"short":"Channel and Error level based monolog activation strategy. Allows to trigger activation\nbased on level per channel. e.g. trigger activation on level 'ERROR' by default, except\nfor records of the 'sql' channel; those should trigger activation on level 'WARN'.","long":"Example:\n\n<code>\n$activationStrategy = new ChannelLevelActivationStrategy(\nLogger::CRITICAL,\narray(\n'request' => Logger::ALERT,\n'sensitive' => Logger::ERROR,\n)\n);\n$handler = new FingersCrossedHandler(new StreamHandler('php:\/\/stderr'), $activationStrategy);\n<\/code>\n\n@author Mike Meessen <netmikey@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$defaultActionLevel"],"optionals":["$channelToActionLevel"],"docParameters":{"$defaultActionLevel":{"type":"int","description":"The default action level to be used if the record's category doesn't match any"},"$channelToActionLevel":{"type":"array","description":"An array that maps channel names to action levels."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy":{"class":{"descriptions":{"short":"Error level based activation strategy.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$actionLevel"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FirePHPHandler":{"class":{"descriptions":{"short":"Simple FirePHP Handler (http:\/\/www.firephp.org\/), which uses the Wildfire protocol.","long":"@author Eric Clemmons (@ericclemmons) <eric@uxdriven.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\FleepHookHandler":{"class":{"descriptions":{"short":"Sends logs to Fleep.io using Webhook integrations","long":"You'll need a Fleep.io account to use this handler."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":["$level","$bubble"],"docParameters":{"$token":{"type":"string","description":"Webhook token"},"$level":{"type":"bool|int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":{"MissingExtensionException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct a new Fleep.io Handler.","long":"For instructions on how to create a new web hook in your conversations\nsee https:\/\/fleep.io\/integrations\/webhooks\/"},"deprecated":false}}}},"Monolog\\Handler\\FlowdockHandler":{"class":{"descriptions":{"short":"Sends notifications through the Flowdock push API","long":"This must be configured with a FlowdockFormatter instance via setFormatter()\n\nNotes:\nAPI token - Flowdock API token\n\n@author Dominik Liebler <liebler.dominik@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$apiToken"],"optionals":["$level","$bubble"],"docParameters":{"$apiToken":{"type":"string","description":""},"$level":{"type":"bool|int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":{"MissingExtensionException":"if OpenSSL is missing"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\GelfHandler":{"class":{"descriptions":{"short":"Handler to send messages to a Graylog2 (http:\/\/www.graylog2.org) server","long":"@author Matt Lehner <mlehner@gmail.com>\n@author Benjamin Zikarsky <benjamin@zikarsky.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$publisher"],"optionals":["$level","$bubble"],"docParameters":{"$publisher":{"type":"PublisherInterface|IMessagePublisher|Publisher","description":"a publisher object"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\GroupHandler":{"class":{"descriptions":{"short":"Forwards records to multiple handlers","long":"@author Lenar L\u00c3\u00b5hmus <lenar@city.ee>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handlers"],"optionals":["$bubble"],"docParameters":{"$handlers":{"type":"array","description":"Array of Handlers."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\HandlerInterface":{"class":{"descriptions":{"short":"Interface that all Monolog Handlers must implement","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Handler\\HandlerWrapper":{"class":{"descriptions":{"short":"This simple wrapper class can be used to extend handlers functionality.","long":"Example: A custom filtering that can be applied to any handler.\n\nInherit from this class and override handle() like this:\n\npublic function handle(array $record)\n{\nif ($record meets certain conditions) {\nreturn false;\n}\nreturn $this->handler->handle($record);\n}\n\n@author Alexey Karapetov <alexey@karapetov.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler"],"optionals":[],"docParameters":{"$handler":{"type":"HandlerInterface","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"HandlerWrapper constructor.","long":""},"deprecated":false}}}},"Monolog\\Handler\\HipChatHandler":{"class":{"descriptions":{"short":"Sends notifications through the hipchat api to a hipchat room","long":"Notes:\nAPI token - HipChat API token\nRoom      - HipChat Room Id or name, where messages are sent\nName      - Name used to send the message (from)\nnotify    - Should the message trigger a notification in the clients\nversion   - The API version to use (HipChatHandler::API_V1 | HipChatHandler::API_V2)\n\n@author Rafael Dohms <rafael@doh.ms>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$room"],"optionals":["$name","$notify","$level","$bubble","$useSSL","$format","$host","$version"],"docParameters":{"$token":{"type":"string","description":"HipChat API Token"},"$room":{"type":"string","description":"The room that should be alerted of the message (Id or Name)"},"$name":{"type":"string","description":"Name used in the \"from\" field."},"$notify":{"type":"bool","description":"Trigger a notification in clients or not"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$useSSL":{"type":"bool","description":"Whether to connect via SSL."},"$format":{"type":"string","description":"The format of the messages (default to text, can be set to html if you have html in the messages)"},"$host":{"type":"string","description":"The HipChat server hostname."},"$version":{"type":"string","description":"The HipChat API version (default HipChatHandler::API_V1)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\IFTTTHandler":{"class":{"descriptions":{"short":"IFTTTHandler uses cURL to trigger IFTTT Maker actions","long":"Register a secret key and trigger\/event name at https:\/\/ifttt.com\/maker\n\nvalue1 will be the channel from monolog's Logger constructor,\nvalue2 will be the level name (ERROR, WARNING, ..)\nvalue3 will be the log record's message\n\n@author Nehal Patel <nehal@nehalpatel.me>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$eventName","$secretKey"],"optionals":["$level","$bubble"],"docParameters":{"$eventName":{"type":"string","description":"The name of the IFTTT Maker event that should be triggered"},"$secretKey":{"type":"string","description":"A valid IFTTT secret key"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\LogEntriesHandler":{"class":{"descriptions":{"short":"@author Robert Kaufmann III <rok3@rok3.me>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":["$useSSL","$level","$bubble"],"docParameters":{"$token":{"type":"string","description":"Log token supplied by LogEntries"},"$useSSL":{"type":"bool","description":"Whether or not SSL encryption should be used."},"$level":{"type":"int","description":"The minimum logging level to trigger this handler"},"$bubble":{"type":"bool","description":"Whether or not messages that are handled should bubble up the stack."}},"throws":{"MissingExtensionException":"If SSL encryption is set to true and OpenSSL is missing"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\LogglyHandler":{"class":{"descriptions":{"short":"Sends errors to Loggly.","long":"@author Przemek Sobstel <przemek@sobstel.org>\n@author Adam Pancutt <adam@pancutt.com>\n@author Gregory Barchard <gregory@barchard.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MailHandler":{"class":{"descriptions":{"short":"Base class for all mail handlers","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MandrillHandler":{"class":{"descriptions":{"short":"MandrillHandler uses cURL to send the emails to the Mandrill API","long":"@author Adam Nicholson <adamnicholson10@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$apiKey","$message"],"optionals":["$level","$bubble"],"docParameters":{"$apiKey":{"type":"string","description":"A valid Mandrill API key"},"$message":{"type":"callable|\\Swift_Message","description":"An example message for real messages, only the body will be replaced"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MissingExtensionException":{"class":{"descriptions":{"short":"Exception can be thrown if an extension for an handler is missing","long":"@author  Christian Bergau <cbergau86@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\MongoDBHandler":{"class":{"descriptions":{"short":"Logs to a MongoDB database.","long":"usage example:\n\n$log = new Logger('application');\n$mongodb = new MongoDBHandler(new \\Mongo(\"mongodb:\/\/localhost:27017\"), \"logs\", \"prod\");\n$log->pushHandler($mongodb);\n\n@author Thomas Tourlourat <thomas@tourlourat.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NativeMailerHandler":{"class":{"descriptions":{"short":"NativeMailerHandler uses the mail() function to send the emails","long":"@author Christophe Coevoet <stof@notk.org>\n@author Mark Garrett <mark@moderndeveloperllc.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$to","$subject","$from"],"optionals":["$level","$bubble","$maxColumnWidth"],"docParameters":{"$to":{"type":"string|array","description":"The receiver of the mail"},"$subject":{"type":"string","description":"The subject of the mail"},"$from":{"type":"string","description":"The sender of the mail"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$maxColumnWidth":{"type":"int","description":"The maximum column width that the message lines will have"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NewRelicHandler":{"class":{"descriptions":{"short":"Class to record a log on a NewRelic application.\nEnabling New Relic High Security mode may prevent capture of useful information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\NullHandler":{"class":{"descriptions":{"short":"Blackhole","long":"Any record it can handle will be thrown away. This can be used\nto put on top of an existing stack to override it temporarily.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PHPConsoleHandler":{"class":{"descriptions":{"short":"Monolog handler for Google Chrome extension \"PHP Console\"","long":"Display PHP error\/debug log messages in Google Chrome console and notification popups, executes PHP code remotely\n\nUsage:\n1. Install Google Chrome extension https:\/\/chrome.google.com\/webstore\/detail\/php-console\/nfhmhhlpfleoednkpnnnkolmclajemef\n2. See overview https:\/\/github.com\/barbushin\/php-console#overview\n3. Install PHP Console library https:\/\/github.com\/barbushin\/php-console#installation\n4. Example (result will looks like http:\/\/i.hizliresim.com\/vg3Pz4.png)\n\n$logger = new \\Monolog\\Logger('all', array(new \\Monolog\\Handler\\PHPConsoleHandler()));\n\\Monolog\\ErrorHandler::register($logger);\necho $undefinedVar;\n$logger->addDebug('SELECT * FROM users', array('db', 'time' => 0.012));\nPC::debug($_SERVER); \/\/ PHP Console debugger for any type of vars"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$connector","$level","$bubble"],"docParameters":{"$options":{"type":"array","description":"See \\Monolog\\Handler\\PHPConsoleHandler::$options for more details"},"$connector":{"type":"Connector|null","description":"Instance of \\PhpConsole\\Connector class (optional)"},"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":{"Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PsrHandler":{"class":{"descriptions":{"short":"Proxies log messages to an existing PSR-3 compliant logger.","long":"@author Michael Moussa <michael.moussa@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$logger"],"optionals":["$level","$bubble"],"docParameters":{"$logger":{"type":"LoggerInterface","description":"The underlying PSR-3 compliant logger to which messages will be proxied"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\PushoverHandler":{"class":{"descriptions":{"short":"Sends notifications through the pushover api to mobile phones","long":"@author Sebastian G\u00c3\u00b6ttschkes <sebastian.goettschkes@googlemail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$users"],"optionals":["$title","$level","$bubble","$useSSL","$highPriorityLevel","$emergencyLevel","$retry","$expire"],"docParameters":{"$token":{"type":"string","description":"Pushover api token"},"$users":{"type":"string|array","description":"Pushover user id or array of ids the message will be sent to"},"$title":{"type":"string","description":"Title sent to the Pushover API"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$useSSL":{"type":"Boolean","description":"Whether to connect via SSL. Required when pushing messages to users that are not the pushover.net app owner. OpenSSL is required for this option."},"$highPriorityLevel":{"type":"int","description":"The minimum logging level at which this handler will start sending \"high priority\" requests to the Pushover API"},"$emergencyLevel":{"type":"int","description":"The minimum logging level at which this handler will start sending \"emergency\" requests to the Pushover API"},"$retry":{"type":"int","description":"The retry parameter specifies how often (in seconds) the Pushover servers will send the same notification to the user."},"$expire":{"type":"int","description":"The expire parameter specifies how many seconds your notification will continue to be retried for (every retry seconds)."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RavenHandler":{"class":{"descriptions":{"short":"Handler to send messages to a Sentry (https:\/\/github.com\/getsentry\/sentry) server\nusing raven-php (https:\/\/github.com\/getsentry\/raven-php)","long":"@author Marc Abramowitz <marc@marc-abramowitz.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ravenClient"],"optionals":["$level","$bubble"],"docParameters":{"$ravenClient":{"type":"Raven_Client","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RedisHandler":{"class":{"descriptions":{"short":"Logs to a Redis key using rpush","long":"usage example:\n\n$log = new Logger('application');\n$redis = new RedisHandler(new Predis\\Client(\"tcp:\/\/localhost:6379\"), \"logs\", \"prod\");\n$log->pushHandler($redis);\n\n@author Thomas Tourlourat <thomas@tourlourat.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$redis","$key"],"optionals":["$level","$bubble","$capSize"],"docParameters":{"$redis":{"type":"\\Predis\\Client|\\Redis","description":"The redis instance"},"$key":{"type":"string","description":"The key name to push records to"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$capSize":{"type":"int","description":"Number of entries to limit list size to"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RollbarHandler":{"class":{"descriptions":{"short":"Sends errors to Rollbar","long":"If the context data contains a `payload` key, that is used as an array\nof payload options to RollbarNotifier's report_message\/report_exception methods.\n\nRollbar's context info will contain the context + extra keys from the log record\nmerged, and then on top of that a few keys:\n\n- level (rollbar level name)\n- monolog_level (monolog level name, raw level, as rollbar only has 5 but monolog 8)\n- channel\n- datetime (unix timestamp)\n\n@author Paul Statezny <paulstatezny@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rollbarNotifier"],"optionals":["$level","$bubble"],"docParameters":{"$rollbarNotifier":{"type":"RollbarNotifier","description":"RollbarNotifier object constructed with valid token"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\RotatingFileHandler":{"class":{"descriptions":{"short":"Stores logs to files that are rotated every day and a limited number of files are kept.","long":"This rotation is only intended to be used as a workaround. Using logrotate to\nhandle the rotation is strongly encouraged when you can use it.\n\n@author Christophe Coevoet <stof@notk.org>\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$maxFiles","$level","$bubble","$filePermission","$useLocking"],"docParameters":{"$filename":{"type":"string","description":""},"$maxFiles":{"type":"int","description":"The maximal amount of files to keep (0 means unlimited)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$filePermission":{"type":"int|null","description":"Optional file permissions (default (0644) are only for owner read\/write)"},"$useLocking":{"type":"Boolean","description":"Try to lock log file before doing any writes"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SamplingHandler":{"class":{"descriptions":{"short":"Sampling handler","long":"A sampled event stream can be useful for logging high frequency events in\na production environment where you only need an idea of what is happening\nand are not concerned with capturing every occurrence. Since the decision to\nhandle or not handle a particular event is determined randomly, the\nresulting sampled log is not guaranteed to contain 1\/N of the events that\noccurred in the application, but based on the Law of large numbers, it will\ntend to be close to this ratio with a large number of attempts.\n\n@author Bryan Davis <bd808@wikimedia.org>\n@author Kunal Mehta <legoktm@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handler","$factor"],"optionals":[],"docParameters":{"$handler":{"type":"callable|HandlerInterface","description":"Handler or factory callable($record, $fingersCrossedHandler)."},"$factor":{"type":"int","description":"Sample factor"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack API","long":"@author Greg Kedzierski <greg@gregkedzierski.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$channel"],"optionals":["$username","$useAttachment","$iconEmoji","$level","$bubble","$useShortAttachment","$includeContextAndExtra","$excludeFields"],"docParameters":{"$token":{"type":"string","description":"Slack API token"},"$channel":{"type":"string","description":"Slack channel (encoded ID or name)"},"$username":{"type":"string|null","description":"Name of a bot"},"$useAttachment":{"type":"bool","description":"Whether the message should be added to Slack as attachment (plain text otherwise)"},"$iconEmoji":{"type":"string|null","description":"The emoji name to use (or null)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$useShortAttachment":{"type":"bool","description":"Whether the the context\/extra messages added to Slack as attachments are in a short style"},"$includeContextAndExtra":{"type":"bool","description":"Whether the attachment should include context and extra data"},"$excludeFields":{"type":"array","description":"Dot separated list of fields to exclude from slack message. E.g. ['context.field1', 'extra.field2']"}},"throws":{"MissingExtensionException":"If no OpenSSL PHP extension configured"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackWebhookHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack Webhooks","long":"@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$webhookUrl"],"optionals":["$channel","$username","$useAttachment","$iconEmoji","$useShortAttachment","$includeContextAndExtra","$level","$bubble","$excludeFields"],"docParameters":{"$webhookUrl":{"type":"string","description":"Slack Webhook URL"},"$channel":{"type":"string|null","description":"Slack channel (encoded ID or name)"},"$username":{"type":"string|null","description":"Name of a bot"},"$useAttachment":{"type":"bool","description":"Whether the message should be added to Slack as attachment (plain text otherwise)"},"$iconEmoji":{"type":"string|null","description":"The emoji name to use (or null)"},"$useShortAttachment":{"type":"bool","description":"Whether the the context\/extra messages added to Slack as attachments are in a short style"},"$includeContextAndExtra":{"type":"bool","description":"Whether the attachment should include context and extra data"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"},"$excludeFields":{"type":"array","description":"Dot separated list of fields to exclude from slack message. E.g. ['context.field1', 'extra.field2']"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\Slack\\SlackRecord":{"class":{"descriptions":{"short":"Slack record utility helping to log to Slack webhooks or API.","long":"@author Greg Kedzierski <greg@gregkedzierski.com>\n@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$channel","$username","$useAttachment","$userIcon","$useShortAttachment","$includeContextAndExtra","$excludeFields","$formatter"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SlackbotHandler":{"class":{"descriptions":{"short":"Sends notifications through Slack's Slackbot","long":"@author Haralan Dobrev <hkdobrev@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$slackTeam","$token","$channel"],"optionals":["$level","$bubble"],"docParameters":{"$slackTeam":{"type":"string","description":"Slack team slug"},"$token":{"type":"string","description":"Slackbot token"},"$channel":{"type":"string","description":"Slack channel (encoded ID or name)"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"bool","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SocketHandler":{"class":{"descriptions":{"short":"Stores to any socket - uses fsockopen() or pfsockopen().","long":"@author Pablo de Leon Belloc <pablolb@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connectionString"],"optionals":["$level","$bubble"],"docParameters":{"$connectionString":{"type":"string","description":"Socket connection string"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\StreamHandler":{"class":{"descriptions":{"short":"Stores to any stream resource","long":"Can be used to store into php:\/\/stderr, remote and local files, etc.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$level","$bubble","$filePermission","$useLocking"],"docParameters":{"$stream":{"type":"resource|string","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$filePermission":{"type":"int|null","description":"Optional file permissions (default (0644) are only for owner read\/write)"},"$useLocking":{"type":"Boolean","description":"Try to lock log file before doing any writes"}},"throws":{"\\Exception":"If a missing directory is not buildable","\\InvalidArgumentException":"If stream is not a resource or string"},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SwiftMailerHandler":{"class":{"descriptions":{"short":"SwiftMailerHandler uses Swift_Mailer to send the emails","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$mailer","$message"],"optionals":["$level","$bubble"],"docParameters":{"$mailer":{"type":"\\Swift_Mailer","description":"The mailer to use"},"$message":{"type":"callable|\\Swift_Message","description":"An example message for real messages, only the body will be replaced"},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogHandler":{"class":{"descriptions":{"short":"Logs to syslog service.","long":"usage example:\n\n$log = new Logger('application');\n$syslog = new SyslogHandler('myfacility', 'local6');\n$formatter = new LineFormatter(\"%channel%.%level_name%: %message% %extra%\");\n$syslog->setFormatter($formatter);\n$log->pushHandler($syslog);\n\n@author Sven Paulus <sven@karlsruhe.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ident"],"optionals":["$facility","$level","$bubble","$logopts"],"docParameters":{"$ident":{"type":"string","description":""},"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$logopts":{"type":"int","description":"Option flags for the openlog() call, defaults to LOG_PID"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogUdpHandler":{"class":{"descriptions":{"short":"A Handler for logging to a remote syslogd server.","long":"@author Jesper Skovgaard Nielsen <nulpunkt@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host"],"optionals":["$port","$facility","$level","$bubble","$ident"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$facility":{"type":"mixed","description":""},"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"},"$ident":{"type":"string","description":"Program name or tag for each log message."}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\SyslogUdp\\UdpSocket":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$ip"],"optionals":["$port"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\TestHandler":{"class":{"descriptions":{"short":"Used for testing purposes.","long":"It records all records and gives you access to them for verification.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":"The minimum logging level at which this handler will be triggered"},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\WhatFailureGroupHandler":{"class":{"descriptions":{"short":"Forwards records to multiple handlers suppressing failures of each handler\nand continuing through to give every handler a chance to succeed.","long":"@author Craig D'Amelio <craig@damelio.ca>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$handlers"],"optionals":["$bubble"],"docParameters":{"$handlers":{"type":"array","description":"Array of Handlers."},"$bubble":{"type":"Boolean","description":"Whether the messages that are handled can bubble up the stack or not"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Handler\\ZendMonitorHandler":{"class":{"descriptions":{"short":"Handler sending logs to Zend Monitor","long":"@author  Christian Bergau <cbergau86@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$bubble"],"docParameters":{"$level":{"type":"int","description":""},"$bubble":{"type":"bool","description":""}},"throws":{"MissingExtensionException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Construct","long":""},"deprecated":false}}}},"Monolog\\Logger":{"class":{"descriptions":{"short":"Monolog log channel","long":"It contains a stack of Handlers and a stack of Processors,\nand uses them to store records that are added to it.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$handlers","$processors"],"docParameters":{"$name":{"type":"string","description":"The logging channel"},"$handlers":{"type":"HandlerInterface[]","description":"Optional stack of handlers, the first one in the array is called first, etc."},"$processors":{"type":"callable[]","description":"Optional array of processors"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\GitProcessor":{"class":{"descriptions":{"short":"Injects Git branch and Git commit SHA in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\IntrospectionProcessor":{"class":{"descriptions":{"short":"Injects line\/file:class\/function where the log message came from","long":"Warning: This only works if the handler processes the logs directly.\nIf you put the processor on a handler that is behind a FingersCrossedHandler\nfor example, the processor will only be called once the trigger level is reached,\nand all the log records will have the same file\/line\/.. data from the call that\ntriggered the FingersCrossedHandler.\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level","$skipClassesPartials","$skipStackFramesCount"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryPeakUsageProcessor":{"class":{"descriptions":{"short":"Injects memory_get_peak_usage in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryProcessor":{"class":{"descriptions":{"short":"Some methods that are common for all memory processors","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MemoryUsageProcessor":{"class":{"descriptions":{"short":"Injects memory_get_usage in all records","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$realUsage","$useFormatting"],"docParameters":{"$realUsage":{"type":"bool","description":"Set this to true to get the real size of memory allocated from system."},"$useFormatting":{"type":"bool","description":"If true, then format memory size to human readable string (MB, KB, B depending on size)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\MercurialProcessor":{"class":{"descriptions":{"short":"Injects Hg branch and Hg revision number in all records","long":"@author Jonathan A. Schweder <jonathanschweder@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$level"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\ProcessIdProcessor":{"class":{"descriptions":{"short":"Adds value of getmypid into records","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Processor\\PsrLogMessageProcessor":{"class":{"descriptions":{"short":"Processes a record's message according to PSR-3 rules","long":"It replaces {foo} with the value from $context['foo']\n\n@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Monolog\\Processor\\TagProcessor":{"class":{"descriptions":{"short":"Adds a tags array into record","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$tags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\UidProcessor":{"class":{"descriptions":{"short":"Adds a unique identifier into records","long":"@author Simon M\u00c3\u00b6nch <sm@webfactory.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$length"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Processor\\WebProcessor":{"class":{"descriptions":{"short":"Injects url\/method and remote IP of the current web request in all records","long":"@author Jordi Boggiano <j.boggiano@seld.be>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$serverData","$extraFields"],"docParameters":{"$serverData":{"type":"array|\\ArrayAccess","description":"Array or object w\/ ArrayAccess that provides access to the $_SERVER data"},"$extraFields":{"type":"array|null","description":"Field names and the related key inside $serverData to be added. If not provided it defaults to: url, ip, http_method, server, referrer"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Monolog\\Registry":{"class":{"descriptions":{"short":"Monolog log registry","long":"Allows to get `Logger` instances in the global scope\nvia static method calls on this class.\n\n<code>\n$application = new Monolog\\Logger('application');\n$api = new Monolog\\Logger('api');\n\nMonolog\\Registry::addLogger($application);\nMonolog\\Registry::addLogger($api);\n\nfunction testLogger()\n{\nMonolog\\Registry::api()->addError('Sent to $api Logger instance');\nMonolog\\Registry::application()->addError('Sent to $application Logger instance');\n}\n<\/code>\n\n@author Tomas Tatarko <tomas@tatarko.sk>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Channel\\AMQPChannel":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":["$channel_id","$auto_decode"],"docParameters":{"$connection":{"type":"\\PhpAmqpLib\\Connection\\AbstractConnection","description":""},"$channel_id":{"type":"null","description":""},"$auto_decode":{"type":"bool","description":""}},"throws":{"\\Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Channel\\AbstractChannel":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection","$channel_id"],"optionals":[],"docParameters":{"$connection":{"type":"AbstractConnection","description":""},"$channel_id":{"type":"string","description":""}},"throws":{"\\PhpAmqpLib\\Exception\\AMQPRuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPConnection":{"class":{"descriptions":{"short":"Class AMQPConnection","long":"Kept for BC"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPLazyConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPLazySocketConnection":{"class":{"descriptions":{"short":"Yet another lazy connection. This time using sockets. Current architecture doesn't allow to wrap existing connections","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$timeout","$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPSSLConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$ssl_options","$options"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$ssl_options":{"type":"array","description":""},"$options":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPSocketConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$timeout","$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AMQPStreamConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$user","$password"],"optionals":["$vhost","$insist","$login_method","$login_response","$locale","$connection_timeout","$read_write_timeout","$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"string","description":""},"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Connection\\AbstractConnection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$user","$password","$vhost","$insist","$login_method","$login_response","$locale","$io"],"optionals":["$heartbeat"],"docParameters":{"$user":{"type":"string","description":""},"$password":{"type":"string","description":""},"$vhost":{"type":"string","description":""},"$insist":{"type":"bool","description":""},"$login_method":{"type":"string","description":""},"$login_response":{"type":"null","description":""},"$locale":{"type":"string","description":""},"$io":{"type":"AbstractIO","description":""},"$heartbeat":{"type":"int","description":""}},"throws":{"\\Exception":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPBasicCancelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$consumerTag"],"optionals":[],"docParameters":{"$consumerTag":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPChannelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPException":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPExceptionInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Exception\\AMQPIOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPIOWaitException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPInvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPLogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPOutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPOutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolChannelException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPProtocolException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reply_code","$reply_text","$method_sig"],"optionals":[],"docParameters":{"$reply_code":{"type":"string","description":""},"$reply_text":{"type":"int","description":""},"$method_sig":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPRuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Exception\\AMQPTimeoutException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Helper\\DebugHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$PROTOCOL_CONSTANTS_CLASS"],"optionals":[],"docParameters":{"$PROTOCOL_CONSTANTS_CLASS":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Helper\\MiscHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\MethodMap080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\MethodMap091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Protocol080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Protocol091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Wait080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Helper\\Protocol\\Wait091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Message\\AMQPMessage":{"class":{"descriptions":{"short":"A Message for use with the Channnel.basic_* methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$body","$properties"],"docParameters":{"$body":{"type":"string","description":""},"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPAbstractCollection":{"class":{"descriptions":{"short":"Iterator implemented for transparent integration with AMQPWriter::write_[array|table]()","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":{"$data":{"type":"array|null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPDecimal":{"class":{"descriptions":{"short":"AMQP protocol decimal value.","long":"Values are represented as (n,e) pairs. The actual value\nis n * 10^(-e).\n\nFrom 0.8 spec: Decimal values are\nnot intended to support floating point values, but rather\nbusiness values such as currency rates and amounts. The\n'decimals' octet is not signed."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$n","$e"],"optionals":[],"docParameters":{"$n":{"type":"int","description":""},"$e":{"type":"int","description":""}},"throws":{"\\PhpAmqpLib\\Exception\\AMQPOutOfBoundsException":""},"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPReader":{"class":{"descriptions":{"short":"This class can read from a string or from a stream","long":"TODO : split this class: AMQPStreamReader and a AMQPBufferReader"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$str"],"optionals":["$io","$timeout"],"docParameters":{"$str":{"type":"string","description":""},"$io":{"type":"AbstractIO","description":""},"$timeout":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPTable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$data"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AMQPWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\AbstractClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\Constants080":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\Constants091":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\GenericContent":{"class":{"descriptions":{"short":"Abstract base class for AMQP content.  Subclasses should override\nthe propertyDefinitions attribute.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":["$propertyTypes"],"docParameters":{"$properties":{"type":"array","description":"Message property content"},"$propertyTypes":{"type":"array","description":"Message property definitions"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\IO\\AbstractIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpAmqpLib\\Wire\\IO\\SocketIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$timeout"],"optionals":["$keepalive"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$timeout":{"type":"float","description":""},"$keepalive":{"type":"bool","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpAmqpLib\\Wire\\IO\\StreamIO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$host","$port","$connection_timeout","$read_write_timeout"],"optionals":["$context","$keepalive","$heartbeat"],"docParameters":{"$host":{"type":"string","description":""},"$port":{"type":"int","description":""},"$connection_timeout":{"type":"float","description":""},"$read_write_timeout":{"type":"float","description":""},"$context":{"type":"null","description":""},"$keepalive":{"type":"bool","description":""},"$heartbeat":{"type":"int","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast":{"class":{"descriptions":{"short":"Abstract superclass of all elements in the abstract syntax tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector":{"class":{"descriptions":{"short":"Abstract superclass of all selector elements in the abstract syntax tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector\\Combinator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Child":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Descendant":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Follower":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Combinator\\Next":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequence"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Group":{"class":{"descriptions":{"short":"List of Css Selector Sequences.","long":"This is the root element of a standard selector string like:\n\"element, .class\"\n\nBecause it is a list the some standard interfaces are implemented for\neasier usage."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequences"],"docParameters":{"$sequences":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create the object and assign sequences if provided. They\ncan be added later of course.","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Sequence":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$simples","$combinator"],"docParameters":{"$simples":{"type":"array(Simple)","description":""},"$combinator":{"type":"Combinator","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Selector\\Simple\\Attribute":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$match","$literal"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\ClassName":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Id":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$id"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parameter"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Language":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$language"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Position":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$repeat","$add"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\PseudoElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Type":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Selector\\Simple\\Universal":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefix"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Visitor":{"class":{"descriptions":{"short":"Interface declaration for php css ast visitors","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Css":{"class":{"descriptions":{"short":"An ast visitor that compiles a css selector string","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Explain":{"class":{"descriptions":{"short":"An ast visitor that compiles a dom document explaining the selector","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Ast\\Visitor\\Overload":{"class":{"descriptions":{"short":"An abstract visitor class that includes a mapping between functions and classes,\nsimulating overloading.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Ast\\Visitor\\Xpath":{"class":{"descriptions":{"short":"An visitor that compiles the AST into a xpath expression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$defaultPrefix"],"docParameters":{"$options":{"type":"integer","description":""},"$defaultPrefix":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Create visitor and store mode options","long":""},"deprecated":false}}}},"PhpCss\\Exception":{"class":{"descriptions":{"short":"Abstract superclass for PhpCss exceptions","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Exception\\InvalidCharacter":{"class":{"descriptions":{"short":"Exception thrown if a scanner status finds does not\nfind a valid character.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$buffer","$offset","$status"],"optionals":[],"docParameters":{"$buffer":{"type":"string","description":""},"$offset":{"type":"int","description":""},"$status":{"type":"\\PhpCss\\Scanner\\Status","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\NotConvertable":{"class":{"descriptions":{"short":"Exception thrown if a visitor finds something that it can not use.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$target"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\Parser":{"class":{"descriptions":{"short":"Exception thrown if a parse error occurs","long":"A parse error occurs if certain tokens are expected for further parsing, but\nnone of them are found on the token stream"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\Token":{"class":{"descriptions":{"short":"Exception thrown if a parse error occurs","long":"A parse error occurs if certain tokens are expected for further parsing, but\nnone of them are found on the token stream"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token","$message"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\TokenMismatch":{"class":{"descriptions":{"short":"Exception thrown if a token is encountered which was not expected.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$encounteredToken","$expectedTokens"],"optionals":[],"docParameters":{"$encounteredToken":{"type":"PhpCss\\Scanner\\Token","description":""},"$expectedTokens":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnexpectedEndOfFile":{"class":{"descriptions":{"short":"Exception thrown if an unexpected end of file is detected.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedTokens"],"optionals":[],"docParameters":{"$expectedTokens":{"type":"array(PhpCss\\Scanner\\Token)","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnknownPseudoClass":{"class":{"descriptions":{"short":"Exception thrown if an a pseudo class is found and the name is not known.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":[],"docParameters":{"$token":{"type":"PhpCss\\Scanner\\Token","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Exception\\UnknownPseudoElement":{"class":{"descriptions":{"short":"Exception thrown if an a pseudo element is found and the name is not known.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$token"],"optionals":[],"docParameters":{"$token":{"type":"PhpCss\\Scanner\\Token","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PhpCss\\Parser":{"class":{"descriptions":{"short":"Abstract class implementing functionality to ease parsing in extending\nsubparsers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Attribute":{"class":{"descriptions":{"short":"The attribute parser parses a simple attribute selector.","long":"The attribute value can be an string if a string start is found it delegates to a string\nparser."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\PseudoClass":{"class":{"descriptions":{"short":"The attribute parser parses a simple attribute selector.","long":"The attribute value can be an string if a string start is found it delegates to a string\nparser."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Sequence":{"class":{"descriptions":{"short":"The Sequence parser parses a list of simple selector tokens into the AST.","long":"It delegates to separate parsers for pseudo classes and attributes.\n\nA css combinator delegates to a new instance of this class."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Standard":{"class":{"descriptions":{"short":"Default parsing status, expecting a group of selector sequences","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Parser\\Text":{"class":{"descriptions":{"short":"The string parser collects all string character tokens until a string end token is found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$tokens"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Construct a parser object taking the token list to operate on as\nargument","long":""},"deprecated":false}}}},"PhpCss\\Scanner":{"class":{"descriptions":{"short":"Scans a string and creates list of tokens.","long":"The actual result depends on the status, the status\nclass does the actual token matching and generation, the scanner handles, to loops and\ndelegations."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$status"],"optionals":[],"docParameters":{"$status":{"type":"Scanner\\Status","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor, set status object","long":""},"deprecated":false}}}},"PhpCss\\Scanner\\Patterns":{"class":{"descriptions":{"short":"An abstract class providing token regex pattern for repeated usage.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status":{"class":{"descriptions":{"short":"Abstract superclass for all scanner status implementations","long":"It defines the API and provides basic logic to match patterns."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Selector":{"class":{"descriptions":{"short":"Scanner Status Selector recognizes token of a css selector sequence.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Selector\\Attribute":{"class":{"descriptions":{"short":"Scan attribute selectors","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Text\\Double":{"class":{"descriptions":{"short":"Double quote string status for the scanner","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Status\\Text\\Single":{"class":{"descriptions":{"short":"Single quote string status for the scanner","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PhpCss\\Scanner\\Token":{"class":{"descriptions":{"short":"An element (token) generated by the scan","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$content","$position"],"docParameters":{"$type":{"type":"integer","description":""},"$content":{"type":"string","description":""},"$position":{"type":"integer","description":""}},"throws":[],"return":{"type":"Token","description":""},"descriptions":{"short":"Construct and initialize token","long":""},"deprecated":false}}}},"Psr\\Http\\Message\\MessageInterface":{"class":{"descriptions":{"short":"HTTP messages consist of requests from a client to a server and responses\nfrom a server to a client. This interface defines the methods common to\neach.","long":"Messages are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\RequestInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, client-side request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nDuring construction, implementations MUST attempt to set the Host header from\na provided URI if no Host header is provided.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ResponseInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, server-side response.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- Status code and reason phrase\n- Headers\n- Message body\n\nResponses are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ServerRequestInterface":{"class":{"descriptions":{"short":"Representation of an incoming, server-side HTTP request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nAdditionally, it encapsulates all data as it has arrived to the\napplication from the CGI and\/or PHP environment, including:\n\n- The values represented in $_SERVER.\n- Any cookies provided (generally via $_COOKIE)\n- Query string arguments (generally via $_GET, or as parsed via parse_str())\n- Upload files, if any (as represented by $_FILES)\n- Deserialized body parameters (generally from $_POST)\n\n$_SERVER values MUST be treated as immutable, as they represent application\nstate at the time of request; as such, no methods are provided to allow\nmodification of those values. The other values provide such methods, as they\ncan be restored from $_SERVER or the request body, and may need treatment\nduring the application (e.g., body parameters may be deserialized based on\ncontent type).\n\nAdditionally, this interface recognizes the utility of introspecting a\nrequest to derive and match additional parameters (e.g., via URI path\nmatching, decrypting cookie values, deserializing non-form-encoded body\ncontent, matching authorization headers to users, etc). These parameters\nare stored in an \"attributes\" property.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\StreamInterface":{"class":{"descriptions":{"short":"Describes a data stream.","long":"Typically, an instance will wrap a PHP stream; this interface provides\na wrapper around the most common operations, including serialization of\nthe entire stream to a string."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UploadedFileInterface":{"class":{"descriptions":{"short":"Value object representing a file uploaded through an HTTP request.","long":"Instances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UriInterface":{"class":{"descriptions":{"short":"Value object representing a URI.","long":"This interface is meant to represent URIs according to RFC 3986 and to\nprovide methods for most common operations. Additional functionality for\nworking with URIs can be provided on top of the interface or externally.\nIts primary use is for HTTP requests, but may also be used in other\ncontexts.\n\nInstances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state.\n\nTypically the Host header will be also be present in the request message.\nFor server-side requests, the scheme will typically be discoverable in the\nserver parameters."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\AbstractLogger":{"class":{"descriptions":{"short":"This is a simple Logger implementation that other Loggers can inherit from.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Psr\\Log\\LogLevel":{"class":{"descriptions":{"short":"Describes log levels.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareInterface":{"class":{"descriptions":{"short":"Describes a logger-aware instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareTrait":{"class":{"descriptions":{"short":"Basic Implementation of LoggerAwareInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerInterface":{"class":{"descriptions":{"short":"Describes a logger instance.","long":"The message MUST be a string or object implementing __toString().\n\nThe message MAY contain placeholders in the form: {foo} where foo\nwill be replaced by the context data in key \"foo\".\n\nThe context array can contain arbitrary data. The only assumption that\ncan be made by implementors is that if an Exception instance is given\nto produce a stack trace, it MUST be in a key named \"exception\".\n\nSee https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-3-logger-interface.md\nfor the full interface specification."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerTrait":{"class":{"descriptions":{"short":"This is a simple Logger trait that classes unable to extend AbstractLogger\n(because they extend another class, etc) can include.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\NullLogger":{"class":{"descriptions":{"short":"This Logger can be used to avoid conditional log calls.","long":"Logging should always be optional, and if no logger is provided to your\nlibrary creating a NullLogger instance to have something to throw logs at\nis a good way to avoid littering your code with `if ($this->logger) { }`\nblocks."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Analyser":{"class":{"descriptions":{"short":"Extract swagger-php annotations from a [PHPDoc](http:\/\/en.wikipedia.org\/wiki\/PHPDoc) using Doctrine's DocParser.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$docParser"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Analysis":{"class":{"descriptions":{"short":"Result of the analyser which pretends to be an array of annotations, but also contains detected classes and helper functions for the processors.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$annotations","$context"],"docParameters":{"$annotations":{"type":"array","description":""},"$context":{"type":"null","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\AbstractAnnotation":{"class":{"descriptions":{"short":"The swagger annotation base class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Contact":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Definition":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Delete":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\ExternalDocumentation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Get":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Head":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Header":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Info":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Items":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\License":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Operation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Options":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Parameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Patch":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Path":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Post":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Property":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Put":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Response":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Schema":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\SecurityScheme":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Swagger":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Tag":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Annotations\\Xml":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$properties"],"optionals":[],"docParameters":{"$properties":{"type":"array","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Context":{"class":{"descriptions":{"short":"Context","long":"The context in which the annotation is parsed.\nIt includes useful metadata which the Processors can use to augment the annotations.\n\nContext hierarchy:\n- parseContext\n|- docBlockContext\n|- classContext\n|- docBlockContext\n|- propertyContext\n|- methodContext"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$properties","$parent"],"docParameters":{"$properties":{"type":"array","description":"new properties for this context."},"$parent":{"type":"Context","description":"The parent context"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Logger":{"class":{"descriptions":{"short":"Logger reports the parser and validation messages.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Processors\\AugmentDefinitions":{"class":{"descriptions":{"short":"Use the definition context to extract useful information and inject that into the annotation.\nMerges properties into","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentOperations":{"class":{"descriptions":{"short":"Use the operation context to extract useful information and inject that into the annotation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentParameters":{"class":{"descriptions":{"short":"Use the parameter->name as keyfield (parameter->parameter) when used in swagger object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\AugmentProperties":{"class":{"descriptions":{"short":"Use the property context to extract useful information and inject that into the annotation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\BuildPaths":{"class":{"descriptions":{"short":"Build the swagger->paths using the detected @SWG\\Path and @SWG\\Operations (like @SWG\\Get, @SWG\\Post, etc)","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\CleanUnmerged":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\HandleReferences":{"class":{"descriptions":{"short":"Copy the annotated properties from parent classes;","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\InheritProperties":{"class":{"descriptions":{"short":"Copy the annotated properties from parent classes;","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Processors\\MergeIntoSwagger":{"class":{"descriptions":{"short":"Merge all @SWG\\Swagger annotations into one.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\Serializer":{"class":{"descriptions":{"short":"Class AnnotationDeserializer is used to deserialize a json string\nto a specific Swagger PHP Annotation class and vice versa.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Swagger\\StaticAnalyser":{"class":{"descriptions":{"short":"Swagger\\StaticAnalyser extracts swagger-php annotations from php code using static analysis.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$filename"],"docParameters":{"$filename":{"type":"string","description":""}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Swagger\\Util":{"class":{"descriptions":{"short":"Convenient utility functions that don't neatly fit anywhere else","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Comparator\\Comparator":{"class":{"descriptions":{"short":"Comparator.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Comparator\\DateComparator":{"class":{"descriptions":{"short":"DateCompare compiles date comparisons.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"string","description":"A comparison string"}},"throws":{"\\InvalidArgumentException":"If the test is not understood"},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Comparator\\NumberComparator":{"class":{"descriptions":{"short":"NumberComparator compiles a simple comparison to an anonymous\nsubroutine, which you can call with a value to be tested again.","long":"Now this would be very pointless, if NumberCompare didn't understand\nmagnitudes.\n\nThe target value may use magnitudes of kilobytes (k, ki),\nmegabytes (m, mi), or gigabytes (g, gi).  Those suffixed\nwith an i use the appropriate 2**n version in accordance with the\nIEC standard: http:\/\/physics.nist.gov\/cuu\/Units\/binary.html\n\nBased on the Perl Number::Compare module.\n\n@author    Fabien Potencier <fabien@symfony.com> PHP port\n@author    Richard Clamp <richardc@unixbeard.net> Perl version\n@copyright 2004-2005 Fabien Potencier <fabien@symfony.com>\n@copyright 2002 Richard Clamp <richardc@unixbeard.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"string|int","description":"A comparison string or an integer"}},"throws":{"\\InvalidArgumentException":"If the test is not understood"},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Exception\\AccessDeniedException":{"class":{"descriptions":{"short":"@author Jean-Fran\u00c3\u00a7ois Simon <jeanfrancois.simon@sensiolabs.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"@author Jean-Fran\u00c3\u00a7ois Simon <contact@jfsimon.fr>","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Finder":{"class":{"descriptions":{"short":"Finder allows to build rules to find files and directories.","long":"It is a thin wrapper around several specialized iterator classes.\n\nAll rules may be invoked several times.\n\nAll methods return the current Finder object to allow easy chaining:\n\n$finder = Finder::create()->files()->name('*.php')->in(__DIR__);\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Glob":{"class":{"descriptions":{"short":"Glob matches globbing patterns against text.","long":"if match_glob(\"foo.*\", \"foo.bar\") echo \"matched\\n\";\n\n\/\/ prints foo.bar and foo.baz\n$regex = glob_to_regex(\"foo.*\");\nfor (array('foo.bar', 'foo.baz', 'foo', 'bar') as $t)\n{\nif (\/$regex\/) echo \"matched: $car\\n\";\n}\n\nGlob implements glob(3) style matching that can be used to match\nagainst text, rather than fetching names from a filesystem.\n\nBased on the Perl Text::Glob module.\n\n@author Fabien Potencier <fabien@symfony.com> PHP port\n@author     Richard Clamp <richardc@unixbeard.net> Perl version\n@copyright  2004-2005 Fabien Potencier <fabien@symfony.com>\n@copyright  2002 Richard Clamp <richardc@unixbeard.net>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Finder\\Iterator\\CustomFilterIterator":{"class":{"descriptions":{"short":"CustomFilterIterator filters files by applying anonymous functions.","long":"The anonymous function receives a \\SplFileInfo and must return false\nto remove files.\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$filters"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$filters":{"type":"callable[]","description":"An array of PHP callbacks"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\DateRangeFilterIterator":{"class":{"descriptions":{"short":"DateRangeFilterIterator filters out files that are not in the given date range (last modified dates).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$comparators"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$comparators":{"type":"DateComparator[]","description":"An array of DateComparator instances"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\DepthRangeFilterIterator":{"class":{"descriptions":{"short":"DepthRangeFilterIterator limits the directory depth.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$minDepth","$maxDepth"],"docParameters":{"$iterator":{"type":"\\RecursiveIteratorIterator","description":"The Iterator to filter"},"$minDepth":{"type":"int","description":"The min depth"},"$maxDepth":{"type":"int","description":"The max depth"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\ExcludeDirectoryFilterIterator":{"class":{"descriptions":{"short":"ExcludeDirectoryFilterIterator filters out directories.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$directories"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$directories":{"type":"array","description":"An array of directories to exclude"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FileTypeFilterIterator":{"class":{"descriptions":{"short":"FileTypeFilterIterator only keeps files, directories, or both.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$mode"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$mode":{"type":"int","description":"The mode (self::ONLY_FILES or self::ONLY_DIRECTORIES)"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilecontentFilterIterator":{"class":{"descriptions":{"short":"FilecontentFilterIterator filters files by their contents using patterns (regexps or strings).","long":"@author Fabien Potencier  <fabien@symfony.com>\n@author W\u00c5\u0082odzimierz Gajda <gajdaw@gajdaw.pl>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilenameFilterIterator":{"class":{"descriptions":{"short":"FilenameFilterIterator filters files by patterns (a regexp, a glob, or a string).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\FilterIterator":{"class":{"descriptions":{"short":"This iterator just overrides the rewind method in order to correct a PHP bug,\nwhich existed before version 5.5.23\/5.6.7.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\MultiplePcreFilterIterator":{"class":{"descriptions":{"short":"MultiplePcreFilterIterator filters files using patterns (regexps, globs or strings).","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\PathFilterIterator":{"class":{"descriptions":{"short":"PathFilterIterator filters files by path patterns (e.g. some\/special\/dir).","long":"@author Fabien Potencier  <fabien@symfony.com>\n@author W\u00c5\u0082odzimierz Gajda <gajdaw@gajdaw.pl>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$matchPatterns","$noMatchPatterns"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$matchPatterns":{"type":"array","description":"An array of patterns that need to match"},"$noMatchPatterns":{"type":"array","description":"An array of patterns that need to not match"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"Extends the \\RecursiveDirectoryIterator to support relative paths.","long":"@author Victor Berchet <victor@suumit.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path","$flags"],"optionals":["$ignoreUnreadableDirs"],"docParameters":{"$path":{"type":"string","description":""},"$flags":{"type":"int","description":""},"$ignoreUnreadableDirs":{"type":"bool","description":""}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\SizeRangeFilterIterator":{"class":{"descriptions":{"short":"SizeRangeFilterIterator filters out files that are not in the given size range.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$comparators"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Iterator","description":"The Iterator to filter"},"$comparators":{"type":"NumberComparator[]","description":"An array of NumberComparator instances"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\Iterator\\SortableIterator":{"class":{"descriptions":{"short":"SortableIterator applies a sort on a given Iterator.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$sort"],"optionals":[],"docParameters":{"$iterator":{"type":"\\Traversable","description":"The Iterator to filter"},"$sort":{"type":"int|callable","description":"The sort type (SORT_BY_NAME, SORT_BY_TYPE, or a PHP callback)"}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Finder\\SplFileInfo":{"class":{"descriptions":{"short":"Extends \\SplFileInfo to support relative paths.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file","$relativePath","$relativePathname"],"optionals":[],"docParameters":{"$file":{"type":"string","description":"The file name"},"$relativePath":{"type":"string","description":"The relative path"},"$relativePathname":{"type":"string","description":"The relative path name"}},"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"stdClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ErrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$severity","$filename","$lineno","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Error":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParseError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"TypeError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArithmeticError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DivisionByZeroError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Generator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ClosedGeneratorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeImmutable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeZone":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$timezone"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateInterval":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$interval_spec"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DatePeriod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$start","$interval","$end"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LibXMLError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SQLite3":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$encryption_key"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sqlite3"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CURLFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$mimetype","$postname"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameSpaceNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDocumentFragment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMNodeList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNamedNodeMap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCharacterData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMAttr":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMText":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMComment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMTypeinfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMUserDataHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDomError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMErrorHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMLocator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMConfiguration":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCdataSection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocumentType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNotation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntity":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntityReference":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMProcessingInstruction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringExtend":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMXPath":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doc"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"finfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$arg"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadFunctionCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DomainException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LengthException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OverflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnderflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnexpectedValueException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveIteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$mode","$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParentIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LimitIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$offset","$count"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"NoRewindIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"AppendIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InfiniteIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveRegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"EmptyIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"RecursiveTreeIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags","$caching_it_flags","$mode"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilesystemIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GlobIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":["$open_mode","$use_include_path","$context"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplTempFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$max_memory"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplStack":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMinHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMaxHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplPriorityQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplFixedArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$size"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplObjectStorage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MultipleIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$flags"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SessionHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"__PHP_Incomplete_Class":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"php_user_filter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"AssertionError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$username","$passwd","$options"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOStatement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PDORow":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PharException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Phar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Reflection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunctionAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$generator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionParameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$function","$parameter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class_or_method"],"optionals":["$name"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionProperty":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionZendExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_sql_exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_driver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$host","$user","$password","$database","$port","$socket"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_warning":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapVar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$encoding"],"optionals":["$type_name","$type_namespace","$node_name","$node_namespace"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapServer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapFault":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$faultcode","$faultstring"],"optionals":["$faultactor","$detail","$faultname","$headerfault"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapParam":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapHeader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace","$name"],"optionals":["$data","$mustunderstand","$actor"],"docParameters":[],"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"XMLReader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XMLWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XSLTProcessor":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ZipArchive":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}}},"autocomplete":["Doctrine\\Common\\Annotations\\Annotation","Doctrine\\Common\\Annotations\\AnnotationException","Doctrine\\Common\\Annotations\\AnnotationReader","Doctrine\\Common\\Annotations\\AnnotationRegistry","Doctrine\\Common\\Annotations\\Annotation\\Attribute","Doctrine\\Common\\Annotations\\Annotation\\Attributes","Doctrine\\Common\\Annotations\\Annotation\\Enum","Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation","Doctrine\\Common\\Annotations\\Annotation\\Required","Doctrine\\Common\\Annotations\\Annotation\\Target","Doctrine\\Common\\Annotations\\CachedReader","Doctrine\\Common\\Annotations\\DocLexer","Doctrine\\Common\\Annotations\\DocParser","Doctrine\\Common\\Annotations\\FileCacheReader","Doctrine\\Common\\Annotations\\IndexedReader","Doctrine\\Common\\Annotations\\PhpParser","Doctrine\\Common\\Annotations\\Reader","Doctrine\\Common\\Annotations\\SimpleAnnotationReader","Doctrine\\Common\\Annotations\\TokenParser","Doctrine\\Common\\Lexer\\AbstractLexer","Elastica\\AbstractUpdateAction","Elastica\\Aggregation\\AbstractAggregation","Elastica\\Aggregation\\AbstractSimpleAggregation","Elastica\\Aggregation\\Avg","Elastica\\Aggregation\\Cardinality","Elastica\\Aggregation\\DateHistogram","Elastica\\Aggregation\\DateRange","Elastica\\Aggregation\\ExtendedStats","Elastica\\Aggregation\\Filter","Elastica\\Aggregation\\Filters","Elastica\\Aggregation\\GeoDistance","Elastica\\Aggregation\\GeohashGrid","Elastica\\Aggregation\\GlobalAggregation","Elastica\\Aggregation\\Histogram","Elastica\\Aggregation\\IpRange","Elastica\\Aggregation\\Max","Elastica\\Aggregation\\Min","Elastica\\Aggregation\\Missing","Elastica\\Aggregation\\Nested","Elastica\\Aggregation\\Range","Elastica\\Aggregation\\ReverseNested","Elastica\\Aggregation\\ScriptedMetric","Elastica\\Aggregation\\Stats","Elastica\\Aggregation\\Sum","Elastica\\Aggregation\\Terms","Elastica\\Aggregation\\TopHits","Elastica\\Aggregation\\ValueCount","Elastica\\Bulk","Elastica\\Bulk\\Action","Elastica\\Bulk\\Action\\AbstractDocument","Elastica\\Bulk\\Action\\CreateDocument","Elastica\\Bulk\\Action\\DeleteDocument","Elastica\\Bulk\\Action\\IndexDocument","Elastica\\Bulk\\Action\\UpdateDocument","Elastica\\Bulk\\Response","Elastica\\Bulk\\ResponseSet","Elastica\\Client","Elastica\\Cluster","Elastica\\Cluster\\Health","Elastica\\Cluster\\Health\\Index","Elastica\\Cluster\\Health\\Shard","Elastica\\Cluster\\Settings","Elastica\\Connection","Elastica\\Connection\\ConnectionPool","Elastica\\Connection\\Strategy\\CallbackStrategy","Elastica\\Connection\\Strategy\\RoundRobin","Elastica\\Connection\\Strategy\\Simple","Elastica\\Connection\\Strategy\\StrategyFactory","Elastica\\Connection\\Strategy\\StrategyInterface","Elastica\\Exception\\BulkException","Elastica\\Exception\\Bulk\\ResponseException","Elastica\\Exception\\Bulk\\Response\\ActionException","Elastica\\Exception\\Bulk\\UdpException","Elastica\\Exception\\ClientException","Elastica\\Exception\\ConnectionException","Elastica\\Exception\\Connection\\GuzzleException","Elastica\\Exception\\Connection\\HttpException","Elastica\\Exception\\Connection\\MemcacheException","Elastica\\Exception\\Connection\\ThriftException","Elastica\\Exception\\ElasticsearchException","Elastica\\Exception\\ExceptionInterface","Elastica\\Exception\\InvalidException","Elastica\\Exception\\JSONParseException","Elastica\\Exception\\NotFoundException","Elastica\\Exception\\NotImplementedException","Elastica\\Exception\\PartialShardFailureException","Elastica\\Exception\\QueryBuilderException","Elastica\\Exception\\ResponseException","Elastica\\Exception\\RuntimeException","Elastica\\Facet\\AbstractFacet","Elastica\\Facet\\DateHistogram","Elastica\\Facet\\Filter","Elastica\\Facet\\GeoCluster","Elastica\\Facet\\GeoDistance","Elastica\\Facet\\Histogram","Elastica\\Facet\\Query","Elastica\\Facet\\Range","Elastica\\Facet\\Statistical","Elastica\\Facet\\Terms","Elastica\\Facet\\TermsStats","Elastica\\Filter\\AbstractFilter","Elastica\\Filter\\AbstractGeoDistance","Elastica\\Filter\\AbstractGeoShape","Elastica\\Filter\\AbstractMulti","Elastica\\Filter\\BoolAnd","Elastica\\Filter\\BoolNot","Elastica\\Filter\\BoolOr","Elastica\\Filter\\Exists","Elastica\\Filter\\GeoBoundingBox","Elastica\\Filter\\GeoDistance","Elastica\\Filter\\GeoDistanceRange","Elastica\\Filter\\GeoPolygon","Elastica\\Filter\\GeoShapePreIndexed","Elastica\\Filter\\GeoShapeProvided","Elastica\\Filter\\GeohashCell","Elastica\\Filter\\HasChild","Elastica\\Filter\\HasParent","Elastica\\Filter\\Ids","Elastica\\Filter\\Indices","Elastica\\Filter\\Limit","Elastica\\Filter\\MatchAll","Elastica\\Filter\\Missing","Elastica\\Filter\\Nested","Elastica\\Filter\\NumericRange","Elastica\\Filter\\Prefix","Elastica\\Filter\\Query","Elastica\\Filter\\Range","Elastica\\Filter\\Regexp","Elastica\\Filter\\Script","Elastica\\Filter\\Term","Elastica\\Filter\\Terms","Elastica\\Filter\\Type","Elastica\\Index","Elastica\\Index\\Settings","Elastica\\Index\\Stats","Elastica\\Index\\Status","Elastica\\JSON","Elastica\\Log","Elastica\\Multi\\ResultSet","Elastica\\Multi\\Search","Elastica\\Node","Elastica\\Node\\Info","Elastica\\Node\\Stats","Elastica\\Param","Elastica\\Percolator","Elastica\\Query","Elastica\\QueryBuilder","Elastica\\QueryBuilder\\DSL","Elastica\\QueryBuilder\\DSL\\Aggregation","Elastica\\QueryBuilder\\DSL\\Suggest","Elastica\\QueryBuilder\\Facade","Elastica\\QueryBuilder\\Version","Elastica\\QueryBuilder\\Version\\Version090","Elastica\\QueryBuilder\\Version\\Version100","Elastica\\QueryBuilder\\Version\\Version110","Elastica\\QueryBuilder\\Version\\Version120","Elastica\\QueryBuilder\\Version\\Version130","Elastica\\QueryBuilder\\Version\\Version140","Elastica\\Query\\AbstractQuery","Elastica\\Query\\Boosting","Elastica\\Query\\Builder","Elastica\\Query\\Common","Elastica\\Query\\ConstantScore","Elastica\\Query\\DisMax","Elastica\\Query\\Filtered","Elastica\\Query\\FunctionScore","Elastica\\Query\\Fuzzy","Elastica\\Query\\FuzzyLikeThis","Elastica\\Query\\HasChild","Elastica\\Query\\HasParent","Elastica\\Query\\Ids","Elastica\\Query\\Match","Elastica\\Query\\MatchAll","Elastica\\Query\\MatchPhrase","Elastica\\Query\\MatchPhrasePrefix","Elastica\\Query\\MoreLikeThis","Elastica\\Query\\MultiMatch","Elastica\\Query\\Nested","Elastica\\Query\\Prefix","Elastica\\Query\\QueryString","Elastica\\Query\\Range","Elastica\\Query\\Regexp","Elastica\\Query\\Simple","Elastica\\Query\\SimpleQueryString","Elastica\\Query\\Term","Elastica\\Query\\Terms","Elastica\\Query\\TopChildren","Elastica\\Query\\Wildcard","Elastica\\Request","Elastica\\Rescore\\AbstractRescore","Elastica\\Rescore\\Query","Elastica\\Response","Elastica\\Result","Elastica\\ResultSet","Elastica\\ScanAndScroll","Elastica\\Script","Elastica\\ScriptFields","Elastica\\Search","Elastica\\SearchableInterface","Elastica\\Snapshot","Elastica\\Status","Elastica\\Suggest","Elastica\\Suggest\\AbstractSuggest","Elastica\\Suggest\\CandidateGenerator\\AbstractCandidateGenerator","Elastica\\Suggest\\CandidateGenerator\\DirectGenerator","Elastica\\Suggest\\Phrase","Elastica\\Suggest\\Term","Elastica\\Transport\\AbstractTransport","Elastica\\Transport\\Guzzle","Elastica\\Transport\\Http","Elastica\\Transport\\HttpAdapter","Elastica\\Transport\\Https","Elastica\\Transport\\Memcache","Elastica\\Transport\\Thrift","Elastica\\Type","Elastica\\Type\\AbstractType","Elastica\\Type\\Mapping","Elastica\\Util","FluentDOM\\Appendable","FluentDOM\\Attribute","FluentDOM\\CdataSection","FluentDOM\\Comment","FluentDOM\\Constraints","FluentDOM\\Document","FluentDOM\\DocumentFragment","FluentDOM\\Element","FluentDOM\\Exception","FluentDOM\\Exceptions\\InvalidArgument","FluentDOM\\Exceptions\\InvalidFragmentLoader","FluentDOM\\Exceptions\\InvalidSerializer","FluentDOM\\Exceptions\\InvalidSource","FluentDOM\\Exceptions\\InvalidSource\\TypeFile","FluentDOM\\Exceptions\\InvalidSource\\TypeString","FluentDOM\\Exceptions\\InvalidSource\\Variable","FluentDOM\\Exceptions\\LoadingError","FluentDOM\\Exceptions\\LoadingError\\EmptyResult","FluentDOM\\Exceptions\\LoadingError\\EmptySource","FluentDOM\\Exceptions\\LoadingError\\Json","FluentDOM\\Exceptions\\LoadingError\\Libxml","FluentDOM\\Exceptions\\NoSerializer","FluentDOM\\HHVM\\Properties","FluentDOM\\Iterators\\ElementIterator","FluentDOM\\Iterators\\IndexIterator","FluentDOM\\Iterators\\MapIterator","FluentDOM\\Iterators\\NodesIterator","FluentDOM\\Loadable","FluentDOM\\Loader\\Html","FluentDOM\\Loader\\JSONx","FluentDOM\\Loader\\Json","FluentDOM\\Loader\\Json\\BadgerFish","FluentDOM\\Loader\\Json\\JsonDOM","FluentDOM\\Loader\\Json\\JsonML","FluentDOM\\Loader\\Json\\Rayfish","FluentDOM\\Loader\\Json\\SimpleXML","FluentDOM\\Loader\\Lazy","FluentDOM\\Loader\\Libxml\\Errors","FluentDOM\\Loader\\Options","FluentDOM\\Loader\\PHP","FluentDOM\\Loader\\PHP\\PDO","FluentDOM\\Loader\\PHP\\SimpleXml","FluentDOM\\Loader\\Result","FluentDOM\\Loader\\Standard","FluentDOM\\Loader\\Supports","FluentDOM\\Loader\\Supports\\Json","FluentDOM\\Loader\\Supports\\Libxml","FluentDOM\\Loader\\Text","FluentDOM\\Loader\\Text\\CSV","FluentDOM\\Loader\\Xml","FluentDOM\\Loaders","FluentDOM\\Node\\ChildNode","FluentDOM\\Node\\ChildNode\\Implementation","FluentDOM\\Node\\MutationMacro","FluentDOM\\Node\\NonDocumentTypeChildNode","FluentDOM\\Node\\NonDocumentTypeChildNode\\Implementation","FluentDOM\\Node\\NonDocumentTypeChildNode\\Properties","FluentDOM\\Node\\ParentNode","FluentDOM\\Node\\ParentNode\\Implementation","FluentDOM\\Node\\ParentNode\\Properties","FluentDOM\\Node\\QuerySelector","FluentDOM\\Node\\QuerySelector\\Implementation","FluentDOM\\Node\\StringCast","FluentDOM\\Node\\WholeText","FluentDOM\\Node\\Xpath","FluentDOM\\Nodes","FluentDOM\\Nodes\\Builder","FluentDOM\\Nodes\\Compare","FluentDOM\\Nodes\\Creator","FluentDOM\\Nodes\\Creator\\Node","FluentDOM\\Nodes\\Creator\\Nodes","FluentDOM\\Nodes\\Fetcher","FluentDOM\\Nodes\\Modifier","FluentDOM\\ProcessingInstruction","FluentDOM\\QualifiedName","FluentDOM\\Query","FluentDOM\\Query\\Attributes","FluentDOM\\Query\\Css","FluentDOM\\Query\\Css\\Properties","FluentDOM\\Query\\Css\\PropertyCompare","FluentDOM\\Query\\Data","FluentDOM\\Serializer\\Factory","FluentDOM\\Serializer\\Factory\\Group","FluentDOM\\Serializer\\Html","FluentDOM\\Serializer\\Json","FluentDOM\\Serializer\\Json\\BadgerFish","FluentDOM\\Serializer\\Json\\JsonML","FluentDOM\\Serializer\\Json\\RabbitFish","FluentDOM\\Serializer\\Json\\Rayfish","FluentDOM\\Serializer\\Xml","FluentDOM\\Text","FluentDOM\\Transformer\\JSONx","FluentDOM\\Transformer\\Namespaces\\Optimize","FluentDOM\\Transformer\\Namespaces\\Replace","FluentDOM\\XmlSerializable","FluentDOM\\XmlSerialize","FluentDOM\\Xpath","FluentDOM\\Xpath\\Transformer","GuzzleHttp\\Client","GuzzleHttp\\ClientInterface","GuzzleHttp\\Cookie\\CookieJar","GuzzleHttp\\Cookie\\CookieJarInterface","GuzzleHttp\\Cookie\\FileCookieJar","GuzzleHttp\\Cookie\\SessionCookieJar","GuzzleHttp\\Cookie\\SetCookie","GuzzleHttp\\Exception\\BadResponseException","GuzzleHttp\\Exception\\ClientException","GuzzleHttp\\Exception\\ConnectException","GuzzleHttp\\Exception\\GuzzleException","GuzzleHttp\\Exception\\RequestException","GuzzleHttp\\Exception\\SeekException","GuzzleHttp\\Exception\\ServerException","GuzzleHttp\\Exception\\TooManyRedirectsException","GuzzleHttp\\Exception\\TransferException","GuzzleHttp\\HandlerStack","GuzzleHttp\\Handler\\CurlFactory","GuzzleHttp\\Handler\\CurlFactoryInterface","GuzzleHttp\\Handler\\CurlHandler","GuzzleHttp\\Handler\\CurlMultiHandler","GuzzleHttp\\Handler\\EasyHandle","GuzzleHttp\\Handler\\MockHandler","GuzzleHttp\\Handler\\Proxy","GuzzleHttp\\Handler\\StreamHandler","GuzzleHttp\\MessageFormatter","GuzzleHttp\\Middleware","GuzzleHttp\\Pool","GuzzleHttp\\PrepareBodyMiddleware","GuzzleHttp\\Promise\\AggregateException","GuzzleHttp\\Promise\\CancellationException","GuzzleHttp\\Promise\\Coroutine","GuzzleHttp\\Promise\\EachPromise","GuzzleHttp\\Promise\\FulfilledPromise","GuzzleHttp\\Promise\\Promise","GuzzleHttp\\Promise\\PromiseInterface","GuzzleHttp\\Promise\\PromisorInterface","GuzzleHttp\\Promise\\RejectedPromise","GuzzleHttp\\Promise\\RejectionException","GuzzleHttp\\Promise\\TaskQueue","GuzzleHttp\\Promise\\TaskQueueInterface","GuzzleHttp\\Psr7\\AppendStream","GuzzleHttp\\Psr7\\BufferStream","GuzzleHttp\\Psr7\\CachingStream","GuzzleHttp\\Psr7\\DroppingStream","GuzzleHttp\\Psr7\\FnStream","GuzzleHttp\\Psr7\\InflateStream","GuzzleHttp\\Psr7\\LazyOpenStream","GuzzleHttp\\Psr7\\LimitStream","GuzzleHttp\\Psr7\\MessageTrait","GuzzleHttp\\Psr7\\MultipartStream","GuzzleHttp\\Psr7\\NoSeekStream","GuzzleHttp\\Psr7\\PumpStream","GuzzleHttp\\Psr7\\Request","GuzzleHttp\\Psr7\\Response","GuzzleHttp\\Psr7\\ServerRequest","GuzzleHttp\\Psr7\\Stream","GuzzleHttp\\Psr7\\StreamDecoratorTrait","GuzzleHttp\\Psr7\\StreamWrapper","GuzzleHttp\\Psr7\\UploadedFile","GuzzleHttp\\Psr7\\Uri","GuzzleHttp\\Psr7\\UriNormalizer","GuzzleHttp\\Psr7\\UriResolver","GuzzleHttp\\RedirectMiddleware","GuzzleHttp\\RequestOptions","GuzzleHttp\\RetryMiddleware","GuzzleHttp\\TransferStats","GuzzleHttp\\UriTemplate","Monolog\\ErrorHandler","Monolog\\Formatter\\ChromePHPFormatter","Monolog\\Formatter\\ElasticaFormatter","Monolog\\Formatter\\FlowdockFormatter","Monolog\\Formatter\\FluentdFormatter","Monolog\\Formatter\\FormatterInterface","Monolog\\Formatter\\GelfMessageFormatter","Monolog\\Formatter\\HtmlFormatter","Monolog\\Formatter\\JsonFormatter","Monolog\\Formatter\\LineFormatter","Monolog\\Formatter\\LogglyFormatter","Monolog\\Formatter\\LogstashFormatter","Monolog\\Formatter\\MongoDBFormatter","Monolog\\Formatter\\NormalizerFormatter","Monolog\\Formatter\\ScalarFormatter","Monolog\\Formatter\\WildfireFormatter","Monolog\\Handler\\AbstractHandler","Monolog\\Handler\\AbstractProcessingHandler","Monolog\\Handler\\AbstractSyslogHandler","Monolog\\Handler\\AmqpHandler","Monolog\\Handler\\BrowserConsoleHandler","Monolog\\Handler\\BufferHandler","Monolog\\Handler\\ChromePHPHandler","Monolog\\Handler\\CouchDBHandler","Monolog\\Handler\\CubeHandler","Monolog\\Handler\\Curl\\Util","Monolog\\Handler\\DeduplicationHandler","Monolog\\Handler\\DoctrineCouchDBHandler","Monolog\\Handler\\DynamoDbHandler","Monolog\\Handler\\ElasticSearchHandler","Monolog\\Handler\\ErrorLogHandler","Monolog\\Handler\\FilterHandler","Monolog\\Handler\\FingersCrossedHandler","Monolog\\Handler\\FingersCrossed\\ActivationStrategyInterface","Monolog\\Handler\\FingersCrossed\\ChannelLevelActivationStrategy","Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy","Monolog\\Handler\\FirePHPHandler","Monolog\\Handler\\FleepHookHandler","Monolog\\Handler\\FlowdockHandler","Monolog\\Handler\\GelfHandler","Monolog\\Handler\\GroupHandler","Monolog\\Handler\\HandlerInterface","Monolog\\Handler\\HandlerWrapper","Monolog\\Handler\\HipChatHandler","Monolog\\Handler\\IFTTTHandler","Monolog\\Handler\\LogEntriesHandler","Monolog\\Handler\\LogglyHandler","Monolog\\Handler\\MailHandler","Monolog\\Handler\\MandrillHandler","Monolog\\Handler\\MissingExtensionException","Monolog\\Handler\\MongoDBHandler","Monolog\\Handler\\NativeMailerHandler","Monolog\\Handler\\NewRelicHandler","Monolog\\Handler\\NullHandler","Monolog\\Handler\\PHPConsoleHandler","Monolog\\Handler\\PsrHandler","Monolog\\Handler\\PushoverHandler","Monolog\\Handler\\RavenHandler","Monolog\\Handler\\RedisHandler","Monolog\\Handler\\RollbarHandler","Monolog\\Handler\\RotatingFileHandler","Monolog\\Handler\\SamplingHandler","Monolog\\Handler\\SlackHandler","Monolog\\Handler\\SlackWebhookHandler","Monolog\\Handler\\Slack\\SlackRecord","Monolog\\Handler\\SlackbotHandler","Monolog\\Handler\\SocketHandler","Monolog\\Handler\\StreamHandler","Monolog\\Handler\\SwiftMailerHandler","Monolog\\Handler\\SyslogHandler","Monolog\\Handler\\SyslogUdpHandler","Monolog\\Handler\\SyslogUdp\\UdpSocket","Monolog\\Handler\\TestHandler","Monolog\\Handler\\WhatFailureGroupHandler","Monolog\\Handler\\ZendMonitorHandler","Monolog\\Logger","Monolog\\Processor\\GitProcessor","Monolog\\Processor\\IntrospectionProcessor","Monolog\\Processor\\MemoryPeakUsageProcessor","Monolog\\Processor\\MemoryProcessor","Monolog\\Processor\\MemoryUsageProcessor","Monolog\\Processor\\MercurialProcessor","Monolog\\Processor\\ProcessIdProcessor","Monolog\\Processor\\PsrLogMessageProcessor","Monolog\\Processor\\TagProcessor","Monolog\\Processor\\UidProcessor","Monolog\\Processor\\WebProcessor","Monolog\\Registry","PhpAmqpLib\\Channel\\AMQPChannel","PhpAmqpLib\\Channel\\AbstractChannel","PhpAmqpLib\\Connection\\AMQPConnection","PhpAmqpLib\\Connection\\AMQPLazyConnection","PhpAmqpLib\\Connection\\AMQPLazySocketConnection","PhpAmqpLib\\Connection\\AMQPSSLConnection","PhpAmqpLib\\Connection\\AMQPSocketConnection","PhpAmqpLib\\Connection\\AMQPStreamConnection","PhpAmqpLib\\Connection\\AbstractConnection","PhpAmqpLib\\Exception\\AMQPBasicCancelException","PhpAmqpLib\\Exception\\AMQPChannelException","PhpAmqpLib\\Exception\\AMQPConnectionException","PhpAmqpLib\\Exception\\AMQPException","PhpAmqpLib\\Exception\\AMQPExceptionInterface","PhpAmqpLib\\Exception\\AMQPIOException","PhpAmqpLib\\Exception\\AMQPIOWaitException","PhpAmqpLib\\Exception\\AMQPInvalidArgumentException","PhpAmqpLib\\Exception\\AMQPLogicException","PhpAmqpLib\\Exception\\AMQPOutOfBoundsException","PhpAmqpLib\\Exception\\AMQPOutOfRangeException","PhpAmqpLib\\Exception\\AMQPProtocolChannelException","PhpAmqpLib\\Exception\\AMQPProtocolConnectionException","PhpAmqpLib\\Exception\\AMQPProtocolException","PhpAmqpLib\\Exception\\AMQPRuntimeException","PhpAmqpLib\\Exception\\AMQPTimeoutException","PhpAmqpLib\\Helper\\DebugHelper","PhpAmqpLib\\Helper\\MiscHelper","PhpAmqpLib\\Helper\\Protocol\\MethodMap080","PhpAmqpLib\\Helper\\Protocol\\MethodMap091","PhpAmqpLib\\Helper\\Protocol\\Protocol080","PhpAmqpLib\\Helper\\Protocol\\Protocol091","PhpAmqpLib\\Helper\\Protocol\\Wait080","PhpAmqpLib\\Helper\\Protocol\\Wait091","PhpAmqpLib\\Message\\AMQPMessage","PhpAmqpLib\\Wire\\AMQPAbstractCollection","PhpAmqpLib\\Wire\\AMQPArray","PhpAmqpLib\\Wire\\AMQPDecimal","PhpAmqpLib\\Wire\\AMQPReader","PhpAmqpLib\\Wire\\AMQPTable","PhpAmqpLib\\Wire\\AMQPWriter","PhpAmqpLib\\Wire\\AbstractClient","PhpAmqpLib\\Wire\\Constants080","PhpAmqpLib\\Wire\\Constants091","PhpAmqpLib\\Wire\\GenericContent","PhpAmqpLib\\Wire\\IO\\AbstractIO","PhpAmqpLib\\Wire\\IO\\SocketIO","PhpAmqpLib\\Wire\\IO\\StreamIO","PhpCss\\Ast","PhpCss\\Ast\\Selector","PhpCss\\Ast\\Selector\\Combinator","PhpCss\\Ast\\Selector\\Combinator\\Child","PhpCss\\Ast\\Selector\\Combinator\\Descendant","PhpCss\\Ast\\Selector\\Combinator\\Follower","PhpCss\\Ast\\Selector\\Combinator\\Next","PhpCss\\Ast\\Selector\\Group","PhpCss\\Ast\\Selector\\Sequence","PhpCss\\Ast\\Selector\\Simple","PhpCss\\Ast\\Selector\\Simple\\Attribute","PhpCss\\Ast\\Selector\\Simple\\ClassName","PhpCss\\Ast\\Selector\\Simple\\Id","PhpCss\\Ast\\Selector\\Simple\\PseudoClass","PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Language","PhpCss\\Ast\\Selector\\Simple\\PseudoClass\\Position","PhpCss\\Ast\\Selector\\Simple\\PseudoElement","PhpCss\\Ast\\Selector\\Simple\\Type","PhpCss\\Ast\\Selector\\Simple\\Universal","PhpCss\\Ast\\Visitor","PhpCss\\Ast\\Visitor\\Css","PhpCss\\Ast\\Visitor\\Explain","PhpCss\\Ast\\Visitor\\Overload","PhpCss\\Ast\\Visitor\\Xpath","PhpCss\\Exception","PhpCss\\Exception\\InvalidCharacter","PhpCss\\Exception\\NotConvertable","PhpCss\\Exception\\Parser","PhpCss\\Exception\\Token","PhpCss\\Exception\\TokenMismatch","PhpCss\\Exception\\UnexpectedEndOfFile","PhpCss\\Exception\\UnknownPseudoClass","PhpCss\\Exception\\UnknownPseudoElement","PhpCss\\Parser","PhpCss\\Parser\\Attribute","PhpCss\\Parser\\PseudoClass","PhpCss\\Parser\\Sequence","PhpCss\\Parser\\Standard","PhpCss\\Parser\\Text","PhpCss\\Scanner","PhpCss\\Scanner\\Patterns","PhpCss\\Scanner\\Status","PhpCss\\Scanner\\Status\\Selector","PhpCss\\Scanner\\Status\\Selector\\Attribute","PhpCss\\Scanner\\Status\\Text\\Double","PhpCss\\Scanner\\Status\\Text\\Single","PhpCss\\Scanner\\Token","Psr\\Http\\Message\\MessageInterface","Psr\\Http\\Message\\RequestInterface","Psr\\Http\\Message\\ResponseInterface","Psr\\Http\\Message\\ServerRequestInterface","Psr\\Http\\Message\\StreamInterface","Psr\\Http\\Message\\UploadedFileInterface","Psr\\Http\\Message\\UriInterface","Psr\\Log\\AbstractLogger","Psr\\Log\\InvalidArgumentException","Psr\\Log\\LogLevel","Psr\\Log\\LoggerAwareInterface","Psr\\Log\\LoggerAwareTrait","Psr\\Log\\LoggerInterface","Psr\\Log\\LoggerTrait","Psr\\Log\\NullLogger","Swagger\\Analyser","Swagger\\Analysis","Swagger\\Annotations\\AbstractAnnotation","Swagger\\Annotations\\Contact","Swagger\\Annotations\\Definition","Swagger\\Annotations\\Delete","Swagger\\Annotations\\ExternalDocumentation","Swagger\\Annotations\\Get","Swagger\\Annotations\\Head","Swagger\\Annotations\\Header","Swagger\\Annotations\\Info","Swagger\\Annotations\\Items","Swagger\\Annotations\\License","Swagger\\Annotations\\Operation","Swagger\\Annotations\\Options","Swagger\\Annotations\\Parameter","Swagger\\Annotations\\Patch","Swagger\\Annotations\\Path","Swagger\\Annotations\\Post","Swagger\\Annotations\\Property","Swagger\\Annotations\\Put","Swagger\\Annotations\\Response","Swagger\\Annotations\\Schema","Swagger\\Annotations\\SecurityScheme","Swagger\\Annotations\\Swagger","Swagger\\Annotations\\Tag","Swagger\\Annotations\\Xml","Swagger\\Context","Swagger\\Logger","Swagger\\Processors\\AugmentDefinitions","Swagger\\Processors\\AugmentOperations","Swagger\\Processors\\AugmentParameters","Swagger\\Processors\\AugmentProperties","Swagger\\Processors\\BuildPaths","Swagger\\Processors\\CleanUnmerged","Swagger\\Processors\\HandleReferences","Swagger\\Processors\\InheritProperties","Swagger\\Processors\\MergeIntoSwagger","Swagger\\Serializer","Swagger\\StaticAnalyser","Swagger\\Util","Symfony\\Component\\Finder\\Comparator\\Comparator","Symfony\\Component\\Finder\\Comparator\\DateComparator","Symfony\\Component\\Finder\\Comparator\\NumberComparator","Symfony\\Component\\Finder\\Exception\\AccessDeniedException","Symfony\\Component\\Finder\\Exception\\ExceptionInterface","Symfony\\Component\\Finder\\Finder","Symfony\\Component\\Finder\\Glob","Symfony\\Component\\Finder\\Iterator\\CustomFilterIterator","Symfony\\Component\\Finder\\Iterator\\DateRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\DepthRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\ExcludeDirectoryFilterIterator","Symfony\\Component\\Finder\\Iterator\\FileTypeFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilecontentFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilenameFilterIterator","Symfony\\Component\\Finder\\Iterator\\FilterIterator","Symfony\\Component\\Finder\\Iterator\\MultiplePcreFilterIterator","Symfony\\Component\\Finder\\Iterator\\PathFilterIterator","Symfony\\Component\\Finder\\Iterator\\RecursiveDirectoryIterator","Symfony\\Component\\Finder\\Iterator\\SizeRangeFilterIterator","Symfony\\Component\\Finder\\Iterator\\SortableIterator","Symfony\\Component\\Finder\\SplFileInfo","stdClass","Exception","ErrorException","Error","ParseError","TypeError","ArithmeticError","DivisionByZeroError","Closure","Generator","ClosedGeneratorException","DateTime","DateTimeImmutable","DateTimeZone","DateInterval","DatePeriod","LibXMLError","SQLite3","SQLite3Stmt","SQLite3Result","CURLFile","DOMException","DOMStringList","DOMNameList","DOMImplementationList","DOMImplementationSource","DOMImplementation","DOMNode","DOMNameSpaceNode","DOMDocumentFragment","DOMDocument","DOMNodeList","DOMNamedNodeMap","DOMCharacterData","DOMAttr","DOMElement","DOMText","DOMComment","DOMTypeinfo","DOMUserDataHandler","DOMDomError","DOMErrorHandler","DOMLocator","DOMConfiguration","DOMCdataSection","DOMDocumentType","DOMNotation","DOMEntity","DOMEntityReference","DOMProcessingInstruction","DOMStringExtend","DOMXPath","finfo","LogicException","BadFunctionCallException","BadMethodCallException","DomainException","InvalidArgumentException","LengthException","OutOfRangeException","RuntimeException","OutOfBoundsException","OverflowException","RangeException","UnderflowException","UnexpectedValueException","RecursiveIteratorIterator","IteratorIterator","FilterIterator","RecursiveFilterIterator","CallbackFilterIterator","RecursiveCallbackFilterIterator","ParentIterator","LimitIterator","CachingIterator","RecursiveCachingIterator","NoRewindIterator","AppendIterator","InfiniteIterator","RegexIterator","RecursiveRegexIterator","EmptyIterator","RecursiveTreeIterator","ArrayObject","ArrayIterator","RecursiveArrayIterator","SplFileInfo","DirectoryIterator","FilesystemIterator","RecursiveDirectoryIterator","GlobIterator","SplFileObject","SplTempFileObject","SplDoublyLinkedList","SplQueue","SplStack","SplHeap","SplMinHeap","SplMaxHeap","SplPriorityQueue","SplFixedArray","SplObjectStorage","MultipleIterator","SessionHandler","__PHP_Incomplete_Class","php_user_filter","Directory","AssertionError","PDOException","PDO","PDOStatement","PDORow","PharException","Phar","PharData","PharFileInfo","ReflectionException","Reflection","ReflectionFunctionAbstract","ReflectionFunction","ReflectionGenerator","ReflectionParameter","ReflectionType","ReflectionMethod","ReflectionClass","ReflectionObject","ReflectionProperty","ReflectionExtension","ReflectionZendExtension","mysqli_sql_exception","mysqli_driver","mysqli","mysqli_warning","mysqli_result","mysqli_stmt","SimpleXMLElement","SimpleXMLIterator","SoapClient","SoapVar","SoapServer","SoapFault","SoapParam","SoapHeader","XMLReader","XMLWriter","XSLTProcessor","ZipArchive"]}